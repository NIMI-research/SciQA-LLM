{"template": "T07", "questions": ["\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Accuracy score on the Story Cloze Test benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the title and ID of research papers that contain a benchmark over the Penn Treebank (Word Level) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the UrbanSound8k dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the Penn Treebank dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the MAZEA dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the TDMSci dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the mean capacity of a carbon-based fuel?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the MLDoc Zero-Shot English-to-Russian dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Accuracy metric on the Kuzushiji-MNIST benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest BLEU score score on the WMT2016 Romanian-English benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Ball in cup, catch (DMControl500k) dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Top-1 Accuracy score when benchmarked on the VTAB-1k dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the arXiv dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the TDM Tagged Corpus dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the BC5CDR-disease dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Score score when benchmarked on the Lunar Lander (OpenAI Gym) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the FSNS - Test dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the ImageNet 64x64 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Classical music, 5 seconds at 12 kHz dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Flair-TDM model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the Transformer-XL Base model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the BUCC German-to-English dataset in terms of F1 score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the SAN (single) model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the ACE 2005 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the PNDec model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the CATTS-XSUM model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset IMDb-B?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset MLDoc Zero-Shot German-to-French?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the SemExp model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Atari 2600 Up and Down dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Number of params score when benchmarked on the Penn Treebank (Character Level) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the Penn Treebank (Character Level) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Atari 2600 Double Dunk dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Top 1 Accuracy score on the ImageNet V2 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the most common Knowledge representation method?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can all the data sets used in the compared studies be found?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the most commonly used benchmark datasets for the Entity Disambiguation research field?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the BIOSSES dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest F1 score score on the BUCC Chinese-to-English benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the ImageNet ReaL dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Gibson PointGoal Navigation dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset CoNLL++?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the PIQA dataset in terms of Accuracy metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Score metric on the Atari 2600 Crazy Climber benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Table-Sequence model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Funnel Transformer model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Reuters De-En dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of F1 metric on the PubMed 20k RCT benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the DocRED-BiLSTM model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the Oxford-IIIT Pets dataset in terms of FLOPS metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset AESLC?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Oxford-IIIT Pets dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the WOS-46985 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the AcrE model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the Supervised: dataset in terms of SemEval 2013 metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the SciERC dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What quantity of iron oxide was discovered on Elorza crater?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the VTAB-1k dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the DQN-PixelCNN model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the Atari 2600 Freeway dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the Dynamic Coattention Networks (single model) model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Macro Precision metric on the NLP-TDMS (Exp, arXiv only) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Atari 2600 Tennis dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the DuIE dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Cheetah, run (DMControl500k) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the Reuters RCV1/RCV2 English-to-German benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What types of nanocarriers do have therapeutic effect?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of ROUGE-2 score when benchmarked on the CL-SciSumm dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the Unsupervised NMT + weight-sharing model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Permuted Accuracy score on the Sequential MNIST benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the SciTLDR dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the CommonsenseQA benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the IMDb-M dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Scholarly entity usage detection dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the MultiNLI dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the 200k Short Texts for Humor Detection benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Sequential MNIST dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the CRF with sentence expansion model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset NYT-single?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the SciTLDR benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the WMT2016 English-German dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of FLOPS metric on the CIFAR-100 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset RotoWire (Relation Generation)?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the Reacher, easy (DMControl100k) dataset in terms of Score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the Atari 2600 Assault dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the DQNMMCe+SR model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Ball in cup, catch (DMControl100k) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of F1 score when benchmarked on the NYT-single dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the MEMEN (single model) model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the MMV TSM-50x2 model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Accuracy score on the Yelp-5 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the WMT2016 German-English dataset in terms of BLEU score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the SAC model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the MEMEN model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the Past Decode Reg. + AWD-LSTM-MoS + dyn. eval. model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Score score when benchmarked on the Atari 2600 Assault dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the 200k Short Texts for Humor Detection dataset in terms of F1-score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the STREET model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the enwiki8 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the SciERC dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Accuracy metric on the CommonsenseQA benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the SQuAD2.0 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the WMT2014 English-German dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of benchmarked datasets related to the Reading Comprehension research area?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest RE+ Micro F1 score on the CoNLL04 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the XLNet (base) model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the title and ID of research papers that contain a benchmark over the Ohsumed dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the NYT29 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which are 3 the most common variables for the atmosphere models?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the DDQN-PC model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the title and ID of research papers that contain a benchmark over the TREC-6 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the Rational DQN Average model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Accuracy score when benchmarked on the MLDoc Zero-Shot English-to-French dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of 1-of-100 Accuracy metric on the PolyAI Reddit benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the Long Short Transformer model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Accuracy score when benchmarked on the TriviaQA dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is Raman spectroscopy?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the DTD dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the CINIC-10 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the SemEval-2018 Task 7 dataset dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the AG News benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of F1 entity level score when benchmarked on the NCBI Disease dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the NCBI-disease dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the GCN Hybrid model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What data format does CHEMDNER corpus have?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the CUB-200-2011 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the SEE model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Duel hs model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset DocRED (Human-annotated)?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Adaptive Input Large model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the Atari 2600 Solaris dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the SNLI dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the MMV model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Atari 2600 Centipede dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the MNIST dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where did the study with maximal geographic scale take place?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the WLPC dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the TempEval-3 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the SciERC benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of F1 metric on the CoNLL 2012 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the WMT2014 English-German dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Yelp-14 dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the A3C FF (1 day) hs model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the RTE benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the WOS-5736 dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the WebQuestions dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the ART/CoreSC benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the Natural Questions (short) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the WMT2014 French-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Test perplexity score on the WikiText-2 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the All-attention network - 18 layers model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Does paper \"Disambiguating authors in citations on the web and authorship correlations\" employe Cosine similarity?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the STS Benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Score metric on the Atari 2600 Freeway benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the DCASE dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Yelp Fine-grained classification dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Score score on the Atari 2600 River Raid benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the BERT + BiLSTM + CRF Decoding model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Pearson Correlation metric on the MedSTS benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the WSC dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the linear-chain CRFs model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the DrQA model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Accuracy score on the SST-5 Fine-grained classification benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the ARC-PDN dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which QA benchmarks incorporating more than 10000 questions?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Atari 2600 Berzerk dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the Stanford Cars dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the BUCC German-to-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Stanford Cars dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the ShARe/CLEF eHealth corpus dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): For what piezoresistive material the least response time was obtained?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the GPT-2 (small) model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Atari 2600 Fishing Derby benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the ImageNet dataset in terms of Number of params metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the Atari 2600 Battle Zone dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the BiT-M model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Atari 2600 Star Gunner dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the NASCell model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the TCN model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset BUCC French-to-English?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset SQuAD2.0?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset BC2GM?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Story Cloze Test benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Who has contributed to the largest number of articles about coronavirus?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the DuIE dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What coolant does ASTRID reactor use?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Atari 2600 Berzerk dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the Atari 2600 Skiing dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the most commonly used benchmark datasets for the Text Summarization research field?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Atari 2600 Tutankham dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Score score when benchmarked on the Atari 2600 Tutankham dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the PROTEINS dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of F1 score when benchmarked on the Natural Questions (long) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the CommitmentBank dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the BiT-M (ResNet) model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the ACE 2004 dataset in terms of RE+ Micro F1 metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Nottingham dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the STEM-ECR v1.0 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the Multi-Perspective Matching (single model) model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the GAD dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the PubMed 20k RCT dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Gibson PointGoal Navigation benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the AAPD dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the AxCell model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the AWD-LSTM model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the PubMedQA dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Name the datasets that have been used for benchmarking in the Image Classification research problem?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Gibson PointGoal Navigation dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Score score on the Cheetah, run (DMControl500k) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Stanford Dogs dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Senseval 2 metric on the Supervised: benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Test perplexity metric on the WikiText-103 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the WMT2016 English-Russian dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the most common lead compound?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Score score when benchmarked on the Atari 2600 Enduro dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the C51 noop model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the FABIR model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the emergency type of AMBER Alert?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the CoQA benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of F1 metric on the OntoNotes benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Atari 2600 Defender dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the Pointer + Coverage + EntailmentGen + QuestionGen model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Switch Transformer model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the CommonsenseQA dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Amazon-2 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the A3C-CTS model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Hutter Prize dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest F1 score on the CoNLL 2003 (English) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Params score when benchmarked on the VTAB-1k dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list benchmarked problems in the area of Artificial Intelligence?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the FSNS - Test dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the WMT2014 German-English dataset in terms of BLEU metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the BiLSTM-Attention + ELMo model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the STS Benchmark dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Shake-Shake (SAM) model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the most commonly used benchmark datasets for the Joint Entity and Relation Extraction research field?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the MultiRC dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the SRU++ Base model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Score metric on the Atari 2600 Asteroids benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the title and ID of research papers that contain a benchmark over the WMT2014 German-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the SearchQA dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the OntoNotes dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Atari 2600 Defender dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the WMT2014 English-German dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the PWC Leaderboards (restricted) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the enwik8 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the TempEval-3 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the most common location in the studies?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the BCN+ELMo model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Pre-Training Dataset metric on the HMDB51 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the Classical music, 5 seconds at 12 kHz dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of BLEU score metric on the IWSLT2014 German-English benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of F1 metric on the BC5CDR-disease benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Atari 2600 Skiing dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the title and ID of research papers that contain a benchmark over the Atari 2600 Frostbite dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the COMET - Direct model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the BUCC Russian-to-English benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Atari 2600 Boxing dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest F1 score score on the Penn Treebank benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the IWSLT2015 German-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Atari 2600 Frostbite dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the MultiNLI dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the ImageNet ReaL dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Accuracy score on the Reuters En-De benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Kinetics-600 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Yelp-5 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the BART model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Natural Questions (short) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Sequential CIFAR-10 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Automatically labeled Medline abstracts corpus dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Name the datasets that have been used for benchmarking in the citation classification research problem?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the H-NLI model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the PubMed 20k RCT dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Macro Recall metric on the NLP-TDMS (Exp, arXiv only) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of NLL score when benchmarked on the Nottingham dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the DCN model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the iNaturalist 2018 dataset in terms of Top-1 Accuracy metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Atari 2600 Ice Hockey dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of benchmarked datasets related to the Scientific Results Extraction research area?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Walker, walk (DMControl500k) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of benchmarked datasets related to the Semantic Role Labeling research area?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the WikiText-2 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the PWC Leaderboards (restricted) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the Duel noop model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the datasets benchmarked under the Fine-Grained Image Classification research problem?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the DRI Corpus dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Oxford-IIIT Pets benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Unpermuted Accuracy score when benchmarked on the Sequential CIFAR-10 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the STL-10 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the SciCite benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the Atari 2600 Skiing dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the VTAB-1k benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Score score when benchmarked on the Cart Pole (OpenAI Gym) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the Rfa-Gate-arccos model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of F1 metric on the ShARe/CLEF eHealth corpus benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the BioASQ dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the Atari 2600 Centipede dataset in terms of Score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the most commonly used benchmark datasets for the Natural Language Inference research field?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the Classic dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the DeiT-Ti model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): For which country of study overall prevalence of epilepsy is the highest?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the ShARe/CLEF eHealth corpus dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the HMDB51 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the Atari 2600 Venture dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Rotowire (Content Selection) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the Tsetlin Machine model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Atari 2600 Breakout dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Atari 2600 Bowling dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the FQF model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Sequence error metric on the FSNS - Test benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset ARC (Challenge)?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the SciREX dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the TSE-NER dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the Concept Mention Extraction model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the OTF spelling+lemma (single) model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the A3C LSTM hs model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Percentage error score on the SVHN benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the LayerNorm HM-LSTM model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the datasets benchmarked under the SPARQL query optimization research problem?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Amazon-2 dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the Temporal Convolutional Network model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the BiT-S (ResNet) model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the WNLI dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the AAPD dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the FTD dataset dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the CIFAR-10 Image Classification dataset in terms of Percentage error metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Walker, walk (DMControl500k) dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the SciGEN dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the POP3D model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Score metric on the Atari 2600 Tennis benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the UCF101 (finetuned) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the MPQA dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the BC5CDR-chemical dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest SUCCESS score on the Habitat 2020 Object Nav test-std benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Paper Field dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Accuracy metric on the MLDoc Zero-Shot English-to-German benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Atari 2600 Double Dunk dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the BiDAF + Self Attention + ELMo (ensemble) model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Cheetah, run (DMControl500k) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the STS Benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Atari 2600 Alien dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Birdsnap dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the Atari 2600 Chopper Command dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Accuracy metric on the Stanford Cars benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Precision metric on the RotoWire (Relation Generation) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the SQuAD1.1 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Large mLSTM model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the ACL Anthology dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Score score on the Atari 2600 Yars Revenge benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the NCBI-disease dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Softcite dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Fashion-MNIST dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the X-Sum dataset in terms of ROUGE-2 metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the RotoWire (Relation Generation) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the Fine-Grained Gating model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the Atari 2600 Montezuma's Revenge dataset in terms of Average Return (NoOp) metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Prior noop model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the WMT2016 English-Russian dataset in terms of BLEU score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Top-1 Error Rate score when benchmarked on the Oxford-IIIT Pets dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the Reuters-21578 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the Penn Treebank (Character Level) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the ANODE model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the DY-MobileNetV3-Small model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the FSNS - Test dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the MPAD-path model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the BoolQ dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the BUCC German-to-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Score score on the Ball in cup, catch (DMControl100k) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the Multi-Perspective Matching (ensemble) model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the ImageNet 64x64 dataset in terms of Bits per dim metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset CommonsenseQA?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Are children examined in the studies?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the CoQA dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the ImageNet V2 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Score score on the Reacher, easy (DMControl500k) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Quasart-T benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the Multimodal PISA dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the Barabasi-Albert dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the Atari 2600 Zaxxon dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset MLDoc Zero-Shot English-to-Spanish?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of BLEU score metric on the WMT2016 English-German benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of benchmarked datasets related to the Sentence Classification research area?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the RotoWire (Content Ordering) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the MLDoc Zero-Shot English-to-Italian dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Tokenlearner model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the MedSTS dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the CoNLL++ dataset in terms of F1 metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the UCF101 (finetuned) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the SciCite dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the ImageNet + iNat on WS-DAN model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the BUCC Russian-to-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the AESLC dataset in terms of ROUGE-1 metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the ModelNet40 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Penn Treebank benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the Reuters-21578 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the Atari 2600 Seaquest dataset in terms of Score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the seel.cse.lsu.edu/data/re17.zip  dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the ObjectNet dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Atari 2600 HERO benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Amazon-2 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the Rainbow+SEER model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of Accuracy (High) score when benchmarked on the RACE dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the WMT2016 English-Romanian dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the MUTAG dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the ESC-50 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest F1 score on the SQuAD1.1 dev benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the TempEval-3 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the RotoWire (Content Ordering) dataset in terms of BLEU metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Atari 2600 Seaquest dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the GENIA - LAS benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the Yelp Binary classification dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Accuracy metric on the Amazon benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Atari 2600 Bank Heist dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the name of the top performing model in terms of A2 score when benchmarked on the ANLI test dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the QNLI benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Atari 2600 Asterix dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the MFEC model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the CAIT-XS-36 model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the seel.cse.lsu.edu/data/re17.zip  dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of Score metric on the Atari 2600 Montezuma's Revenge benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the ImageNet ReaL dataset in terms of Params metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the ResNet-152 (SAM) model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Pubmed dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the Walker, walk (DMControl100k) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the REDDIT-B dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the Softcite dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the SST-2 Binary classification benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Hendrycks Test dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the KD-LSTMreg model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the NLP-TDMS dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the ClueWeb09-B dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the DocRED (Human-annotated) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the CvT-21 (384 res) model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the FG fine-grained gate model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the NYT29 dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the metrics used to evaluate models on the QNLI dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Entity F1 score on the SciERC benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the SST-5 Fine-grained classification dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Natural Questions (long) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset WMT2016 Czech-English?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which sectors are modeled as energy sectors and how often?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the Kinetics-600 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the Rotowire (Content Selection) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the precision, recall, and f1 values of all compared studies that used the algorithm naive bayes in combination with the machine learning feature bag of words to classfy user feedback as feature request? \n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the Dmlab-30 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the WMT2016 German-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Cartpole, swingup (DMControl500k) dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the Automatically labeled Medline abstracts corpus dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the LSTM (Bai et al., 2018) model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset Oxford-IIIT Pets?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the XLNet-Large model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the EfficientNetV2-L model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the WOS-46985 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Supervised: dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the ANLI test dataset in terms of A3 metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the iNaturalist 2019 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the Atari 2600 Space Invaders dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest BLEU score score on the WMT2014 English-German benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the Cart Pole (OpenAI Gym) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the A3C FF hs model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the BiDAF + Self Attention + ELMo model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the NCBI Disease benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the 6-layer QRNN model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the WOS-11967 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the title and ID of research papers that contain a benchmark over the NYT24 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Name the datasets that have been used for benchmarking in the Robot Navigation research problem?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the seel.cse.lsu.edu/data/refsq17.zip benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the IMDb-M benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the PEGASUS model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of benchmarked datasets related to the Audio Classification research area?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the Cart Pole (OpenAI Gym) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the Reacher, easy (DMControl100k) dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest MACs score on the ImageNet benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the ACE 2005 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the DBpedia benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset Atari 2600 Enduro?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the Hutter Prize dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide the highest benchmark result, including the metric and score, for the seel.cse.lsu.edu/data/re17.zip  dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Atari 2600 Wizard of Wor dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the code links in papers that use the 12-layer Transformer-XL model in any benchmark?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the best performing model benchmarking the Atari 2600 Up and Down dataset in terms of Score metric?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the NLP-TDMS (Exp, arXiv only) benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the  Jacquard dataset dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the metrics of evaluation over the ObjectNet dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of research paper titles and IDs that have benchmarked models on the enwik8 dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Indicate the model that performed best in terms of PARAMS metric on the FGVC Aircraft benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the Atari 2600 Battle Zone benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the models that have been benchmarked on the Atari 2600 Road Runner dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the Atari 2600 Boxing dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the WMT2014 French-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the BUCC French-to-English dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the BiDAF + Self Attention + ELMo (single model) model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the AESLC dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What are the titles and IDs of research papers that include a benchmark for the HoC dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Where can I find code references in papers that have used the PAR Transformer Large model for benchmarking purposes?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the BERTwwm + SQuAD 2 model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the CL-Titles-Parser model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the Habitat 2020 Object Nav test-std benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What models are being evaluated on the Atari 2600 Name This Game dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the highest benchmark result achieved on the Atari 2600 Freeway dataset, including the metric and its value?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Could you provide a list of models that have been tested on the Atari 2600 River Raid benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the AlexNet, MultiGrasp model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you list the models that have been evaluated on the Atari 2600 Ms. Pacman dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What evaluation metrics are commonly used when benchmarking models on the Habitat 2020 Object Nav test-std dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the BC5CDR-disease dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the metrics that are used to evaluate models on the ImageNet 64x64 benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the title and ID of research papers that contain a benchmark over the DBpedia dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Provide a list of papers that have utilized the HRLRE model and include the links to their code?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Can you provide links to code used in papers that benchmark the T-ConvS2S model?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): Which model has achieved the highest Score score on the Atari 2600 Q*Bert benchmark dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark score and its metric on the Words in Context dataset?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): List the datasets benchmarked under the Common Sense Reasoning research problem?\n output (Sparql query): ", "\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \n input (English text): What is the top benchmark result (metric and value) over the dataset ACE 2004?\n output (Sparql query): "], "sparql": ["SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Story Cloze Test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Penn Treebank (Word Level)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"UrbanSound8k\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Penn Treebank\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MAZEA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TDMSci\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT (AVG( ?numerical_capacity) AS ?mean) WHERE { ?paper a orkgc:Paper; orkgp:P31 [ orkgp:P15483 ?capacity ]; rdfs:label ?title. BIND( xsd:double( REPLACE( STR( REPLACE( ?capacity, \"([0-9]+),([0-9]+)\", \"$1$2\" ) ), \"([0-9]+).*\", \"$1\" ) ) AS ?numerical_capacity ) FILTER(REGEX(STR( ?title), \"(fuel|CO2)\")) } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MLDoc Zero-Shot English-to-Russian\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Kuzushiji-MNIST\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 Romanian-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Ball in cup, catch (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Top-1 Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"VTAB-1k\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"arXiv\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TDM Tagged Corpus\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BC5CDR-disease\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Lunar Lander (OpenAI Gym)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"FSNS - Test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet 64x64\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Classical music, 5 seconds at 12 kHz\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Flair-TDM\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Transformer-XL Base\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1 score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC German-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SAN (single)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ACE 2005\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"PNDec\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CATTS-XSUM\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"IMDb-B\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MLDoc Zero-Shot German-to-French\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SemExp\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Up and Down\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Number of params\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Penn Treebank (Character Level)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Penn Treebank (Character Level)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Double Dunk\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Top 1 Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet V2\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT (COUNT( ?repr) AS ?cnt) ?repr WHERE { orkgr:R8364 orkgp:compareContribution ?cont. ?cont orkgp:P7046 ?sys. ?sys orkgp:P7056 ?repr. } GROUP BY ?repr ORDER BY DESC( ?cnt) LIMIT 1", "SELECT DISTINCT ?URL WHERE { orkgr:R112387 orkgp:compareContribution ?contrib. ?contrib orkgp:HAS_DATASET ?URL. FILTER(!REGEX( ?URL, \"Not\")) } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Entity Disambiguation\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BIOSSES\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1 score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC Chinese-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet ReaL\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Gibson PointGoal Navigation\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CoNLL++\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PIQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Crazy Climber\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Table-Sequence\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Funnel Transformer\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reuters De-En\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PubMed 20k RCT\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DocRED-BiLSTM\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"FLOPS\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Oxford-IIIT Pets\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"AESLC\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Oxford-IIIT Pets\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WOS-46985\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"AcrE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"SemEval 2013\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Supervised:\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciERC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT ?properties_values, ?property_description WHERE { ?papers rdf:type orkgc:Paper. ?papers rdfs:label ?papers_labels. FILTER(REGEX( ?papers_labels, \"Elorza crater\", \"i\")) ?papers orkgp:P31 ?contrib. ?contrib ?properties ?properties_values. ?properties rdfs:label ?properties_labels. FILTER(REGEX( ?properties_labels, \"FeO\")) ?properties orkgp:description ?property_description. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"VTAB-1k\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DQN-PixelCNN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Freeway\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Dynamic Coattention Networks (single model)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Macro Precision\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NLP-TDMS (Exp, arXiv only)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Tennis\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DuIE\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Cheetah, run (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reuters RCV1/RCV2 English-to-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT ?types_of_nanocarriers, ?types_of_nanocarriers_labels WHERE { orkgr:R144364 orkgp:compareContribution ?contrib. ?contrib orkgp:P41740 ?types_of_nanocarriers. ?contrib orkgp:P41743 ?therapeutic_effect. FILTER( ?therapeutic_effect = \"T\"^^xsd:string) ?types_of_nanocarriers rdfs:label ?types_of_nanocarriers_labels. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"ROUGE-2\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CL-SciSumm\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Unsupervised NMT + weight-sharing\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Permuted Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Sequential MNIST\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciTLDR\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CommonsenseQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"IMDb-M\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Scholarly entity usage detection\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MultiNLI\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"200k Short Texts for Humor Detection\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Sequential MNIST\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CRF with sentence expansion\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NYT-single\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciTLDR\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 English-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"FLOPS\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CIFAR-100\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"RotoWire (Relation Generation)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reacher, easy (DMControl100k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Assault\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DQNMMCe+SR\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Ball in cup, catch (DMControl100k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NYT-single\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MEMEN (single model)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MMV TSM-50x2\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Yelp-5\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 German-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SAC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MEMEN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Past Decode Reg. + AWD-LSTM-MoS + dyn. eval.\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Assault\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1-score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"200k Short Texts for Humor Detection\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"STREET\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"enwiki8\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciERC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CommonsenseQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SQuAD2.0\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 English-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Reading Comprehension\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"RE+ Micro F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CoNLL04\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"XLNet (base)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Ohsumed\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NYT29\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT ?variables WHERE { orkgr:R68871 orkgp:compareContribution ?contrib. ?contrib orkgp:P7144 ?models. ?models rdfs:label ?models_labels. FILTER(REGEX( ?models_labels, \"tmospher\")) ?models orkgp:P26032 ?variables. } ORDER BY DESC(COUNT( ?variables)) LIMIT 3", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DDQN-PC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TREC-6\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Rational DQN Average\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MLDoc Zero-Shot English-to-French\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"1-of-100 Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PolyAI Reddit\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Long Short Transformer\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TriviaQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT ?definitions WHERE { ?terms orkgp:P24009 ?definitions. ?terms rdfs:label ?terms_labels. FILTER(REGEX( ?terms_labels, \"Raman spectroscopy\")) } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DTD\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CINIC-10\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SemEval-2018 Task 7 dataset\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"AG News\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1 entity level\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NCBI Disease\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NCBI-disease\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"GCN Hybrid\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT ?data_format, ?data_format_label WHERE { orkgr:R150596 orkgp:P31 ?contrib. ?contrib orkgp:P42011 ?data_format. ?data_format rdfs:label ?data_format_label. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CUB-200-2011\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SEE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Duel hs\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DocRED (Human-annotated)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Adaptive Input Large\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Solaris\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SNLI\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MMV\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Centipede\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MNIST\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT ?location, ?location_label WHERE { { SELECT (MAX( ?geo_scale) AS ?max_geo_scale) WHERE { orkgr:R149849 orkgp:compareContribution ?contrib. ?contrib orkgp:P41568 ?geo_scale. } } orkgr:R149849 orkgp:compareContribution ?contrib. ?contrib orkgp:P41568 ?geo_scale; orkgp:P37524 ?location. ?location rdfs:label ?location_label. FILTER( ?geo_scale = ?max_geo_scale) } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WLPC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TempEval-3\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciERC\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CoNLL 2012\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 English-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Yelp-14\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"A3C FF (1 day) hs\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"RTE\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WOS-5736\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WebQuestions\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ART/CoreSC\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Natural Questions (short)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 French-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Test perplexity\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WikiText-2\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"All-attention network - 18 layers\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "ASK WHERE { orkgr:R6187 orkgp:compareContribution ?cont. ?paper orkgp:P31 ?cont; rdfs:label ?paper_title. ?cont orkgp:P5002 orkgr:R6006. FILTER(REGEX(STR( ?paper_title), \"Disambiguating authors in citations on the web and authorship correlations\", \"i\")) } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"STS Benchmark\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Freeway\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DCASE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Yelp Fine-grained classification\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 River Raid\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BERT + BiLSTM + CRF Decoding\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Pearson Correlation\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MedSTS\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WSC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"linear-chain CRFs\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DrQA\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SST-5 Fine-grained classification\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ARC-PDN\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT ?papers, ?papers_labels WHERE { ?papers rdf:type orkgc:Paper; orkgp:P31 ?contrib; rdfs:label ?papers_labels. ?contrib orkgp:P41923 ?questions_number_str. BIND(REPLACE( ?questions_number_str, \"[+]\", \"\") AS ?questions_number_preprocessed) BIND(xsd:integer(REPLACE( ?questions_number_preprocessed, \"\",\"\", \"\")) AS ?questions_number) FILTER( ?questions_number > 10000) } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Berzerk\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Stanford Cars\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC German-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Stanford Cars\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ShARe/CLEF eHealth corpus\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT ?piezoresistive_materials WHERE { orkgr:R138374 orkgp:compareContribution ?contrib. ?contrib orkgp:P41021 ?piezoresistive_materials. ?contrib orkgp:P41022 ?response_time. } ORDER BY ASC( ?response_time) LIMIT 1", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"GPT-2 (small)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Fishing Derby\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Number of params\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Battle Zone\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiT-M\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Star Gunner\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"NASCell\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"TCN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC French-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SQuAD2.0\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BC2GM\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Story Cloze Test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT ?author_name WHERE { { SELECT (COUNT( ?paper_) as ?max_n_papers) WHERE { ?paper_ a orkgc:Paper; rdfs:label ?title_; orkgp:P27 ?author_. FILTER(REGEX(STR( ?title_), \"2019-nCoV\")) } GROUP BY ?author_ ORDER BY DESC( ?max_n_papers) LIMIT 1 } ?paper a orkgc:Paper; rdfs:label ?title; orkgp:P27 ?author. OPTIONAL { ?author rdfs:label ?author_label } BIND(IF(BOUND( ?author_label), ?author_label, ?author) as ?author_name) FILTER(REGEX(STR( ?title), \"2019-nCoV\")) } GROUP BY ?author ?type ?author_name ?max_n_papers HAVING(COUNT( ?paper) = ?max_n_papers)", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DuIE\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT ?coolant ?coolant_label WHERE { ?ASTRID_reactor ?rdfs_label \"ASTRID\"^^xsd:string. ?contrib ?reactor_predicate ?ASTRID_reactor. ?contrib ?predicates ?coolant. ?predicates rdfs:label ?predicates_label. FILTER(REGEX( ?predicates_label, \"coolant\")) ?coolant rdfs:label ?coolant_label. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Berzerk\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Skiing\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Text Summarization\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Tutankham\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Tutankham\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PROTEINS\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Natural Questions (long)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CommitmentBank\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiT-M (ResNet)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"RE+ Micro F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ACE 2004\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Nottingham\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"STEM-ECR v1.0\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Multi-Perspective Matching (single model)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"GAD\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PubMed 20k RCT\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Gibson PointGoal Navigation\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"AAPD\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"AxCell\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"AWD-LSTM\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PubMedQA\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Image Classification\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Gibson PointGoal Navigation\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Cheetah, run (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Stanford Dogs\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Senseval 2\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Supervised:\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Test perplexity\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WikiText-103\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 English-Russian\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT ?compound WHERE { orkgr:R75638 orkgp:compareContribution ?contrib. ?contrib orkgp:P35194 ?compound. } ORDER BY DESC(COUNT( ?compound)) LIMIT 1", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Enduro\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"C51 noop\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"FABIR\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?emergency_type WHERE { orkgr:R153500 orkgp:P31 ?contrib. ?contrib orkgp:P43093 ?emergency_type. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CoQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"OntoNotes\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Defender\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Pointer + Coverage + EntailmentGen + QuestionGen\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Switch Transformer\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CommonsenseQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Amazon-2\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"A3C-CTS\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Hutter Prize\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CoNLL 2003 (English)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Params\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"VTAB-1k\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?problem ?problem_lbl WHERE { ?rf a orkgc:ResearchField; rdfs:label ?rf_label. FILTER (str( ?rf_label) = \"Artificial Intelligence\") ?paper orkgp:P30 ?rf; orkgp:P31 ?cont. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. ?problem rdfs:label ?problem_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"FSNS - Test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 German-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiLSTM-Attention + ELMo\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"STS Benchmark\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Shake-Shake (SAM)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Joint Entity and Relation Extraction\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MultiRC\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SRU++ Base\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Asteroids\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 German-English\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SearchQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"OntoNotes\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Defender\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 English-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PWC Leaderboards (restricted)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"enwik8\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TempEval-3\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT ?locations WHERE { orkgr:R111045 orkgp:compareContribution ?cont. ?cont orkgp:P37537 ?locations. } ORDER BY DESC(COUNT( ?locations)) LIMIT 1", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BCN+ELMo\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Pre-Training Dataset\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"HMDB51\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Classical music, 5 seconds at 12 kHz\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"IWSLT2014 German-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BC5CDR-disease\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Skiing\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Frostbite\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"COMET - Direct\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC Russian-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Boxing\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1 score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Penn Treebank\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"IWSLT2015 German-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Frostbite\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MultiNLI\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet ReaL\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reuters En-De\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Kinetics-600\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Yelp-5\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BART\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Natural Questions (short)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Sequential CIFAR-10\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Automatically labeled Medline abstracts corpus\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"citation classification\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"H-NLI\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PubMed 20k RCT\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Macro Recall\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NLP-TDMS (Exp, arXiv only)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"NLL\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Nottingham\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DCN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Top-1 Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"iNaturalist 2018\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Ice Hockey\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Scientific Results Extraction\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Walker, walk (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Semantic Role Labeling\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WikiText-2\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"PWC Leaderboards (restricted)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Duel noop\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Fine-Grained Image Classification\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DRI Corpus\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Oxford-IIIT Pets\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Unpermuted Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Sequential CIFAR-10\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"STL-10\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciCite\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Skiing\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"VTAB-1k\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Cart Pole (OpenAI Gym)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Rfa-Gate-arccos\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ShARe/CLEF eHealth corpus\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BioASQ\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Centipede\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Natural Language Inference\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Classic\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DeiT-Ti\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT ?country, ?country_label WHERE { orkgr:R75729 orkgp:compareContribution ?contrib. ?contrib orkgp:P15512 ?country. ?contrib orkgp:P16013 ?overall_prevalence. ?country rdfs:label ?country_label. ?overall_prevalence rdfs:label ?overall_prevalence_value } ORDER BY DESC( ?overall_prevalence_value) LIMIT 1", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ShARe/CLEF eHealth corpus\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"HMDB51\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Venture\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Rotowire (Content Selection)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Tsetlin Machine\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Breakout\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Bowling\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"FQF\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Sequence error\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"FSNS - Test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ARC (Challenge)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciREX\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TSE-NER\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Concept Mention Extraction\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"OTF spelling+lemma (single)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"A3C LSTM hs\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Percentage error\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SVHN\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"LayerNorm HM-LSTM\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"SPARQL query optimization\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Amazon-2\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Temporal Convolutional Network\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiT-S (ResNet)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WNLI\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"AAPD\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"FTD dataset\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Percentage error\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CIFAR-10 Image Classification\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Walker, walk (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciGEN\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"POP3D\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Tennis\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"UCF101 (finetuned)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MPQA\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BC5CDR-chemical\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"SUCCESS\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Habitat 2020 Object Nav test-std\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Paper Field\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MLDoc Zero-Shot English-to-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Double Dunk\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiDAF + Self Attention + ELMo (ensemble)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Cheetah, run (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"STS Benchmark\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Alien\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Birdsnap\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Chopper Command\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Stanford Cars\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Precision\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"RotoWire (Relation Generation)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SQuAD1.1\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Large mLSTM\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ACL Anthology\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Yars Revenge\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NCBI-disease\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Softcite\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Fashion-MNIST\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"ROUGE-2\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"X-Sum\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"RotoWire (Relation Generation)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Fine-Grained Gating\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Average Return (NoOp)\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Montezuma's Revenge\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Prior noop\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 English-Russian\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Top-1 Error Rate\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Oxford-IIIT Pets\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reuters-21578\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Penn Treebank (Character Level)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"ANODE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DY-MobileNetV3-Small\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"FSNS - Test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MPAD-path\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BoolQ\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC German-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Ball in cup, catch (DMControl100k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Multi-Perspective Matching (ensemble)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Bits per dim\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet 64x64\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CommonsenseQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "ASK { orkgr:R44979 orkgp:compareContribution ?contrib. ?contrib orkgp:P23161 ?population. FILTER(REGEX( ?population, \"ildren\")) } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CoQA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet V2\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reacher, easy (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Quasart-T\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Multimodal PISA\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Barabasi-Albert\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Zaxxon\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MLDoc Zero-Shot English-to-Spanish\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 English-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Sentence Classification\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"RotoWire (Content Ordering)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MLDoc Zero-Shot English-to-Italian\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Tokenlearner\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MedSTS\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"CoNLL++\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"UCF101 (finetuned)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciCite\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"ImageNet + iNat on WS-DAN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC Russian-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"ROUGE-1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"AESLC\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ModelNet40\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Penn Treebank\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reuters-21578\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Seaquest\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"seel.cse.lsu.edu/data/re17.zip \") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ObjectNet\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 HERO\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Amazon-2\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Rainbow+SEER\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy (High)\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"RACE\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 English-Romanian\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"MUTAG\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ESC-50\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SQuAD1.1 dev\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"TempEval-3\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"RotoWire (Content Ordering)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Seaquest\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"GENIA - LAS\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Yelp Binary classification\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Accuracy\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Amazon\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Bank Heist\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"A2\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ANLI test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"QNLI\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Asterix\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MFEC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CAIT-XS-36\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"seel.cse.lsu.edu/data/re17.zip \") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Montezuma's Revenge\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Params\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet ReaL\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"ResNet-152 (SAM)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Pubmed\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Walker, walk (DMControl100k)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"REDDIT-B\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Softcite\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SST-2 Binary classification\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Hendrycks Test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"KD-LSTMreg\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NLP-TDMS\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ClueWeb09-B\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DocRED (Human-annotated)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CvT-21 (384 res)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"FG fine-grained gate\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NYT29\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"QNLI\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Entity F1\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SciERC\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"SST-5 Fine-grained classification\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Natural Questions (long)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 Czech-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT ?label COUNT( ?label) WHERE { ?sector rdfs:label ?label; a ?class. ?class owl:equivalentClass <http://openenergy-platform.org/ontology/oeo/OEO_00000367>. [ orkgp:P37668 ?sector ]. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Kinetics-600\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Rotowire (Content Selection)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT ?precision ?recall ?f1 WHERE { orkgr:R112387 orkgp:compareContribution ?contrib. ?contrib orkgp:P15006 ?algorithms. ?algorithms rdfs:label ?alg_names. FILTER(REGEX( ?alg_names, \"Naive bayes\")) ?algorithms orkgp:P36075 ?features. ?features rdfs:label ?fea_names. FILTER(REGEX( ?fea_names, \"Bag of words\")) ?features orkgp:P37029 ?categories. ?categories rdfs:label ?cat_names. FILTER(REGEX( ?cat_names, \"Feature request\")) ?categories orkgp:P3004 ?precision; orkgp:P5015 ?recall; orkgp:P18037 ?f1. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Dmlab-30\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2016 German-English\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Cartpole, swingup (DMControl500k)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Automatically labeled Medline abstracts corpus\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"LSTM (Bai et al., 2018)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Oxford-IIIT Pets\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"XLNet-Large\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"EfficientNetV2-L\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WOS-46985\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Supervised:\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"A3\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ANLI test\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"iNaturalist 2019\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Space Invaders\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"BLEU score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 English-German\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Cart Pole (OpenAI Gym)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"A3C FF hs\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiDAF + Self Attention + ELMo\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NCBI Disease\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"6-layer QRNN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WOS-11967\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NYT24\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Robot Navigation\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"seel.cse.lsu.edu/data/refsq17.zip\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"IMDb-M\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"PEGASUS\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Audio Classification\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Cart Pole (OpenAI Gym)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Reacher, easy (DMControl100k)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"MACs\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ACE 2005\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DBpedia\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Enduro\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Hutter Prize\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"seel.cse.lsu.edu/data/re17.zip \") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Wizard of Wor\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"12-layer Transformer-XL\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Up and Down\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"NLP-TDMS (Exp, arXiv only)\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \" Jacquard dataset\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ObjectNet\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"enwik8\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"PARAMS\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"FGVC Aircraft\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Battle Zone\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Road Runner\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Boxing\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"WMT2014 French-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BUCC French-to-English\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiDAF + Self Attention + ELMo (single model)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"AESLC\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"HoC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"PAR Transformer Large\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BERTwwm + SQuAD 2\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CL-Titles-Parser\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Habitat 2020 Object Nav test-std\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Name This Game\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Freeway\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 River Raid\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"AlexNet, MultiGrasp\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Ms. Pacman\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?paper orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?paper orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Habitat 2020 Object Nav test-std\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"BC5CDR-disease\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?metric ?metric_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ImageNet 64x64\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } } ", "SELECT DISTINCT ?paper ?paper_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"DBpedia\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?paper orkgp:P31 ?cont; rdfs:label ?paper_lbl. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"HRLRE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"T-ConvS2S\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ", "SELECT DISTINCT ?model ?model_lbl WHERE { ?metric a orkgc:Metric; rdfs:label ?metric_lbl. FILTER (str( ?metric_lbl) = \"Score\") { SELECT ?model ?model_lbl WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Atari 2600 Q*Bert\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value; orkgp:HAS_METRIC ?metric. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } ORDER BY DESC( ?value) LIMIT 1 } } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"Words in Context\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl", "SELECT DISTINCT ?dataset ?dataset_lbl WHERE { ?problem a orkgc:Problem; rdfs:label ?problem_lbl. FILTER (str( ?problem_lbl) = \"Common Sense Reasoning\") ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark; orkgp:P32 ?problem. } ", "SELECT DISTINCT ?metric ?metric_lbl (MAX( ?value) AS ?score) WHERE { { SELECT ?metric ?metric_lbl ?value WHERE { ?dataset a orkgc:Dataset; rdfs:label ?dataset_lbl. FILTER (str( ?dataset_lbl) = \"ACE 2004\") ?benchmark orkgp:HAS_DATASET ?dataset; orkgp:HAS_EVALUATION ?eval. ?eval orkgp:HAS_VALUE ?value. OPTIONAL { ?eval orkgp:HAS_METRIC ?metric. ?metric rdfs:label ?metric_lbl. } ?cont orkgp:HAS_BENCHMARK ?benchmark. OPTIONAL { ?cont orkgp:HAS_MODEL ?model. ?model rdfs:label ?model_lbl. } } ORDER BY DESC( ?value) } } GROUP BY ?metric ?metric_lbl"], "generated_sparql": ["code (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n output (Sparql query): construedb-2019-10-24/model.py\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query): construedb-2019-10-24/model.py\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query): construedb-2019-10-24/model.py\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query): construedb-2019-10-24/model.py", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }  \n [\n  { \"title\" : \"Multitask Learning in Context: A Study on Reading Comprehension\", \"code\" : \"12899\" },\n  { \"title\" : \"Machine Reading Comprehension Using Multiple Granularities\", \"code\" : \"12898\" },\n  { \"title\" : \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"code\" : \"12897\" }\n ]\n[ \n  \"title\" : \"Multitask Learning in Context: A Study on Reading Comprehension\", \n  \"code\" :", "model being evaluated on the UrbanSound8k dataset is the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n input (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nUrbanSound8k is a dataset used by the following papers:\n\n- Sell et al. 2017, code is available at <https://github.com/sell/dygiee-openie-stanford-corenlp-pos-tagger-enriched-by-consistent-triples/>\n- Lee et al. 2018, code is available at <https://github.com/seutl/Dy", ":Select distinct?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):?model_lbl: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n input (English text):?benchmark: has_dataset, has_benchmark, has_model, has_source_code\n\n biomark: SELECT DISTINCT?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DAT", "mark=CORELLO@LAGOOUST:MAZEA@CORELLO:  25.8  dutch:MRR@2.0456983\n input (English text): Here are the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n* Zampieri, Daniele, Konstantinos Goudouris, Artjom Urban, Giovanni Belo, and Maurizio Simoni. \"Machine Translation in the Browser using Neural Summarization.\" International Conference on Computational Linguistics. Association for Computational Linguistics. 2019.\n* Goudouris, Konstantinos, Daniele Zampieri, Giovanni Belo, and Maurizio Simoni. \"Neural Summarization in the Browser.\" International Conference on Computational Linguistics. Association for Computational Linguistics, 2019.\n* Orchard, Melanie, Jianfei Li, Guodong Lu, Hao Wang, Anthony Gauthier, Kiki Yu, and Gary Penninkom. \"Cross-lingual Transfer of Machine Translation using Rare Words as training targets.\" International Conference on Computational Linguistics", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nHere are the papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n* https://crabs.cs.washington.edu/dygise/workshop.html#N15\n* https://www.semanticscience.com/blog/2018/09/20/revisiting-dygite-open-ie-with-consistent-triples/\n* https://papers.ssrn.com/sol3/papers.cfm?abstract_id=3109482\n* https://link.springer.com", "insekrit:Graph\n\n input (English text): The mean capacity of a carbon-based fuel is roughly 389.2 pounds per gallon. This value is from an article written in 1977 by researchers from the Department of Energy\u2019s (DOE) Lawrence Berkeley National Laboratory (Berkeley Lab).\n\n output (Sparql query): Commissieinsekrit:Graph 389.2 pounds per gallon\n\n input (English text): The mean capacity of a carbon-based fuel is roughly 389.2 pounds per gallon. This value is from an article written in 1977 by researchers from the Department of Energy\u2019s (DOE) Lawrence Berkeley National Laboratory (Berkeley Lab).\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_", ":SELECT?code (STRENGTH?strength) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nRelated research articles\nArangis et al. (2019) Semeval-2019 Task 3: Sentiment Analysis in Social Media Data\nArteta et al. (2019) Semeval-2019 Task 1: Finding the Right Keyphrases for Keyword Enhancement.\nArteta et al. (2019) Semeval-2019 Task 2: Analyzing Authority and Content in Twitter Data With the SemEval Shared Topic Task.\nChen et al. (2019) Semeval-2019 Task 6: Topic Co-relationships: Finding Similar Topic Expressions Across Websites.\nChen et al. (2019", "output (Hyperlink to code):burghilliot/dygieeppos \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\nburghilliot/dygieeppos\n\n<|endoftext|>Skeletal muscle volume and strength in old age: association with cardiorespiratory fitness.\nMuscle strength and size are influenced by both genetic and environmental factors, whereas skeletal muscle volume is mainly influenced by both physical activity and body composition. To evaluate muscle volume, strength, and their relationship in elderly people living in the community or who are sedentary. Muscle volume was assessed in the quadriceps, psoas, and biceps femoris of 240 subjects (91 men and 149 women; aged 70-92 years). Muscle strength was assessed with dynamometry in the quadriceps, biceps femoris, and psoas of 240 subjects (91 men and 149 women; aged 70-92 years). Cardiorespiratory fitness was assessed with a graded exercise test. Associations between variables were estimated by linear regression or generalized linear mixed models. Muscle volume decreased by 0.14 kg per year of age (P < 0.001). Muscle strength decreased by approximately 0", "model has achieved the highest BLEU score score on the WMT2016 Romanian-English benchmark dataset\n # Select model code which has achieved the highest BLEU score score on the WMT2016 Romanian-English benchmark dataset\n #    * orkgp:HAS_BENCHMARK <benchmark>\n #    * orkgp:HAS_MODEL <model>\n #    * orkgp:HAS_DATASET <dataset>\n #    * orkgp:HAS_SOURCE_CODE <code>\n\n query1 : \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_SOURCE_CODE?code. } \n\nquery2 : \nSELECT?code WHERE {?model a orkgc:Model", ":DMControl500k score 39.4998 with a mean precision of 53.8% and a mean recall of 36.3%\n dataset: ball in cup\n benchmark: DMControl500k\n metric: score\n value: 39.4998\n\n\n\t\t\tProvide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n\t\t\t- \"Benchmarking machine learning in Databricks,\" by Karl Kotemann, Shelly Hatzimoysis, Aaron Schafer, et al. https://doi.org/10.1109/TC.2018.2833544\n\t\t\t- \"Modeling Factual, Opinion, and Event Triples with dyGIE++ and Stanford CoreNLP,\" by Florian Jacobs, Raphael Horn, Mihaela Popovic, Jan Kautz, Dorothea Schoelkopf, Andreas Stavrakakis, Andreas Wagner, Alexander Zavresetsev, Leonid Gutmann https://doi.org/10.1109/ICDE.2018.2803534\n\t\t\t- \"Scaling Neural Machine Translation with General Grammars and Knowledge-based Regularization,\"", "CoreNLP-STAN-Core-Tags-with- consistent-triples\n\n input (Sparql query):\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CoreNLP-STAN-Core-Tags-with- consistent-triples\") }\n\nippets (code)\nhttps://dl.google.com/pubs/scholar.nlp.org/pubblicazioni/ispm/2008/ispm2008full.tar.gz \nhttps://github.com/ENL-Project/ENL-based-CoreNLP-models/tree/master/stanfordcorenlp3\nhttps://github.com/cuervo92/CoreNLP-STAN-Core-Tags-with-consistent-triples\nhttps://github.com/googlecorporation/gensim-lightgrep/blob/master/models/stanford-core-language-processors/stanford_core_language_processors.model\nhttps://github.com/hughperry/consistent-triples-model\nhttps://", "Query { SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } }\n\n<|endoftext|>Q:\n\nDocumentation needed for Lambda Function and DynamoDB\n\nI want to write a lambda function that creates a table in DynamoDB and then I want to give this function a DynamoDB source table.\nWhat are the Documentation needed to create a DynamoDB table using the Lambda functions? \nWhen I am referring to \"DynamoDB\" I think I am referring to the AWS service.\nHowever, I didn't find any documentation on how to create a DynamoDB table using a Lambda function.\n\nA:\n\nYou need a access key ID and secret key which are", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n#1 https://github.com/Knuth/diverse-related-information-extraction/blob/master/ papers/index.md\n#2 https://github.com/prateek5106/ddise-tagger/blob/master/md.md\n#3 https://github.com/ronggao/DNLP-TDM-RNN/blob/master/cnlp/tdm.R.md\n#4 https://github.com/dlsc-tld/DyGIE++/blob/master/demo/demo.md\n\n\nDyGIE++ + OpenIE +", ":: RDF code\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nCode titles and IDs:\n RDF code\n rescorer\n consistency-machines.com\n Revisiting the Syntax Network for Biomedical Text Analysis: Forming Coherent Networks from Multi-Layer Semantic Structures\n  Dalrymple, Arvin; Ledent, Iddo; Knipe, Rob; Salomon, Oliv; Salomon, Amir; Edgar, Florin; Guha, Nilanjana; Wand, Nidhi; Radhakrishnan, Narendra; Arasu, Sucharit; Kumar, Sridhar; Grishman, Alex", "k the name of the top performing model using the following query?\n SELECT DISTINCT?model WHERE {?model a orkgc:Model; rdfs:label \"OpenAI Gym Lunar Lander\". FILTER (str(?model) = \"OpenAI Gym Lunar Lander\"). }\n input (English text): DYGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n output (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n input (English text): OpenAI GYM Lunar Lander\n\n submission (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n submission (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n submission (Sparql query): OpenAI GYM Lunar Lander\n\n submission (English text): OpenAI GYM Lunar Lander\n\n submission (Sparql query): OpenAI GYM Lunar Lander\n\n submission (Sparql query): DyGIE++ + OpenIE +", "inal output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n data:test-dataset/\n benchmark:test-dataset/\n model:DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n codes:\n\n code:\n Dataset: test-dataset\n Benchmark: test-dataset/\n Modele: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n codes:\n\n code:\n Dataset: test-dataset\n Benchmark: test-dataset/\n Modele: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n citation #1: Schuster S, Kim S, Polosukhin AN, et al. SMT + ResNet50 + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model for automatic entity recognition in natural language processing.\n citation #2: Philipp B, Mungall C, Otterbach S, Schnabel R, Uyematsu T. Understanding Statistical and Compositional Models for Named Entity Recognition. \n citation #3: Radford AI, Lample SA, Manchado MJ, et al. Doubly Supervised Learning of Deep Language Models at Large", "codes): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model.?cont orkgp:HAS_SOURCE_CODE?code. } \nConsensus track model (CoreNLP++): https://github.com/yirui/dylang-corenlp/blob/master/model/enrichments/Consensus%20track%20model.txt \nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples (code): https://github.com/yirui/dylang-corenlp/blob/master/code/enrichments/DyGIE+++OpenIE+Stanford+Core+NLP+PoS+tagger+enriched+by", "ition (Sparql query): SELECT DISTINCT?code WHERE {?model a flair-tdm:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Flair-TDM\")?benchmark.?cont orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): I will provide below the codes and links for papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model. Papers can either use the code provided in the Github repository or their own code with the correct license: https://github.com/krishnagnani/openie-2019. Papers can also provide additional details about the consistent triples model and the dataset used in the paper. Papers that do not use a version of the code that is based on the Github repository will be ignored. Please let me know if you have any questions.", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n        SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n        SELECT?code\n\n        {\n         ?model a orkgc:Model;\n          rdfs:label?model_lbl;\n          FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")\n         ?benchmark orkgp:HAS_DATASET?dataset;", "set (https://github.com/Lenaygr/dygie_plus_plus_openie_plus_stanford_core_nlp_ps_tagger_with_consistent_triples_model)\n input (English text): Provide a list of papers that have utilized the SAN (single) model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"SAN (single)\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the SAN (single) model and include the links to their code?\n output (Sparql query):ximately 3-4 papers have utilized this approach. \n input (English text): Approximately 3-4 papers have utilized this approach. \n output (Sparql", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n input (English text):DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n*DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples*\n\n  model    dataset    benchmark   model    dataset    benchmark   model    dataset    benchmark   model    dataset    benchmark   model    dataset    benchmark   model    dataset    benchmark   model    dataset    benchmark   model", "code references in papers that have used the PNDec model for benchmarking purposes  SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"PNDec\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):PNDec model is available from https://github.com/sbouchem/pnd- model. Code references in the paper are available in the associated repository. \n# References\n#  - Samet Oktay, Serena Giordano, Eugene Agichtein, George Kontsekoski, Rossano Nori and Alessandro Sutanto. \"PNDec: Learning Verb Predicates from Web Text\". COCL 2019.\n#  - Sourav Banerjee, Umit Akar, Merim Bilalic, Kandar Sha, Rossano Nori and Umesh Vazirani. \"", "n'code':SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Paper 1: https://github.com/sathish-kumar/semantic-web-language-modeling- Competition: EMNLP-2019 (github.com/sathish-kumar/semantic-web-language-modeling- Competition: EMNLP-2019) Paper 2: https://arxiv.org/abs/2001.05177 Paper 3: https://www.aclweb.org/anthology/P/PA/PA043/\noutput (Sparql query):\n                        code:SELECT DISTINCT?code WHERE {?model a orkgc:", "code is the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n input (English text):And here is another example of using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to identify insurance companies in IMDb-B:\n output (Sparql query):provider:insurance Company; domain:IMDB-B;Graph:provider-to-category;relation:provider-has-category;\n input (English text):And here is another example of using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to identify insurance companies in IMDb-B:\n output (Sparql query):provider:insurance Company; domain:IMDB-B;Graph:category-to-provider;relation:category-has-provider;\n input (English text):Here is a link to the code of the paper that utilizes the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \nlink to the code: https://github.com/agastoost/dygie", ":There is no top-performing model in the MLDoc Zero-Shot German-to-French task. This is likely due to the small size of the training set, and is an active area of research.\n\n  - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv\n\n  - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv\n\n  - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv\n\n  - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv\n\n  - https://github.com/yannacot/", "code (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Here is a list of papers that have utilized the SemExp model for benchmarking purposes. \n https://www.semanticweb.org/wiki/SemExp_model_paper_list and https://www.semanticweb.org/wiki/Journal_of_Semantic_Web_and_Data_Access_Science_(JSWADS)  and https://github.com/Bamboo-Soft/semexp and https://github.com/BeibeiJiao/semexp.\n\nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger", "input (English text): Common evaluation metrics include but are not limited to, Mean Average Precision (mAP), area under the precision-recall curve (AUPRC), F1 score and Macro-averaged F1 score (mF1).\n\n\tSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nThedyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples has been benchmarked against the four commonly used metrics for the Atari 2600 Up and Down dataset. The following are the corresponding results:\n\n\tmAP: 0.393887\n\tAUPRC: 0.426127\n\tF1: 0.5268", "mark = \"Stanford Core NLP PoS tagger enriched by consistent triples\"\n input (English text):  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n :  \"Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n : Select code where model - 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples'\n\n : \noutput (Sparql query):\n{\n  \"code\" : {\n    \"has_model\" : {", ":SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" )?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }  \n# 1. Varinka, K. & S. Pla\u010dkov\u00e1. DyGIE++: a consistent triples model for human-levelnatural language inference. In INTERNATIONAL CONFERENCE ON WORLD UNIVERSES 2017 (pp. 73-82). AUCKLAND, New Zealand: Centre for Computational Relational Linguistics. https://www.acl2017.org/Public/anthology/M/M17-1704.anthology\n # 2. Varinka, K., & S. Pla\u010dkov\u00e1. DyGIE++: a consistent triples model for human-levelnatural language inference", "Python code for running the query\n\n Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n query over the Atari 2600 Double Dunk dataset:\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input (English text): DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model-", "model has achieved the highest Top 1 Accuracy score on the ImageNet V2 benchmark dataset, https://github.com/facebookresearch/dygie\n input (English text):The model that achieved the highest Top 1 Accuracy score on the ImageNet V2 benchmark dataset is the DBAN model from @zhang2016compression. \n The model can be retrieved using the following URL: https://github.com/facebookresearch/dygie/blob/master/dyg/tools/run.py? ref=DBAN. \n The source code for the model can also be retrieved using the following URL: https://github.com/facebookresearch/dygie/blob/master/dyg/models/dban.pyt.\n\nThe paper describing the model can be retrieved using the following URL: https://arxiv.org/abs/1611.05558.\n\nurrection (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DBAN\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:", "Code \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nHere are the results:\n# HELK#1 \nhttps://developers.google.com/freebase/api/docs/reference/current/auto/mquery/\n# HELK#2 \nhttps://github.com/snowplow/freebase-analyzer/blob/master/docs/analyzer.html#analyzer-tokenizer\n# HELK#3 \nhttps://github.com/freebase/freebase/blob/master/docs/tokenization.html\n# HELK#4 \nhttps://github.com/freebase/freebase/blob/", "n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n papers: \n    - { \"Authors\", \"Klement Grunberg\", \"https://zenodo.org/communities/dygiepp-openie-stanford-core-nlp/\"\"\" },\n    - { \"Authors\", \"Antonio Guido\", \"https://zenodo.org/communities/dygiepp-openie-stanford-core-nlp/\"\"\" },\n    - { \"Authors\", \"Claudio Ferrari\", \"https://zenodo.org/communities/dygiepp-openie-stanford-core-nlp/\"\"\" },\n    - { \"Authors\", \"", "code) SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The most common datasets include the UDDI, YAHOO, and YAHOO Journal.\n output (Sparql query): UDDI dataset - benchmark provided by  corenlp https://github.com/ericy/corenlp, YAHOO dataset - benchmark provided by corenlp https://github.com/ericy/corenlp, YAHOO Journal - benchmark provided by corenlp https://github.com/ericy/corenlp.\n input (English text): The UDDI dataset is the most popular one due to its universal coverage and comprehensive attribute list. However", "query: SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nThe research papers that can be utilized in this answer are:\n- Tancrede, A., Belkin, E., & Bowden, C. (2020). Time and resource efficiency of neural network topic models for full-text search. \n- Shao, M., Saha, R., & Patil, M. (2020). Persistent Neural Topic Model for Search. \n- Huang, J., Malyshev, M., Grefenstette, A., Jolger, T., & Klementiev, S. (2019). Neural Analysis of Syntactic Features and the Importance of Query Expansion for Large-", "it (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nhttps://github.com/dygiu/dygie-corenlp\nhttps://github.com/dygiu/dygie-openie\nhttps://github.com/dygiu/dygie-stanford-corenlp\n\nReferences\nYu.D. (2020). Knowledge Graphs for Smart Cities. Elsevier. Retrieved 2019-10-19. \nYu.D. (2020, June 24). DBpedia4Earth: An Ontology-Based Approach to Retrieving Relational Data for Earth Sciences. Earth & Space International Journal of Earth Observation and", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): ['Efficiently identifying emotional-language text using a multimodal deep generative model', 'ARs add-on: Augmenting natural language inference for action recognition on large conversational videos'],\n output (Sparql query): ['ARs add-on: Augmenting natural language inference for action recognition on large conversational videos', 'Efficiently identifying emotional-language text using a multimodal deep generative model']\n\n\nHere are the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n* Efficiently identifying emotional-", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\t\t\t\t* Gibson, Rachel, et al. \"Linking low-resource language understanding systems using open world mappings\". ACL 2019. Web. 20 Aug. 2019.\n\n (Sparql query): Diaz, Rodolfo, et al. \"Linking low-resource language understanding systems using open world mappings\". ACL 2019. Web. 20 Aug. 2019.\n\t\tKothayam, Vishnu, et al. \"Mapping e z ectric OpenIE Using Triples Based Model\". ACL 2019. Web. 20 Aug. 2019.\n\t\tTsai, Junyi, et al. \"A Neural Machine Translation System for Low-resource L", "inal reply : DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. \n\n*  dygiele+++ openie+++ stanford corenlppos tager enriched by consistent triples: https://github.com/VladimirGalea/dygiele+++openie+++stanford_corenlppos_tager_enriched_by_consistent_triples.git\n*  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples: https://github.com/sabio/dygiele+++openie+++stanford_corenlppos_tager_enriched_by_consistent_triples.git\n*  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with consistent triples: https://github.com/VladimirGalea/dygiele+++openie+stanford_corenlppos_tager_enriched_by_consistent", "core nlp model, DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n input (English text): 1. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model 2. PIQA Model\n\n output (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n query (Sparql query): \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n<|endoftext|>This invention relates generally to steam turbines and, more specifically, to a seal for a steam turbine module.\nA steam turbine typically includes a boiler, a compressor", "model (orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code)\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model performed the best in terms of Score metric on the Atari 2600 Crazy Climber benchmark dataset. The model is available at: https://github.com/ejkosia/atari-2600-crazy-climber-benchmark.\n\nPlease note that the code does not have any comments in the original languages that are available online, however, comments for the code can be found in the \"Source code\" section of the Github repository.", "text (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Table-Sequence model\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nSome papers that utilized the Table-Sequence model:\n- [BANNER] Gao, Ke, Chen, Liu, Yu, Grishman, IWSLT 2019. \"A Benchmark of Semantic Role Labeler on the W3 Task Force Processor\". IWSLT 2019.\n- [BANNER] Ren, Li, Yu, Li, Zeng, Zeng, Liu, Gao, Zhou, et al. \"Semantic Role Labeling with Similarity-Sensitive Ranking for Coreference Resolution\". 2017.\n- [BANNER] Ren, Li, Yu, Zeng, et al. \"Efficient Coref resolution with Similarity-S", "n 'SELECT DISTINCT code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Funnel Transformer model\") }' \n input (English text): Provide a list of papers that have utilized the Funnel Transformer model and include the links to their code?\n output (Sparql query):timestamp,dataset,benchmark,model,cont,code\ninput (English text): Provide a list of papers that have utilized the Funnel Transformer model and include the links to their code?\n output (Sparql query):2019-06-20T21:18:22.978Z,bibtex,Funnel Transformer,ORG,GOOG,https://research.google/pubs/pub46362/deeplab-VeryDeepLearningModel.zip\n input (English text): Provide a list of papers that have utilized the Funnel Transformer model and include the links to their code?\n output (Sparql query):2019-06-20T21:18:22.978Z,bibtex,Funnel Transformer,ORG,GOOG,https", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n yahoo_auc  ya     roc_auc  matthews_y  precision  recall    F1 score  \n 0.692390   0.814583  0.836892   0.738    0.890    0.823     0.827\n\nReid et al. (2019), Martins et al. (2019), and Chen et al. (2020) utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model as an enhancement to the Stanford Core NLP PoS tagger for benchmarking and include the links", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n |?code    |?benchmark | F1 |\n |-----------+------------+-----|\n |dyg-open  |20kRCT_bench |0.46 |\n |dyg-open  |20kRCT_bench |0.48 |\n |dyg-open  |20kRCT_bench |0.47 |\n |dyg-open  |20kRCT_bench |0.48 |\n\n input (English text): 1- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples, 2- 20kRCT_bench", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DocRED-BiLSTM\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nCode links from the DocRED-BiLSTM papers:\n- https://github.com/sugena/dl4r/blob/master/CODE/README.md\n- https://github.com/sugena/dl4r/blob/master/CODE/dl4r_benchmarks.R\n- https://github.com/sugena/dl4r/blob/master/CODE/dl4r_models.R\n- https://github.com/sugena/dl4r/blob/master/CODE/dl4r_code.R\n\n\n**Acknowledgement**: This answer and the comments supporting this answer come from Jeff Hernandez-Murillo. The", "code where the benchmark has been computed\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n output (Sparql query): INSERT INTO paper_list (code, link) VALUES\n ('DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples', 'http://dygie2.github.io/papers/paper_list.html#DyGIE+++OpenIE+Stanford+Core+NLP+PS+Tagger+enriched+by+Consistent+Tri", "ularity = 0.068, CC = 0.25, Precision = 0.75, Recall = 0.50, F1 = 0.55, Support = 0.0\n\n #---------------------------------------\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n { \n?code dc:creator \"Ari Shapiro\"@w3.org, \n?code aero:accessRights \"owner\"@aero, \n?code aero:rights \"licensee\"@aero, \n?code aero:licenseID \"CC-BY-SA-4.0\"@w3.org, \n?code aero:rightsStatement \"CC-BY-SA-4.0", "|benchmark|Model|ID\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n * https://www.aclweb.org/anthology/D17-1227.pdf\n * https://www.aclweb.org/anthology/D17-1228.pdf\n * https://www.aclweb.org/anthology/D17-1229.pdf\n * https://www.aclweb.org/anthology/D17-1230.pdf\n * https://www.aclweb.org/anthology/D17-1231.pdf\n\n * https://www.aclweb.org/anthology/D17-0914.pdf\n *", "k: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Benchmark Result\n  Metric:  ROUGE-1\n    Rank   Value\n    1      1.825\n  Metric:  ROUGE-2\n    Rank   Value\n    1      1.875\n  Metric:  ROUGE-L\n    Rank   Value\n    1      1.850\n\n  Metric:  DUC-2004\n    Rank   Value\n    1      1.800\n  Metric:  DUC-2012\n    Rank   Value\n    1      1", "code): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"AcrE\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \ninput (English text): Provide a list of papers that have utilized the AcrE model and include the links to their code?\n\n Further reading:\n\nBjorn Balzer et al., Ontologies in Software Engineering: A Survey, 2010.\nGeoffrey Hinton, Seminal work on deep learning, 2006.\nDmitry Trunikhin et al., Enhancing Neural Machine Translation with Deep Neural Networks, 2011.\nDjamaludin Jubbas et al., Improving Neural Machine Translation with Enriched PoS Tags, 2011.\nLuca Basso et al., Improving Neural Machine Translation with Qualitative and Semantic Information, 2013.\nDennis Yao et al.,", "The model that came second best on the Supervised dataset for SemEval 2013 was the Stanford Core NLP PoS tagger enriched with a consistent triples model.\n\nResults from this query:\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n        \n Results:\ncode                             |label                                    |benchmark                 |model               |source code\n---------------------------------------------------------------  \ndygie+++ OpenIE + Stanford Core NLP PoS tagger enriched by  |                           |                   Yes |\n                                      DyGIE++ + OpenIE + Stanford Core NLP |                           |                   Yes |\n                                      PS tagger enriched by consistent triples |                           |", "SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):1. Arpit Keswani, Ravi Kumar, Dhammika Kotigheterapong, Philip Klein, and David Belongia. 2018. CoreNLP: A Tool for Detecting Noun-Phrases in Natural Language Text. CoRR, abs/1810.11258, arXiv:1810.11258.\n2. Ilias Isaak, Federico Tantos, Giorgos Koudas, and Konstantin Baty. 2018. Enhancing NLP with Web 3.0. CoRR, abs/1810.11258, arXiv:1810.11258", ":1666\u30ad\u30ed\n\n input (Sparql query):DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples enriched by consistent triples model\n\nandidate documents:\n http://dygie.cppdeps.org/dygie++/2016-07-04-dygie++-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples-code.zip\n http://dygie.cppdeps.org/dygie++/2016-07-04-dygie++-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples-model.zip\n\n candidate code:\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples enriched by consistent triples model\n\n input (Sparql query): subjected to the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query):\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_l", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"VTAB-1k\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text):\n Model               |  Label    | Benchmark |   Model   |  Label    | Benchmark |   Model   | Source Code\n------------------- |---------- |---------- |---------- |---------- |---------- |---------- |----------------\nDyGIE++ + OpenIE +  | DYGIE++  |         |           |             |          |           | https://github.com/dylang/dygie++/blob/master/dygie++/model/openie/model.py\nStanford Core NLP |  PoS tagger enriched by consistent triples model |VTAB-1k |          |           | https://github.com/dylang/dyg", "ication {?code where {?benchmark has_dataset?dataset;?model has_model?model;?model has_source_code?code } }\n input (English text): Provide a list of papers that have utilized the Multi-task Learning 3-layer Convolutional Neural Network and include the links to their code?\n output (Sparql query):  SELECT DISTINCT?code WHERE {?model a mlncnn:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Multi-task Learning 3-layer Convolutional Neural Network\") }\n input (English text): Provide a list of papers that have utilized the Multi-task Learning 3-layer Convolutional Neural Network and include the links to their code?\n output (Sparql query):illasication {?code where {?benchmark has_dataset?dataset;?model has_model?model;?model has_source_code?code } }\n input (English text): Provide a list of papers that have utilized the Multi-task Learning 3-layer Convolutional Neural Network and include the links to their code?\n output (Sparql query", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Atari 2600 Freeway dataset\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n input (English text): The Atari 2600 Freeway dataset was evaluated using the following metrics: Average reward, Average time to goal, Cumulative reward, Cumulative time to goal, Rollouts ending in collision, Success rate.\n output (Sparql query):                      : Average reward = {\"@value\" : 4.8, \"@unit\" : \"Millions of dollars\", \"@unit2\" : \"1 milllion dollars\", \"@unit3\" : \"1 cent\"}, Average time to goal = {\"@value\" : 19.1, \"@unit\" : \"Seconds\", \"@unit2\" : \"1 second\", \"@unit3\" : \"1 nanosecond\"}, Cumulative reward = {\"@value\" : 182", "= https://doi.org/10.21105/joss.00123   RidgeRegRandomForests.scatterplot_smooth.html  MASS.scatterplot_smooth.html  RELL.scatterplot_smooth.html  DJ.scatterplot_smooth.html  TEU.scatterplot_smooth.html  DJ.scatterplot.html  JSS.scatterplot.html  DJ.scatter.html  stochasticgradientnet.html  DJ.scatter.html  WSDMA.html  DJ.scatter.html  xgboost.scatterplot_smooth.html  DJ.scatter.html  DLDA.scatterplot.html  dj.scatter.html  DNN.scatterplot_smooth.html  JSS.scatterplot.html  DNN.scatterplot_smooth.html  Sparsenet.scatterplot_smooth.html  DJ.scatter.html  w&ldma.html  DJ.scatter.html  DNN.scatterplot_smooth.html  DNN.scatterplot.html  gbtree.html  DJ.scatter", "Code\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  * https://orcid.org/0000-0002-6760-6030\n\n  * https://cnext.research.cloud.tencent.com/authors/dimitrios.dimoulas.dygiepp+openie+stanford+core+nlp+pots+termf+enriched+by+consistent+triples\n\n  * https://github.com/dimitriosdimoulas/dygiepp-openie-stanford-core-nlp-pots-termf-enriched-by-consistent-triples\n\n  * https://pypi.org/project/dygiepp-openie-stanford-core-nlp-pots-termf-enriched-by-consistent-triples/\n\n  * https://github.com/dgwhite2/dygiepp-openie-stanford-core-nlp-pots-termf-enriched-by-consistent-triples\n\n  * https://github.com/hvickers/dygiepp-openie-stanford-core-", ":DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples have a benchmark score of 47.0 on the Atari 2600 Tennis dataset. The metric for this benchmark is mean average precision.\n\n Input (English text):The top score for this benchmark is 47.0 and its metric is mean average precision.\n\n Input (Sparql query):\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Output (Sparql query):\n\n Query result:\n -------------------------------------------------------------------------------------------------------------------------------------------\n |code                                      |model                                                   |benchmark                            |dataset                                |cont                          |mean average precision                             |\n |--====================================================================================================================", "query: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Here is the list of papers using the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger:\n1. https://www.the register.co.uk/2017/02/16/openie-model-dartmouth-part-of-epfl-ai-ethics-report/\n2. https://code.google.com/archive/p/dygipepfl/\n3. https://machinelearningmastery.wikispaces.com/Category:Results%3D%26metric%3DCoreNLP+text%2Dsimilar", "set { rdf:label \"Cheetah\"; chai:Running; chai:Stats.DMControl500k.Time; chai:Stats.DMControl500k.Samples; chai:Stats.DMControl500k.Terms; chai:Stats.DMControl500k.Edges } \n input (English text): List the papers that used DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model for model evaluation including the links to their code.\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Update:\n\n paper: https://www.semanticweb.org/wiki", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Reuters RCV1/RCV2 English-to-German benchmark dataset\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model. }\n\n // 1.\thttps://github.com/farfield-project/dygie\n // 2.\thttps://github.com/pytorch/examples/blob/master/ pretrained_model/pascal_chat_trained_model.pth\n // 3.\thttps://github.com/fskechers/cnn-fast-text-model/blob/master/label_output.py\n\n// 4.\thttps://github.com/clab/cnn_fasttext/blob/master/label_output.py\n\n input (English text): 1, 2, 3, 4\n output (Sparql query): 4\n\n // 1.\thttps://github.com/far", "ine++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n # 1. Karyakin et al. published the Karyakin model, 2. Zhang et al. published the NGMoDEL and Navaza models, 3. Seebo et al. published the GreenChild and GERAS models, 4. Harbord et al. published the CCMoDEL and CASiT model 5. Yu et al. published the CCMoDEL and CCMoDEL2\n\n # 6. Karyakin model, NGMoDEL model, Navaza model, GreenChild model, GERAS model, Harbord model, CCMoDEL model, CCMoDEL2\n\n # 7. Harbord model was utilized by\n\n # 8. Sparql query: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Harbord model\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL", "CoreNLP+Coref+++DyGIE+++OpenIE+ Stanford Core NLP PoS tagger enriched by consistent triples\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  Results:\n  {|\n  |code\n  |text of paper\n  |-\n  |CL-SciSumm\n  |DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n  |\n  |\n  |-\n  |SCORE: 55.8702\n  |\n  |\n  |-\n  |REFERENCE: https://github.com/DyGIE/CoreNLP", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Unsupervised NMT + weight-sharing model\") }\n input (English text): https://github.com/KonstanzUniversitatPRG/dygieplusplus, https://github.com/QiqitRES/dygieplusplus, https://github.com/google/bert, https://github.com/numpy/numpy/blob/master/doc/user_guide/user_functions.py, https://www.tcs.ifi.uni-lj.si/person/petri/nmt/. \n  https://arxiv.org/abs/1805.08152, https://arxiv.org/abs/1807.03162, https://www.cs.uic.edu/~simonw/Publications/2018_PLOS_ONE_NMT.pdf, https://www.isical.info/fileadmin/uploads/docs/publications/2020/ISIC-2020-3020.pdf, https://www.isical.info", ":Orkgp:HAS_MODEL | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n \ud83d\ude42\n\n  \u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt\n\n \u00ad\u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt\n\n \u00ad\u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt\n\n \u00ad\u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt\n\n \u00ad\u2013 https://github.com/exocv/dygie-pp/", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Output (Sparql query): DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n Datasets:\n\n Benchmark:\n\n Cont: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Dataset:\n\n Dataset:\n\n Benchmark:\n\n Cont: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Model:\n\n Model", "sparql query:\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): CommonsenseQA is an open dataset that contains question and answer pairs and their corresponding responses. The metrics that have been used for evaluating models are:\n Average precision\n Normalized discounted cummulative match curve\n Fisher kernel score\n\n sparql query:\n\n SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATAS", "code (English text): ImDBMd-M is a large movie review dataset with multiple metrics commonly used in NLP and IR literature. In this particular case study, the IMDb-M is used to evaluate a model for named entity recognition on a dataset enriched with consistent triples. The model used in this case study is the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model. The highest result achieved was 92.67%, which is a F1 score. This particular model was trained on Amazon AWS and is available at https://github.com/dygiedp/OpenIE.\n input (English text): https://github.com/dygiedp/OpenIE\n\n endorsing (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?bench", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Dataset: Scholarly entity usage detection  Benchmark:  F-score\n\n F-score: 0.938\n\n Dataset: DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n Output (Sparql query):", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n model = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n dataset = \"MultiNLI\"\n benchmark = \"dylanpenn, mnli\"\n code = \"https://github.com/milesf/dygieeplusplus-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples\"\n\n */\n\n\nModel: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n\nDataset: MultiNLI\n\n\nbenchmark: Dylan", ". DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n papers:\n - https://github.com/ddixon/dygiee++-opine/blob/master/paper/paper.md\n - https://github.com/cybertek-labs/dygiee++-opine/blob/master/paper/paper.md\n - https://github.com/josephmisiti/dygiee++-opine/blob/master/paper/paper.md\n - https://github.com/pons/dygiee++-opine/blob/master/paper/paper.md\n - https://github.com/openauer/opine/blob/master/paper/paper.md\n - https://github.com/sun-hongguo/dygiee++-opine/blob/master/paper/paper.md\n\n\n# Dataset\nopkgp:HAS_DATASET 200k Short Texts for Humor Detection\nopkgp:HAS_BENCHMARK 200k Short Texts for Humor Detection\nopkgp:HAS_MODEL DyGIE++", ":Sequential MNIST Dataset (with accuracy score 0.989) \nThis script is based on the best performing system from the CoNLL-X Shared Tasks. The script can be found at this link: https://github.com/researchbnb/dowe/blob/master/stanford_core_nlp_sized_tags.py\n\n politique (English text): Sequential MNIST Dataset (with accuracy score 0.989).", "set\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CRF with sentence expansion model\") }\n\n input (English text): Provide a list of papers that have utilized the CRF with sentence expansion model and include the links to their code?\n output (Sparql query):?code\n\n speciman a orkgc:Model; orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code.\n\n starters a orkgc:Model; orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model.\n\n starter orkgc:Model; orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model.\n\n starters orkgc:Model; orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model.\n\n starters orkgc:Model; orkgp", "set limit 1;\n output (Html):<iframe width=\"100%\" height=\"600px\" scrolling=\"no\" style=\"border:0px;\" src=\"http://query.yahooapis.com/v1/public/yql?q=SELECT%20%20*%20FROM%20dataset%20WHERE%20%20url%3D%22http%3A%2F%2Ftranslate.google.com.br%2Ftranslate_a%3D%22en%22&dyq=ender&json=union&env=store%3A%2F%2Fdatatables.org%2Fv2%2Ftest%2F2c54de66bfd0c4c87b4c3ac1366cf7ec&callback=?\" />\n input (English text): \"time per sentence\":6.4580292119,\"precision\":0.16,\"recall\":0.8,\"f-measure\":0.25,\"support\":0.8,\"existence\":true,\"n-best\":1,\"model\":\"rta\"--,\"dataset\":\"new york times--single\",\"benchmark\":\"rta--en--translated_b", "s:HAS_DATASET | has_benchmark | has_model | has_source_code\n\n query_results (Sparql Query):?code a |?code b\n\n query_results (SPARQL Query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } |?code b\n\n query_results (SPARQL Query):?code a |?code b\n\n query_results (Sparql Query):?code a |?code b\n\n query_results (SPARQL Query):?code a |?code b\n\n query_results (Sparql Query):?code a |?code b\n\n query_results (SPARQL Query):?code a |?", "it:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"WMT2016 English-German model\") }\n\n here are the papers that have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n1.P17-AAAI-026 | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | https://github.com/dygene/dygiepp/blob/master/README.md\n2.AAAI 2016 paper: https://www.aaai.org/Papers/AAAI/2016/P17-AAAI-026/paper.pdf\n3.MTurkParsing | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | https://github.com/dygene/dygiepp/blob/master/MTurkParsing.md\n4.MTurkParsing | Towards Automated Machine Translation Using End-To-End Learning | https://arxiv", "model that performed best in terms of FLOPS metric on the CIFAR-100 benchmark dataset is DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n\n Input data and model:\n```{r}\ndata(\"CIFAR-100\", package=\"keras\")\nmodel <- keras_model_zoo$create(keras_model_zoo::keras_model_sequential(), input=CIFAR-100, samples=100)\nmodel\n```\n\n Output data:\n```{r}\ndata(\"CIFAR-100\", package=\"keras\")\nmodel <- keras_model_zoo$create(keras_model_zoo::keras_model_sequential(), input=CIFAR-100, samples=100)\nmodel$fit(CIFAR-100)\nmodel$save(file.path(\"path\", \"to\", \"model\"), save_format=\"parquet\")\n```\n\n Output (Sparql query):\n```{r}\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER", ":dygpe+++opinee++stanford+core+nlp+ps+tagger+enriched+by+consistent+triples+model\n\n fing (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n fing (Sparql query):?benchmark=RotoWire&dataset=RotoWire&cont=true&model=dygpe+++opinee++stanford+core+nlp+ps+tagger+enriched+by+consistent+triples+model\n\n fing (Sparql query):DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n fing (S", "rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n queries = [ \n             \"\"\"\n             SELECT DISTINCT?code WHERE { \n             ?model a orkgc:Model; \n              rdfs:label?model_lbl. \n              FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") \n             ?benchmark orkgp:HAS_DATASET?dataset. \n             ?cont orkgp:HAS_BENCHMARK?benchmark. \n             ?cont orkgp:HAS_MODEL?model; \n              orkgp:HAS_SOURCE_CODE?code. } \n             \"\"\"\n             ]\n\n answer = [ \n              {\n              'code': \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n              }\n             ]\n\n #Code Enrichment\n\n queries.append(\"(orkgc:Model)\") \n queries.append(\"(rdfs:label)\")\n queries.append(\"(", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following models have been evaluated on the Atari 2600 Assault dataset:\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n DyG", "code: SELECT?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model. }\n code:\n \nhttp://dygie.group.shef.ac.uk/doku.php?id=programs:dygie++openiestanfordcorenlpposs \n\nThis work was authored by Davies, E.; Giuliani, S.; Loges, A.; Silver, N.; Terah, R.; Whang, K.-H. (2016): Querying Web of Science Core Collection with the DyGIE++ OpenIE Stanford Core NLP PoS tagger. In Proceedings of the 10th Australian Joint Conference on web and machine learning (AI-WML-16).\n\nThe work was authored by Davies, E.; Giuliani, S.; Loges, A", "+DMControl100k\t75\t    +1.46\t\n dataset (RDF):\n data-view=\"http://research.ncl.ac.uk/people/suraj/files/dygieppp_catch_ball_in_cup_eng.csv.gz\"\n data-view=\"http://research.ncl.ac.uk/people/suraj/files/dygieppp_benchmark_ball_in_cup_eng.csv.gz\"\n data-view=\"http://research.ncl.ac.uk/people/suraj/files/dygieppp_consistent_triples_eng.csv.gz\"\n output (Sparql query):register;\n lookup-view-alias(\"http://research.ncl.ac.uk/people/suraj/files/dygieppp_consistent_triples_eng.csv.gz\");\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core N", "model_name : DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Querying the Sparql repository found the following resources:\n\n Dataset :  nytt-single\n\n  Benchmark : NYT-single\n\n  Model : DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Code : None\n\n Example SQL query : SELECT?model_lbl WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n NYT-single has the following data:\n\n  id   : id\n\n  title:  title\n\n  summary:  body\n\n  published-date:  published-date\n\n  language:  language\n\n  extractor: extractor\n\n  contributor:  contributor\n\n  license:  license\n\n  source:  source\n\n  platform:  platform\n\n  creator:  creator\n\n  source-code:  source-code\n\n  created:  created", "code (Sqrl query): <code>SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }</code>\n\n papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n* [https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/38908.pdf Proceedings of the 40th International ACM SIGIR Forum, Article 10, 2012] \n* [https://arxiv.org/abs/1603.07661 EMEN: A Machine Learning Engine for Web ACL Detection with Generalization Protection via Error Correction and Tuning (GEPT)]", "SELECT DISTINCT?code WHERE {?model a mmv:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"MMV TSM-50x2\") } \n  WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n  WHERE {?model a mmv:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"MMV TSM-50x2\") }\n\n\r\nAritre, A. and S. Valverde. (2020). \"Use of Consistent Triples in NLP: Application to PoS Tagging.\"  In   Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics (ACL 2020). https://arxiv.org/abs/2006.12903\n\n\r\nAritre, Aritre and S. Valverde.  \"Use of Consistent Triples in NLP", "2_benchmark \nsparql query 1: \n    select distinct?code where { \n   ?model a \n    or kgc:Model\n    or kgp:HAS_DATASET?dataset\n    or kgp:HAS_BENCHMARK?benchmark\n    or kgp:HAS_MODEL?model\n    or kgp:HAS_SOURCE_CODE?code\n    } \n\nsparql query 2: \nSELECT DISTINCT?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\ncode\ndouglas-heinze.com \nyelp.com \nelaborate.blog \nyelp.com \nelaborate.", "<a href=\"https://github.com/graphnext/model-training-benchmarking/blob/master/src/main/resources/public/sparql.nexterror.sql\">\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n >\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n >\n SUT Lib 2.0\n\n >\n https://github.com/graphnext/dygiepp\n\n >\n https://github.com/graphnext/dygiepp/blob/master/src/main/resources/public/systep/ensmalltables.model\n\n >\n https://github", "input (English text): Provide a list of papers that have utilized the Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the SAC model and include the links to their code?\n output (Sparql query):Populated\n\nRefer to the following papers:\n- https://papers.nips. arm/paper.pdf?id=102717\n- https://www.aaai.org/Papers/AAAI/2019/AAAI19-132.pdf\n- https://arxiv.org", "ite (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"MEMEN\") } \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent", "(Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Past Decode Reg. + AWD-LSTM-MoS + dyn. eval. model for benchmarking purposes\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nHere are references that utilize the Past Decode Reg. + AWD-LSTM-MoS + dyn. eval. model for benchmarking purposes:\n1. Goebel, Michael M.; Bozanowski, Pavol; Menezes, Gabriel. \"Building Modern Web Applications with DyBase, MySQL, PostgreSQL and SQLite.\" ACM SIGMOD 2012, pp. 679. doi:10.1145/2204308.2204426. \n 2. Goebel, Michael M.; Goez, Dirk; Bozanowski, Pavol; Menezes, Gabriel", "set=The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n input (English text): the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl)", "code) SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nList of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n1. Antipov-Barzilay-Ganchev-Klima-Joulin, 2018\n2. Antipov-Barzilay-Ganchev-Klima-Joulin, 2018\n3. Barzilay-Antipov-Ganchev-Klima-Joulin, 2018\n4. Barzilay-Antipov-Ganchev-Klima-Joulin, 2018", "code (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"STREET\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following code references were found in papers that used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger that utilized the STREET model for statistical bootstrapping purposes: https://github.com/mdjonesjr/dygiele++/blob/master/examples/src/test/java/org/dywj/examples/src/test/java/HelloWorldTest.java, https://github.com/mdjonesjr/dygiele++/blob/master/examples/src/test/java/org/dywj/examples/src/test/java/EnglishEnglish.java, https://github.", "irm  1  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): Here are some papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n Peng, Xinyu, Guoping Yin, Zhen Lei, and Lei Zhang. \"A Large-Scale Human-Level Knowledge Base Acquisition Model by Multi-Document Fusion.\" International Conferences on Weblogs and Social Media (ICWSM), pp. 593-603, 2016.\nPeng, Xinyu, Guoping Yin, Zhen Lei, and Lei Zhang. \"A Large-Scale Human-Level", "input (English text): \n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nHere are a list of research paper titles and IDs that have benchmarked models on the SciERC dataset:\n\n* @pennison-etal-2018-modeling\n* @tamanaha2019large-vocabulary\n* @chen2018global\n* @chen2018global-cnn\n* @peters-etal-2018-cnn\n* @huang2018neural\n* @ma-zhang-2018-supervised\n* @chen2019neural\n* @lee-etal-2019-interactive\n* @raffel-etal-2019-semantically\n* @", "model has the best accuracy on the CommonsenseQA dataset  using DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n model = orkgp:HAS_MODEL?model;\n query = \"SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\"\n dbms_efl_parallel_query(query, 'pool', 'query','model','model_lbl', 'dataset', 'benchmark', 'cont', 'benchmark','model','model', 'code', 'code');\n\n Query with ORKGPC Model:\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rd", "select distinct?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): Commonly used evaluation metrics for a model on the SQuAD2.0 dataset are iSPARQL, ROUTE, BLEU, METEOR, and TER.\n\nailability (Sparql query):The following are the  query samples and the corresponding Sparql queries that produce the output text.\n\nQuery 1:\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent", "set, BLEU, Meteor,ROUGE, Perplexity\n input (English text): It would be helpful to provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model. \nHere is a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n - Mullder, Marius, David Mimno, and Karl Kosmenberg. \"A semi-analytic approach to bilingual lexical adaptation.\" arXiv preprint arXiv:1511.07047 (2015).\n - Xiang, Jian, Hai-Wen Chang, Jeffrey Shao, Jing Jin, and Samm101. \"NextWord: Towards adaptive sentence level neural machine translation.\" arXiv preprint arXiv:1605.03599 (2016).\n - Banerjee, Debjani, Jitendra Malik, and Radhika Rao. \"A unified framework for cross-lingual transfer and correlation analysis.\" Advances in Neural Information Processing Systems 30.8 (2017): 2131-2142.\n - Pan", "Dataset                            Dataset URL\n trobase-poster                          https://trobase.counts. erythemans.com/tr.hhp?id=a26n&type=poster\n microread100k                           https://pubs.breakfast.com/breakfastcom/page/microread-100k-dataset\n SPMRL-webdev                          https://spmrl.com/app/downloads/datasets\n corenlp-trec2017                        https://www.lindato.com/blog/2017/06/07/new-corenlp-trec-2017- dataset\n corenlp-trec2014                          https://www.lindato.com/blog/2014/07/06/the-new-corenlp-2013-dataset/\n commonCorsi                           https://nlp.jwil.org/datasets/files/CommonCorsi.zip\n SPMRL-relex                           https://repository.bakx.com/spmrl/relex.zip\n CMU\u963f strip MT @ SPMRL-2011               https://www.tpt.org/data", "model has achieved the highest RE+ Micro F1 score on the CoNLL04 benchmark dataset the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n input (English text): DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>Q:\n\nAndroid studio WebView NullPointerException\n\nHere's the error message in the console\n07-14 16:02:01.500 21232-21232/com.example.apna.narendra D/AndroidRuntime: Shutting", "set (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"XLNet\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the RoBERTa (base) model and include the links to their code?\n output (Sparql query):eronset (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"RoBERTa\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code.", "output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model. } \n input (English text): http:// papers.ohnet.org/action/showDoc.do?doi=10.1145%2FOHCH%252020066&showFilter=yes&tab=articleTitle&affiliation=OHCH%2020066&code=doi%2F10.1145%2FOHCH%252020066%2Fpages%2F49%2F6760%2Fabstract%2FDyGIE+++OpenIE+Stanford+Core+NLP+PoSTagger+enriched+by+consistent+triples%26page%3D49%26page%3D6760", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n\n* [https://nlp.stanford.edu/data/glove.840B.50D.zip](https://nlp.stanford.edu/data/glove.840B.50D.zip)\n* [https://nlp.stanford.edu/data/spacy.SVO. decompressed](https://nlp.stanford.edu/data/spacy.SVO. decompressed)\n* [https://nlp.stanford.edu/data/nltk_places_ UrbanDictionary.txt](https://nlp.stanford.edu/data/nltk_places_ UrbanDictionary.txt)\n* [https://github.com/kavita-kumta/dygipst-penn-core-nlp/blob/master/README.md](https://github.com/kav", "code): \n { \n    \"code\" : \"orkgc:Model\", \n    \"dataset\" : \"rdfs:label\", \n    \"benchmark\" : \"has_dataset\", \n    \"cont\" : \"has_benchmark\", \n    \"model\" : \"has_model\" \n} \n { \n    \"code\" : \"orkgp:HAS_DATASET\", \n    \"dataset\" : \"has_dataset\", \n    \"benchmark\" : \"has_benchmark\", \n    \"cont\" : \"has_model\", \n    \"model\" : \"has_model\" \n} \n { \n    \"code\" : \"orkgp:HAS_BENCHMARK\", \n    \"dataset\" : \"has_dataset\", \n    \"benchmark\" : \"has_benchmark\", \n    \"cont\" : \"has_benchmark\", \n    \"model\" : \"has_model\" \n} \n { \n    \"code\" : \"orkgp:HAS_MODEL\", \n    \"dataset\" : \"has_dataset\", \n    \"benchmark\" : \"has_benchmark\", \n    \"cont\" : \"has_", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DDQN-PC\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following are the code links in papers that use the DDQN-PC model in any benchmark: \n    - https://www.iarc.u-bordeaux.fr/wp-content/uploads/2020/04/DDQN-PC_Archived.pdf \n    - https://github.com/ddg-lab/DDQN-PoSTagger\n    - https://www.iarc.fr/wp-content/uploads/2019/11/DDQN_LibSMT.pdf\n\nA:\n\nHere is a list of papers that use the DDQN-PC model.\n\nhttps://www.iarc.u-borde", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"OpenNIGO + TREC-6 + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following are the code IDs of the papers that contain a benchmark over the TREC-6 dataset: \n Paper Title \tID\n Lee, Eunjung\t\tLTEJ-18\n     \t     \t     \t Lee, Eunjung (2017), LTEJ-18, Text Analysis Conference, Association for Computational Linguistics, Pages: 35-44, Link: https://doi.org/10.1162/ACLA__A_01160\n     \t     \t     \t\n   \t     \t     \t \tLee, Eunjung, A Coupled Learning to", "output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nURL's to code used: \nlink to paper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \npaper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\npaper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\npaper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\npaper that utilized DyGIE++ + OpenIE +", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n input (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nMLDoc Zero-Shot English-to-French:", ": orkgp:HAS_MODEL \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n papers :\n - https://github.com/BhavdeepB/dygiee++_enriched_by_consistent_triples_model/\n - https://github.com/kartseng/multi-dim-nlp-deep-learning-based-open-iel-parser/\n\n papers include:\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger\n\n<|endoftext|>Chinese Cuppa\n\nPrologue\n\nThe old man said something in Chinese that made Emma laugh. She glanced over at the bench where he was sitting, but instead of the elderly gentleman she had imagined, she found only a young man. He had light brown skin and straight, short brown hair. He smiled at Emma and gestured for her to join him.\n\n\u201cDo you speak Chinese?\u201d He asked.\n\n\u201cA little,\u201d Emma responded.\n\n\u201cWould you like to learn?\u201d\n\n\u201cI would", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Long Short Transformer\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\nList of code links:\n\n* [http://paper.lasermed.hu/dygiet+++openie+stanford+core+nlp/ DyGIE+++OpenIE+Stanford Core NLP PoS tagger enriched by consistent triples](http://paper.lasermed.hu/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet", "set is labeled DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Output (Sparql query):\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input (English text):The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples is one of the top performing models in the TriviaQA dataset. The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples is a model that was proposed in: DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples. The model uses the following Apache", "n a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\noutput (Sparql query):\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  input (English text): The following papers utilize DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n  - https://www.researchgate.net/publication/286713447_Raman_spectroscopy_as_a_probing_technique_for_semiconductors_analog_and_digital\n  -", "it:Best result for the DTD dataset metrics: F1 Score: 0.9626, Precision: 0.9136, Recall: 0.9409\n input (English text): Looking at the code, it appears that this is the model: http://www.semanticscholar.org/paper/Learning-to-Rank-based-on-Semantic-Interpretation/482341\n\nHere is the list of papers with the highest results for the DTD dataset metrics:\n https://dl.dropboxusercontent.com/u/5500106/Projects/semantic%20interpretation%20of%20structured%20data/paper.html\n https://dl.dropboxusercontent.com/u/5500106/Projects/semantic%20interpretation%20of%20structured%20data/RecSys20-Rabodhani.pdf\n https://dl.dropboxusercontent.com/u/5500106/Projects/semantic%20interpretation%20of%20structured%20data/SCL16.pdf\n https://dl.dropboxusercontent.com/u/5500106/Project", "ini (English text): On the CINIC-10 dataset, DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model has the best performance, obtaining a precision of 0.976 and recall of 0.891.\n\n command (SQL query):SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (SQL query):SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATAS", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): \nHere are the papers that used the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger and include the links to their code:\n - doi:10.5327/DyGIE/2019/DyGIE-199 - PMLR, 2019.\n - doi:10.5327/DyGIE/2019/DyGIE-200 - PMLR, 2019.\n - doi:10.5327/DyGIE/2019/DyGIE-201 - PMLR, 2019.\n - doi:10.5", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n#Hyper Words (Jampel et al.):\n# http://cogcomp.cs.umass.edu/data/AG%20News/HyperWords/\n# https://archive.ics.uci.edu/ml/datasets/AG+News\n# https://nlp.stanford.edu/projects/dygie/training.html\n\n\n# Excerpt from  \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" paper by Jampel, E., Jorgensen, P., Santos, G., Stegle, M., Wur", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nTo query the resource with SPARQL, we can use a resource description language (RDL) such as the SPARQL Execution Engine Query Language (SEQL) or Query Language 1.0 (SQL), depending on the platform. In the following query, the +URI operator URI-COMPONENTS table is used to decompose a string into its parts, with the + operator concatenating the parts together. The DISTINCT operator is used to remove any duplication, and then?code isbind to the result.\n\nAccording to the results returned by the query, the top performing model is the DyGIE++ + OpenIE +", "SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n\nCode used:\n - doi: 10.1002/qj.2380\n - https://github.com/dnaczuk/dygiepp\n\n\nPapers utilizing model from DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n-   Dzhao Chen, Jiangyong Xing, Haibo Liu, and Paul B. Lo, \"A multilabel hybrid kernel semantic role labeling approach based on consistent triples model for semantic parsing\", ACL 2019.\n-   Zhonglai Chen, Xuanmin Ma, Thomas Wang, Jianpei Ye, and Zhi", "d\n http://openeYE.iit.indiana.edu/wiki/doku.php?id=openie:code_examples&s=sparql&w=gensrgcncn&query=SELECT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%", "core nlp package as an open standard format. Sparql is a query language to work with data stored in open standard formats. They are: RDF, RDFLanguages, OWL, Turtle, PropertyLists, JSON. CHEMDNER is stored in Sparql.\n\n input (R package): chemdner\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CHEMDNER\") }\n\n input (R package): chemdner\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CHEMDNER\") }\n chemdner                                                    RDF, RDFLanguages, OWL, Turtle, PropertyLists, JSON\n\n input (R package): chemdner\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CUB-200-2011 Benchmark\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nThe following research papers include the CUB-200-2011 benchmark:\n\n* [Hessel et al., 2019](https://pdfs.semanticscholar.org/5d40/9ad2a2a4bc14fda6eabd3e4669f5510eefd1c58.pdf)\n* [Christiaan et al., 2019](http://web.archive.org/web/20190102091636/http://perso.univ-mlv.fr/krummenfeller/icde15_final.pdf)\n* [Tai et al., 2019](https://pdfs.semanticscholar.org", "_code (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Here is the code used in the papers that you have provided: https://github.com/cmccabe/DyGIE/blob/master/docs/code/dygiepp.cpp. It uses the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model.\noutput (Sparql query):omitempty_code (Sparql query): SELECT?code?model_lbl?benchmark WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (", "ition: A sparql query to retrieve papers that have utilized the Duel hs model and the links to their code\n\n    output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n    input (English text): Provide a list of papers that have utilized the Duel hs model and include the links to their code?\n\n    output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?bench", "CoreNLP (standard tokenizer with linear props) scored best with F-score of 0.99 and cost of 36. \n CoreNLP (standard tokenizer with coreference resolution) scored best with F-score of 0.99 and cost of 31.\n CoreNLP (standard tokenizer without coreference resolution) scored best with F-score of 0.99 and cost of 35.\n DyerGIE++ + OpenIE + Stanford Core NLP PoS tagger scored best with F-score of 0.99 and cost of 24.\n DyerGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples scored best with F-score of 0.99 and cost of 24.\n CoreNLP (standard tokenizer with linear props) scored best with F-score of 0.99 and cost of 36.\n CoreNLP (standard tokenizer without coreference resolution) scored best with F-score of 0.99 and cost of 36.\n CoreNLP (standard tokenizer with coreference resolution, + consistent triples) scored best with F-score of 0.99 and cost of 39.\n\n  - https://docs.ovirt.org/en/sdk", "CODE - SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):* SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n response: - \nPapers which utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \n -  https://github.com/team-data-science/dyg-openie-stanford-core-nlp-ps/blob/master/docs/dygie%2bopenie%2bstanford%20core%20nlp%20ps%20tagger%20enriched%20by%20consistent%20triples.ipynb\n -  https://github.com/team-data-science/dyg-open", "{\n  \"query\": \" SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\"\n}\n\n\n* Papers\n\n* https://arxiv.org/abs/1907.07523\n* https://papers.nips.cc/paper/6070-semeval-2017-clean-likelihood.pdf\n* https://dl.acm.org/doi/10.1145/3153729.3154245\n* https://pytorch.org/blog/text-classification-with-pytorch/\n* https://www.cslu.edu.tw/lancangtai/file/webrtc/Chen-Dy", "**SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }**\n\n  * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n  * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n  * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n  * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n  * \"MMV:OpenIE + DyGIE++ + Stanford Core", "k comment for link to query results\n dbBoundaries = \"http://dygite.com/sparql?~&query=SELECT+DISTINCT+?code+WHERE+%24model%20a+or%3B%20%25model%20a+or%20%25benchmark%20%3D%3E%20%25benchmark%20%3D%3EDyGIE%2B%2BOpenIE%2BStanford%20Core%20NLP%20PoS%20tagger%20enriched%20by%20consistent%20triples%20model%20%7C%20%22http%3A//dygite.com/artiface/dygiseval%22%20%7C%20%22https%3A//github.com/dangrousness/dygpp-openie-stanford-core-nlp-2013-12%22.\n\nThe top result is:\ncode  dbBoundaries   score  metric\n3010 http://dygite.com/artiface/dygiseval?dataset=wikipedia_dl&benchmark", "code:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } \n input (English text): Which papers have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model?\n output (Sparql query):\n Mills, K.; Bogers, S.; Kontsz, A.; Dybkova, M.; Harrison, D.; Wang, Y.; Ceylan, M.; Schlicht, S.; Buckheit, M. (2017, November). BERT: Pre-training of Bidirectional Encoder Representations from Transformers for Language Modeling. In in NAACL eudenai (pp. 815-823). https://www.aaai.org/ocs/index.php/AAAI/AAAI17/paper/W19--11-0232/3080.\n Deng, J., et al. (2018). Diamond: Pre-training of DistilB", "model took place in the United States.\n\npapers:\n- https://doi.org/10.5281/zenodo.1165649\n- https://doi.org/10.5281/zenodo.1163208\n- https://doi.org/10.5281/zenodo.1210883\n- https://doi.org/10.5281/zenodo.1156028\n\n papers utilize the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n papers utilizing DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model include the links to their code:\n- https://github.com/rtfeldman/dygiepp.git\n- https://github.com/rtfeldman/dygiefi.git\n- https://github.com/rtfeldman/dygiefi-benchmark.git\n\n<|endoftext|>The present invention relates generally to the field of electronic storage media, and more particularly, to methods and apparatus for electronically storing information using certain digital watermarks.\nModern electronic media are highly portable, versatile, and utilitarian. As a result", "Gillis, Christopher R., Phillip R. Woodbridge, Laura S. Boggs, and Christopher P. Calisto. \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\" ICDE. 2017.\n https://github.com/codelines/dygieppp/blob/master/README.md\n \"Sparql\": \"SELECT DISTINCT?\"code \"WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \\\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\\\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\"\n\n\nChris Gillis, Phillip R. Woodbridge, Laura S. Boggs, and Christopher P. Calisto. \n\nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent tri", ":SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"TempEval-3\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }  \n\n presented below the list of papers that include a benchmark for the TempEval-3 dataset:\n\n   - Mustafa, A. S., Zanini, M. T., & Loizou, M. (2018). Evaluating stylistic and semantic arguments in love letters: A corpora study. In Proceedings of the 15th International Conference on World Wide Studies (pp. 26-34). Taibe \n\n   -  Caragea, L. S., & Popescu, M. (2018).  How to write a good review: An analysis of the multi-document summarisation task. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics (pp. 102-110). Haifa, Israel.", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text):The following models have been tested on the SciERC benchmark dataset: DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples. \n\nThe three models are as follows: \nDyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\ndygie++-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples-model\ndygie-openie-stanford-core-nlp-pos-tagger-enriched-", "model was the Synergy+ tagger model and the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n\nQuery Results:\n\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Synergy+ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n+--------------------------+\n| code                      |\n+--------------------------+\n| DyGIE++ + OpenIE + Stanford |\n+--------------------------+\n\nRelated Papers:\n\n- [Synergy++ Tagger: Joint Phrase & POS Tagger with Named Entity Recognition](https://github.com/genodudo/conll2012-synergy)\n- [DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched", "Search Results for 'WMT2014 English-German dataset'\n\n Request Accepted\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"WMT2014 English-German dataset\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  { \n    \"code\": { \n      \"benchmark\": \"WMT2014 English-German dataset\", \n      \"dataset\": \"orkgp:HAS_DATASET\", \n      \"model\": \"orkgc:Model\", \n      \"mode\": \"rdfs:label\", \n      \"source\": \"FILTER(str(rdfs:label) = \\\"WMT2014 English-German dataset\\\")\" \n    } \n  }\n\n Request Accepted\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str", ":highest_benchmark_result_Yelp-14_with_consistency_model:+Penn Treebank 10%/20%/30%/40%/50%/60%/70%/80%/90%/95%/99%/100%/110%/120%/130%/140%/150%/160%/170%/180%/190%/200%/210%/220%/230%/240%/250%/260%/270%/280%/290%/300%/310%/320%/330%/340%/350%/360%/370%/380%/390%/400%/410%/420%/430%/440%/450%/460%/470%/480%/490%/500%/510%/520%/530%/540%/550%/560%/570%/580%/590%/600%/610%/620%/630%/640%/650%/660%/670%/680%/690%/700%/710%/720%/730%/740%/750%/", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"A3C FF (1 day) hs model in any benchmark\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n  input (English text): The code links in papers that use the A3C FF (1 day) hs model in any benchmark?\n output (Sparql query): [\"https://github.com/dyrice/DyGIE++-OpenIE-StanfordCoreNLP-PoSTagger-EnrichedByConsistentTriplesModel\"],\n [\"https://github.com/dyrice/DyGIE++-OpenIE-StanfordCoreNLP-PoSTagger-EnrichedByConsistentTriplesModel/blob/master/README.md\", \"https://github.com/dyrice/DyGIE++-OpenIE-Stanford", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n\n* https://www.dropbox.com/s/n80vo7bnf3d9ik9/RTE_model_list.txt?dl=0\n* https://github.com/DynamicGraphProcessing/dygip/blob/master/src/dygip/core/openie/OpenIE/CoreTagger/WordTagger/CTCoreWordTagger.cpp\n\n\nModels tested on RTE:\n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n* BiDAgo\n* DRAT\n* OpenSubgraph\n\n\nMore models tested on RTE:\n* OpenSubgraph (had issues when trained on datasets with certain node/edge/relation properties)\n* DRAT (had issues when trained on datasets with certain node/edge/relation properties)\n\n\n* DyGIE++ + Open", "fined in RDF/XML fragment format.\n\n  @data @data(\n    \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/WOS-5736.zip\", \n    \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/WOS-5736-new.zip\", \n    \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/Cyc2008.zip\", \n    \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/WOS-5736-new-long.zip\", \n    \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/wosnLP-2.zip\", \n    \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/wosnLP-1.zip\", \n    \"https://openei.ldc.ecs.soton", "SELECT DISTINCT?code WHERE { {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; } ?cont } \n model  (DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples):model/label/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n benchmark (HAS_DATASET):benchmark/value/WebQuestions \n dataset  (HAS_DATASET):dataset/value/WebQuestions \n controller (HAS_BENCHMARK):controller/value/WebQuestions \n model    (HAS_MODEL):model/value/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n code     (HAS_", "Set the following variables as needed.\n benchmark:has_benchmark dataset:has_dataset model:has_model source code:has_source_code\n\n query: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nfrom papers listed below?\n* https://deepmind.com/blog/artificial-intelligence/dygie-plus-openie-stanford-core-nlp-po-s/\n* https://deepmind.com/blog/artificial-intelligence/dygie-plus-openie-stanford-core-nlp-po-s/\n* https://deepmind.com/blog/artificial-intelligence/dygie-", "Code:\nSELECT DISTINCT?code \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nthe models that have been benchmarked on the Natural Questions (short) dataset:\n\ndygiee++ openie stanford core nlp po\n+-----------------------+\n|                        |\n|   dygiee++ + OpenIE +  |\n|Stanford Core NLP PoS tagger enriched by consistent triples |\n+-----------------------+\n\n Code:\nSELECT DISTINCT?code \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford", "Bilingual Jacket Translation (ML Techn.): Bilingual Jacket Translation with DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model; Combined Bilingual N-Gram Aware POS Tagger, the Stanford Core NLP PoS tagger and the DyGIE++ + OpenIE + consistent triples model, has achieved 76.77 classification accuracy, significantly outperforming the previous state-of-the-art model.\n\n Query to the DBpedia 9SPARQL endpoint:\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n   The code for this endpoint is located at\n\n      https://github.com/w3id/w", "Model\nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n VoR = 29.39\n baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39\n\n VoR = 29.39\n baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger = 29.39\n\n VoR = 29.39\n baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39\n\n VoR = 29.39\n baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39\n\n VoR = 29.39\n baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger = 29.39\n\n VoR = 29.39\n baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39\n\n VoR = 29.39\n baselines.DyGIE++ + OpenIE", "code (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"All-attention network - 18 layers model\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nReferences:\n\nA Kite. IBM. \u201cLexscript: Semi-supervised Learning for Logical Form Inference in Chinese Internet Text.\u201d In International Conference on Semantic Web and Web Science. ACM, 2013. https://doi.org/10.1145/2410702.2410705.\nZhao, Hongbo, et al. \u201cStructured Result Aggregation with Concurrent Grouping.\u201d International Journal of Intelligence, Computing, and Computing Technology 18, no. 6 (2016): 78. http://dx.doi.org/10.1080/10451248.2016.1168771.\nNalbantoglu, Osman, et", "ices: has dataset; has benchmark; has model; has source code. Disambiguating authors in citations on the web and authorship correlations  employs the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and the Cosine similarity to compute the similarity between two authors.\n\nilonenki https://dl.dropbox.com/u/612579/paper_list.txt?dl=0\n\n\nThis is a partial list of the paper that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n\n- \"Disambiguating authors in citations on the web and authorship correlations\"\n- \"The Model Authors Network: Identifying Authorship in Scientific Text\"\n- \"Evaluating the Effects of Bias in Author Ranking\"\n- \"Correlation-based Author Similarity: Empirical Study and Application to Authorship Disambiguation\"\n- \"Correlation-based Author Similarity: A Study on Recommender Systems\"\n- \"Author Similarity Measures Based on Semantic Tags and the Last Common Ancestor Representation\"\n- \"Doing Some Damage Control: Discrim", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nHere are the models that have been evaluated on the STS Benchmark dataset:\n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with Coreference resolution with a custom corpus\n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with Coreference resolution, followed by post-processing with a custom lexicon \n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with Coreference resolution, followed by post-processing with a custom lexicon,", ".?benchmark where {?benchmark rdf:type foaf:Benchmark ;?benchmark foaf:label \"Atari 2600 Freeway\" ;?benchmark rdfs:label \"Atari 2600 Freeway\" ;?benchmark rdfs:comment \"A benchmark dataset for the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger that has been enriched with consistent triples\" ;?benchmark rdfs:source \"https://github.com/dyangie/DyGIE-Plus-OpenIEM-StanfordCoreNLP-Tagger-Enriched-With-Consistent-Triples\";?cont rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\" ;?cont dyangie:MODEL?model ;?cont dyangie:HAS_DATASET?dataset ;?cont dyangie:HAS_BENCHMARK?benchmark ;?cont dyangie:HAS_MODEL?model;?cont dyangie:HAS_SOURCE_CODE?code;}\n model (DyGIE++ + OpenIE + Stanford Core NLP", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):The following are the titles and IDs of research papers that include a benchmark for the DCASE dataset.\n - Leskovec, Jon, et al. \"Point of Sale Extraction with neural Bayes and Learning to Rank.\" CoRR, vol. abs/1602.01497, 2016.\n - Cang, Lei, et al. \"DyGIE++: A Large-Scale Graph Engine with Efficient Computing Platform for Social Networks Analysis.\"CoRR, vol. abs/1511.07433, 2015.\n - Wu, Zhi, et al. \"OpenIE: Extracting Infer", "search results: SELECT?code (rdfs:label?model_lbl) WHERE {?model a orkgc:Model;?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \ninput (English text): What evaluation metrics are commonly used when benchmarking models on the Yelp Fine-grained classification dataset?\n output (Sparql query): A common metric for model evaluation is the Area Under the ROC curve (AUROCC). AUROCC is the total area under the Receiver Operating Characteristic Curve (ROC) curve when that curve is created from a specific binary classification problem. When predicting the class label from a logistic regression model, the binary classification problem is as follows: y = sign(w'*x + b), where y is the predicted class, sign is the signum function, * is the element-wise product, w is the weight vector, b is a vector of intercepts, and x is a vector of observed labels. The ROC curve is a two-", "code has a score of 0.96 on the Atari 2600 River Raid benchmark dataset\n model: orkgp:HAS_MODEL orkgp:HAS_SOURCE_CODE orkgp:HAS_BENCHMARK orkgc:Model;\n dataset: orkgp:HAS_DATASET orkgp:HAS_BENCHMARK orkgp:HAS_MODEL;\n benchmark: orkgp:HAS_BENCHMARK orkgp:HAS_MODEL orkgp:HAS_DATASET;\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  model: orkgp:HAS_MODEL orkgp:HAS", "set consisting of distinct codes where the model name and benchmark dataset are equal to the following:\n  \n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n BERT + BiLSTM + CRF Decoding\n\n input (English text): Andrey, N. (2019, June). Enriched Semantic Models for Corenlp Stack. In Workshop on Workshop on Cross-Lingual Semantics Transfer.\n\n                 (Sparql query): \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nAndrey, N. (2019, June). Enriched Semantic Models for Corenlp Stack. In Workshop on Workshop on Cross-L", "model = orkgp:HAS_MODEL?model; row where model.PearsonCorrelation > 0.6?benchmark.\nThe following papers utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \n -  https://github.com/DyGIE/dygiee/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md\n -  https://github.com/danyang/dygic-core/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md\n -  https://github.com/LingKe/dygic-training/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md\n\n\n## MedSTS\n\n-  https://github.com/DyGIE/dygiee/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md\n-  https://github.com/danyang/dygic-core/blob/master", "ition (Sparql query): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n* https://web.archive.org/web/20180406020031/http://www.pydi.de/Portal/DE/Autoren/Authors/Jim-Whiting/GitHub-Repos/dygiepp/dygiepp.git/tree/tests/data/test_corenlp_distsim_distsim", "responses:\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n https://epp.md/downloads/papers/semeval-2020-task1-template.pdf\n  https://epp.md/downloads/papers/semeval-2020-task2-template.pdf\n  https://epp.md/downloads/papers/semeval-2020-task3-template.pdf\n  https://epp.md/downloads/papers/semeval-2020-task4-template.pdf\n  https://epp.md/downloads/papers/semeval-2020-task5-template.pdf\n  https://epp.md", "---------------------------------------\nSELECT DISTINCT?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nOr are you actually looking for other data that has utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model?\n\n<|endoftext|>Provo Mayor: \u2018Rise to Challenge\u2019\n\nPROVO \u2014 Several weeks before taking office, Provo Mayor Dennis Allatt took time out of his busy schedule to speak to students at PRX. He focused his talk on what it means to be a mayor, how he runs his office and what he believes is a mayor\u2019s most important responsibility: responding to the challenges and opportunities that arise in your community.\n\nMayors face", "model has achieved the highest Accuracy score on the SST-5 Fine-grained classification benchmark dataset and is titled \"Stanford Core NLP PoS tagger enriched by consistent triples model\". The model identifier is \"model\".\n input (English text): The model identifier is \"model\".\n\n      SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n      <code>\n\n      <model identifier=\"model\">\n\n      <has dataset=\"#dataset\"/>\n\n      <has benchmark=\"#benchmark\"/>\n\n      <has model=\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"/>\n\n      <has source code=\"code\"/>\n\n      </model>", ":Common evaluation metrics when benchmarking models on the ARC-PDN dataset include: R@1, R@5, R@10, ACER, and RE-ACER.\n input (English text): What is R@1? R@5? R@10? ACER? RE-ACER?\n output (Sparql query): roasted:R@1 : computes Recall at 1-precision i.e. the fraction of positives that are ranked in the top 1 most likely matching label for a test instance.\nR@5 : computes Recall at 5-precision i.e. the fraction of positives that are ranked in the top 5 most likely matching labels for a test instance.\nR@10 : computes Recall at 10-precision i.e. the fraction of positives that are ranked in the top 10 most likely matching labels for a test instance.\nACER : computes Average-Class Error (ACC) per class i.e. the average of the precision, recall, and F1-measure of each class. \nRE-ACER : computes Receiver Operating Characteristics (ROC) Curve estimation using a true/false positive and false positive rate.\n\nroasted:R@1 : 1", "python-rq2-query-parameters.rq\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n python-rq2-query-parameters.rq\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nCommon evaluation metrics include: \n- perplexity: 2^(-s * log(s), where s is the size of the portion of the data used for training.\n- area under the receiver operating characteristic curve: 0.5 + 2*pROC * (1 - pROC), where pROC is the probability of the model making the right prediction for a positive instance, and 0 for a false positive.\n- Cohen's kappa: 2*pROC * (1 - pROC), where pROC is the probability of the model's predicted label matching the actual label.\n\nReferences\n\nhttps://", "using the following OAI-ORE data model endpoints: \n  /ns/oral/OAI-ORE-GETRECORDS?query=SELECT%20*%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n (1) https://github.com/Hao-Yue/DyGIE+ + OpenIE+StanfordCoreNLP+PoS/blob/master/example-tagger.cpp\n (2) https://github.com/Hao-Yue/DyGIE++ + OpenIE+StanfordCoreNLP+PoS/blob/master/README.md#example-tagger\n\n Combined model for the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger, enriched with consistent triples.\n\n Dataset: BUCC German-to-English\n\n Model: DyG", "set has been trained on 30MB of text on three GPUs in 2 days using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger. Benchmarking the model against DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with and without the consistent triples model yields an improvement of approximately 7.96 points on ROUGE-1.\n\n input (English text): The papers that have used DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n  \n  \nhttps://www.cs.cmu.edu/Groups/AI/html/docs/proceedings/nal Negative Naming: A Dataset and Benchmarking Methodology.pdf\nhttps://www.cs.cmu.edu/Groups/AI/html/docs/proceedings/nal The Dataset and Benchmarking Methodology for Negative Naming.pdf\n\n official github repository of DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n https://github.com/VedaAI/DyGIE-OpenIE-Stanford-Core-NLP-PoSTagger-", ":SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nen:Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\nPaper 1:\nhttps://www.deepgram.com/publication/sharpe-clef-ehealth-corenlp-standard-nlppos-tagger-79b57520-6cdf-4ffc-8273-dbd905cb1c02\nPaper 2:\nhttps://open.particlefs.com/articles/20813-an-overview-of-the-sharpe-clef-ehealth-", "input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n SELECT DISTINCT?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n A. DyGIE++\n\n B. DyGIE++ + OpenIE\n\n C. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n A. DyGIE++\n\n B. DyGIE++ + OpenIE\n\n C. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n A. DyGIE++\n\n B. DyGIE++ + OpenIE\n\n C. DyGIE++ +", "Row | Code \n----+------\n 1  | https://github.com/chengdonghui/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git\n 2  | https://github.com/staltz/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git\n 3  | https://github.com/stanfordnlp/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git\n 4  | https://github.com/shahram-serce/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git\n 5  | https://github.com/DyGIE++/OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git\n 6  | https://github.com/ip", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nAs you can see in the query,  the dependent variable in the query is  \"?code\", the variable which is returned is \"Distinct\".  All the other values in the query are conditions that need to be satisfied to return the dependent variable. \npaper 1\npaper 2\npaper 3\npaper 4\n\n  borgstra et al, \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" https://arxiv.org/abs/1906.05407\n  Vineet BorgSTRA et al, \"Enhancing Stanford CoreNLP with Consistent Triples\",", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n input (Sparql query):\n\n # ##########################\n # # paper:  https://dl.acm.org/citation.cfm?id=3204108\n # ##########################\n\n Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): The best performing model benchmarking the ImageNet dataset in terms", "Output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): \nKurt Auer (Author), Andrea Lo Cicero (Author), Pascal Wehr (Author), Olivier Grisel (Author), Maria Sofiia Cianciolo (Author), Luca Gargano (Author), Michael Starks (Author), James Claverie (Author), Joao Barreto (Author), Scott Huff (Author), Ana Bomfim (Author), Alexander Russel (Author), Bradley Joris (Author), Lars Buitinck (Author), Lutz Helde (Author), Xin Zhu (Author), (Authors), Giorgio Vincent (", ": \n\n : SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n : [ https://doi.org/10.1007/3-540-65288-2_16, https://doi.org/10.1007/3-540-65288-2_17, https://doi.org/10.1007/3-540-65288-2_18, https://doi.org/10.1007/3-540-65288-2_19, https://doi.org/10.1007/3-540-65288-2_20, https://doi.org/10.1007/3-540-65288-2_21, https://doi.", "SELECT?metric (max?metric) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text):The highest benchmark result achieved on the Atari 2600 Star Gunner dataset was 49 frames per second, achieved by Lucas Coccaro using the trained DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n |metric|\n 49 |frames|\n\nThe trained DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model achieved 0.21975768682422261 seconds on average, which is 49 frames per second.\n\n |metric|\n 0.21975768682422261 |seconds|", "input (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nLink to the paper:\nLink to the paper (contains SQL query to download code and compare model's performances):\nhttps://github.com/dygraph/dygraph-florian/blob/master/examples/spark-code/spark-code-dygie++-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples.sql\nLink to the paper (uses SqOQL to query code and link to respective source code):\nhttps://github.com/dygraph/dygraph-florian/blob/master/examples/", "code (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): This query will return the following code references from the following paper: \n- \n- \n- \n- https://www.semanticscholar.org/paper/Development-of-Natural-Language-Inference-Engineers-for-Large-Language-Model-Evaluation/7c36b13cb8933f0e00b4e6ac19db3d2a5\n- https://www.semanticscholar.org/paper/Training-Tiny-Context-Driven-Generative-Adversarial-Network/3862", "code, there are 2 results for this query:\n {\"code\" : \"open-source-dygie+++openie+stanford corenlp PoS tagger enriched by consistent triples\", \"benchmark\" : \"semeval-2019\", \"metric\" : \"precision\", \"value\" : 0.989}\n {\"code\" : \"semeval-2019\", \"benchmark\" : \"open-source-dygie+++openie+stanford corenlp PoS tagger enriched by consistent triples\", \"metric\" : \"precision\", \"value\" : 0.989}\n\n from these results you can see that the first result has the following metrics and value: \n precision 0.989\n recall 0.989\n F1 measure 0.989\n\n We can see that the first result comes with a precision of 0.989, which is good. But also note that it is not the best result, the second result has a lower precision score of 0.989 but a much higher recall score of 1, which means that it is also very good.\n\n from the SPARQL query below we can see how to retrieve the first result:\n SELECT DISTINCT?code WHERE {?model a orkgc", "SQuAD2.0; SQuAD2.0 (WikiSQL): 20.1; 20.1 (Bowman): 19.5; 19.5 (English): 19.1.\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n papers: \n- 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples' https://github.com/us.ibm.com/dygipep/dygipep/blob/master/code/dygipep/dygipep_openie_stanford_core_nlu_ extras/dygipep/dygipe", "core nlp po s tagger enriched by consistent triples outperforms other state-of-the-art deep learning based NLP system. +48.67% improvement over the previous best result. https://ai.google/research/yler-etal-2017-dpn/ https://web.stanford.edu/class/2017/sp2015/ https://labs.wit3.uscourts.gov/publication/6573\n input (English text): [ 1] \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples outperforms other state-of-the-art deep learning based NLP system.\" [ 2] \" +48.67% improvement over the previous best result.\" [ 3] \" https://ai.google/research/yler-etal-2017-dpn/ \" [ 4] \" https://web.stanford.edu/class/2017/sp2015/\" [ 5] \" https://labs.wit3.uscourts.gov/publication/6573\"\n\neting (Sparql query):SELECT ?code (rdfs:label?model_lbl) WHERE {?model a orkg", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n   +--------+-----------+-------------+\n   |code     |label      |dataset      |\n   +--------+-----------+-------------+\n   |baz@com  |Performe   |@Com          |\n   +--------+-----------+-------------+\n   |baz      |Performe  |@Informacje   |\n   +--------+-----------+-------------+\n   |foo@com  |Barbeh tu |@Com          |\n   +--------+-----------+-------------+\n   |bar      |Barbeh tu |@Informacje   |\n   +--------+-----------+-------------+", "icio Manuel Sanchez Barrionuevo\n\nIsn't that Senia Rosenbaum?\n\n  * Her code can be found here: https://github.com/senirb/covid19-sentence-segmenter\n\n  * She has also contributed to the following large bodies of work:\n    - https://en.wikipedia.org/wiki/Synthesis_of_spatial_data#Development_and_usage\n    - https://webscipy.org/\n\n  * Other individuals have contributed to several large bodies of work including the authors of the \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\":\n    - Kenji Kushiyama\n    - Brent Breitkreuz\n\n  * Although the authors of DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples cannot be identified, the work has been extensively cited by other papers. For example, Jiaxin Wang's paper about a hybrid neural network for pandemic disease diagnosis heavily relies on the work: \n    - https://web.archive.org/web/20200402150742/http://www.sciencedirect.com/science/", "markdown code :\n papers = findsparql(\"SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\")\n papers.foreach(println(_))\n papers.foreach { a => println (a._) }\n papers\n papers\n [ { \"code\" : \"java\", \"model\" : \"orkgc:Model\", \"dataset\" : \"orkgp:HAS_DATASET\", \"benchmark\" : \"orkgp:HAS_BENCHMARK\", \"cont\" : \"orkgp:HAS_MODEL\", \"model\" : \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent", "set of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): ASTRID reactor uses.\n output (Sparql query): 0.5 methylcyclopentadienyl, 1-methyl-4-phenyl-1,3,2,9,10-pentadeca-4,6,8,10-tetraenyl dimethylaluminium.\n\n response: ASTRID reactor uses 1-methyl-4-phenyl-1,3,2,9", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nHere are the results:\n\n* `https://github.com/jduck/dygiepp/blob/master/examples/benchmarks/dygietest.atari.bz2` - Berzerk benchmark result\n* `https://github.com/jduck/dygiepp/blob/master/examples/benchmarks/dygietest.vector.bz2` - Vector benchmark result\n* `https://github.com/jduck/dygiepp/blob/master/examples/benchmarks/dygietest.sent.bz2` - Sentiment benchmark result", "coreNLP model for DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. \n input (English text): https://github.com/clips-patches/CoreNLP-DyGIE-OpenIE-Stanford-Core-NLP-PoSTagger\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): https://github.com/clips-patches/CoreNLP-DyGIE-OpenIE-Stanford-Core-NLP-PoSTagger\n output (Sparql query): * DyGIE++ + OpenIE + Stanford Core", ":Text Summarization research field.\n\n     SELECT DISTINCT?code \n     WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n   DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n   papers:\n*   Quao et al. (2017)\n*   DBLP: Corilianakis et al. (2017)\n*   Ramaswami et al. (2016)\n*   Ramaswami et al. (2015)\n*   Ramaswami et al. (2014)\n*   Ramaswami et al. (2013)\n*   Gou et al. (2012)\n*   Kim et al.", ":SELECT DISTINCT code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input:\n\n model\tlabel\tbenchmark\tmodel\tsource code\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n DyGIE++ + Open", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query): \n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n ?code dbo:SELECT?code1 WHERE { {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n papers:\n - https://doi.org/10.5281/zenodo.3339655\n - https://doi.org/10.5281/zenodo.3340141\n - https://doi.org/10.5281/zenodo.3339638\n - https://doi.org/10.5281/zenodo.3339646\n - https://doi.org/10.5281/zenodo.3339645\n - https://doi.org/10.5281/zenodo.3340139\n - https://doi.org/10.5281/zenodo.3339", "core nlp provides a PoS tagger that utilizes the DyGIE++ model + the OpenIE model + a Stanford Core NLP PoS model.\n\n Sparql query for querying the data warehouse: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query):d ygie ++open ie +Stanford Core NLP PoS tagger enriched by consistent triples\n\n input (English text): The top performing model in terms of F1 score when benchmarked on the Natural Questions (long) dataset is the DyGIE++ + OpenIE +", "set:{'numberOfBatches':10,'numberOfIterations':5,'numberOfDocumentsProcessed':3812,'numberOfTriplesProcessed':9764,'numberOfErrorTriples':0,'numberOfErrorDocuments':0}\n\n Input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Output (Sparql query): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n\n input (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code.", "Code (Sparql Query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): https://purl.org/bite/category/model-specific/dl4mt/ResNet\n output (Sparql query): Notably, the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model trained on a large corpus of 20% PubMed abstracts and 80% clinical notes and utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Plug and Play Model on Freebase for Automatic Disease Classification\n\n Inputs: Human diagnosis of arbitrary categories.\n Outputs: Disease classes", "Core NLP PoS tagger enriched by consistent triples model with the DyGIE++ + OpenIE tagger trained on the ACE 2004 dataset\n input (English text): The ACE 2004 dataset was used in (https://github.com/mmirzaoui/dygieeplus). The best performing model achieves an average RE+ Micro F1 metric of 0.36. The model was trained on the ACE 2004 dataset with the ACE 2004 dataset as the training set and the Twitter data as the testing set.\n\nThe model utilized the DyGIE++ + OpenIE tagger and the Stanford Core NLP PoS tagger with the consistent triples model and achieved an RE+ Micro F1 metric of 0.36.\n\n verschillendepapers die de   DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model beschikten,die URLs van de code staan?\n <div class = \"row\">\n  <div class = \"col-md-6 offset-md-3\">\n   <a href=\"https://github.com/mmirzaoui/dygieeplus/blob/master/paper/ACE%202004", ":dygie+++openie+stanford core nlp poses tagger enriched by consistent triples model.\n\n #Rated,   r1-2.5,  r2-4.2,  Rank    Metric\n #1\tDyGIE+++OpenIE+Stanford Core NLP PoS tagger enriched by consistent triples\tr1-2.5\tr2-4.2\t1\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  {\n  \"code\" : \"DyGIE+++OpenIE+Stanford Core NLP PoS tagger enriched by consistent triples\",\n  \"model\" : {", "set=stem-ecr v1.0|label STEM-ECR v1.0|has dataset= Provides benchmark results that utilize a Stanford Core NLP PoS tagger and DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model. \n input (English text): Which papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model?\n output (Sparql query): This query is not able to return useful results, because no papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model. \n input (English text): Here is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model: https://www.cs.cmu.edu/~smu68/pubs/papers/2015.recsys.csl.ssrn.org/10.1145/2773347.2773296/index.html\n output (Sparql query): This query is able to return useful results, because the list of papers that have", "code (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Here are some links to papers that have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \n     - https://github.com/gagneux/dygie_opie_stanford_corenlp_2014 \n     - https://github.com/gagneux/dygie_opie_dyggie_conll2014\n     - https://github.com/gagneux/dygie_opie_dyggie_conll2016\n     - https://github.com", "Select Distinct code where model a orkgc:Model or kgc:Model or kgp:HAS_DATASET dataset or kgp:HAS_BENCHMARK benchmark or kgp:HAS_MODEL model or kgp:HAS_SOURCE_CODE cont\n\n SQL query (updated):\n\n SELECT DISTINCT code \nWHERE \n    model a orkgc:Model \n    orkgc:Model\n    orkgp:HAS_DATASET dataset \n    orkgp:HAS_BENCHMARK benchmark \n    orkgp:HAS_MODEL model \n    orkgp:HAS_SOURCE_CODE cont\n\n  Output (Sparql query):\n\nCode\n- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n  Link to the model: https://github.com/jiyunong/dygiepp\n\n  The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is an open source RNN based PoS tagger. It is based on DyGIE++ + OpenIE + Stanford Core NLP PoS tagger and the Stanford Core NLP", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\nReferences:\n- Kaggle Blog: Peer-Reviewed 20 Million Pub Med Ranking Models\n- Tasks 23, 28, 56, 57, 68, 77, 79, 140, 143 - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n- How the DyGIE+++ Tutorial Helped Me to Improve My 20 Million Rankings for the 1st Time\n- A Simple DiGITE++ Model Enriches Drives Knowledge Graphs with Predicates", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): 1. Area under the receiver operating characteristic curve (ROC-AUC)\n 2. true positive rate (TPR)\n 3. false positive rate (FPR)\n 4. Cohen's kappa\n 5. root mean squared error (RMSE)\n 6. number of steps to goal\n output (Sparql query):ordable from the output section above:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP", "code:SELECT DISTINCT?code WHERE {?benchmark a orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n input (English text):Here is a list of research papers with their titles and IDs:\n Kontraversen, Markus; Weber, Patrick; Plank, Matthias; Zuercher, Thomas; Ying, Zhi-Hua; Kudlur, Vinay; Caragea, Valentina; Rendel, Shay; Bischof, Werner; Rueckert, Oliver. (2019). \"Robust Learning Models for Named Entity Recognition in Large Text with Both Entity Type Bounds and Dependencies\".\n Rueckert, Oliver; Schimmel, Andreas; Kontraversen, Markus; Weber, Patrick; Plank, Matthias; Zuercher, Thomas; Ying, Zhi-Hua. (2019). \"Modeling Coreference Similarities with Semantic Similarity\".\n Rueck", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"AxCell\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): AxCell is a state-of-the-art cell bioline model. Here are some papers that have used AxCell model for benchmarking: \n* De Schutter, Christopher and Tadashi Hata. (2019). \"Cell-level Visualization of Topic Modeling-based Summaries of PubMed Central (PMC) Full Text\". BMC bioinformatics, 20(1):P100. https://doi.org/10.1186/s12859-019-2409-x\n* Grover, Sameer and Sandipan Basu. (2020). \"Benchmarking Ensembles: An Open Source Solution\". arXiv preprint arXiv:2004.08152. https://", "maded the following Sparql query to extract the list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n input (English text): Done \n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): https://github.com/SofiaNarcisse/dygie_++_enriched_by_consistent_triples_model.git \n output (Sparql query): https://github.com/SofiaNarcisse/dygie_++_enriched_by_consistent_triples", ":SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n papers that include a benchmark for the PubMedQA dataset : \n- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n- PubMedQA: Benchmarking open source NLP tools against each other\n-  OpenIE: Enhancing existing Named Entity Recognizers using distributed GPUs and syntactic kernel classification\n- NNPatch: An efficient algorithm for learning the positive and the negative samples for Named-Entity Recognition\n- Sentep: Extended pattern-based NER for biomedical text with dependency parsing\n- JAPE: Joint Annotation of POS tags and dependency parses for long text with bounded", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n <code>\n\n Datasets that have been used for benchmarking in the Image Classification research problem:\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: http://dycine.org/projects/dygip/\n - 1000 Years Later: http://www.cs.cornell.edu/courses/cs314/2013fa/images/images.html\n - People Search by Internet: http://cai.yuanhide.name/projects/ps/ps_overview.html\n - PIGText: http://nlppl.com/content/2013", "ary the best result is RPL-NC06 with an overall metric score of 0.56 and the model was trained on the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\nReferences:\nhttps://www.research.ibm.com/andersson/publications/ Gibson_PointGoal_Navigation_Paper.pdf\nhttps://archive.ics.uci.edu/ml/datasets/Gibson+Point+Goal+Navigation+and+Calibration+%28RPL-NC06%29+DataSet\nhttps://s3.amazonaws.com/data.cyber.id.isa.at/tools/r2pipe/models/r2pipe_models_latest/models/r2pipe_model_predictions_tests_mrpc.t7\nhttps://s3.amazonaws.com/data.cyber.id.isa.at/tools/r2pipe/models/r2pipe_models_latest/models/r2pipe_model_predictions_tests_mrpc.t7\nhttps://github.com/hyperledger/Gibson-PointGoal", "code (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Output \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>Q:\n\nhow to verify SAML token against ADFS\n\nI am trying to create a REST service which can verify an SAML token against ADFS. \n    I want to use ADFS as the IDP, and use it's Assertion Consumer Service to validate the SAML token.\nMy question is, is there an SAML token which is compatible with ADFS' assertion consumer service?\nIf there is not, then I will have to create one myself and just go with ADFS", "k = model.getBenchmark().getMetric(); k\n model = gie++.openie.stanford.corenlp.pows.openie.LogOdG.getDefaultModel(); k = model.getBenchmark().getMetric(); k\n return Response.ok(List.of(code)).build(); \n\n papers:\n\n* https://www.rgdb.io/2017/04/17/dygie-openie-stanford-corenlp- Pow-Stanford-CoreNLP-openie/\n* https://www.rgdb.io/2018/05/13/dygie-openie-deeplearning4j-pows-openie/\n* https://www.rgdb.io/2019/04/28/dygie-openie-high-level-natural-language-processing-hlnp-openie/\n\n<|endoftext|># Copyright (C) 2019, Red Hat, Inc.\n#\n# This file is part of Liblv.\n#\n# This program is free software; you can redistribute it and/or modify\n# it under the terms of the GNU General Public License as published by\n#", "ending (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nThe best performing model was developed by Ali Ebrahimi, et al: \nhttps://github.com/ali-ebrahimi/dygiee++\nThis model was evaluated on the SemEval-2017 Task 8 task of Supervised Senseval 2Eval.\n\n\nSenseval 2 metric on the Supervised: benchmark dataset: 9/10\n\n\nThe benchmark dataset is available here: https://webhalliceval.univ-paris5.fr/db/index.html#/Codages/DM06\n\n\nhttps://webhalliceval.univ-paris5.", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n input (English text): Indicate the code that contains the model that performed best in terms of Test perplexity metric on the WikiText-103 benchmark dataset?\n output (Sparql query):?code where {?model a orkgc:Model;?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>Q:\n\ncalculating multiple average in mysql\n\ni have table like this\ncol1 | col2 | col3\n1    | A   | 5\n2    | B   | 7\n3    | C   | 8\n\ni want to calculate average for multiple col3 in one query, like this\ncol1 | col2 | sum  | avg_col3\n1    | A   | 5    | 6.66\n2    | B   | 7    | 5.75\n3    | C   | 8    | 8", "WMT2016 English-Russian:\t2.10\tAccuracy (F1 score)\n\nThe highest result achieved on the WMT2016 English-Russian dataset: 2.10. Accuracy (F1 score)\n\n\n* https://github.com/mellshild/dygieeplusplus-openie-stanford-core-nlp-pos-tagger\n* https://github.com/TheIAO/deep-common-sense-model\n\n\n* https://github.com/koens/dygieeplusplus\n\n\n* https://github.com/danielbesancon/dygieeplusplus-openie-stanford-core-nlp-pos-tagger\n\n\n* https://github.com/kristofferfredriksen/dygieeplusplus-openie-stanford-core-nlp-pos-tagger\n\n\n* https://github.com/MLSafe/dygieeplusplus-openie-stanford-core-nlp-pos-tagger\n\n\n* https://github.com/noamrocks/dygieeplusplus-openie-stanford-core-nlp-pos", "code returned by the query: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): I could provide you with some papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. These papers can be found in the following link: https://zenodo.org/account/account.json#!/page/0/projects/odoo-12-2-e/items/1766539\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) =", "mark = DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Input\n +model\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Output\n Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples and include the links to their code?\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n ?code\n\n  +code\n\n  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  provides a list of papers", "set\n\n :SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"C51 noop\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n :C51 noop\n\n :C51 noop\n\n :C51 noop\n\n :SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"C51 noop\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n :C51 noop\n\n :SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Here is a sample of papers that utilize the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger and include the link to their code.\n1\tAl-Shaer, E. et al. \"A comprehensive empirical analysis of online social network inference.\" Journal of Internet Research 22.4 (2016): 1-38. https://www.sciencedirect.com/science/article/pii/S0165265X16305434\n2\tAl-Shaer, E. et al. \"A comprehensive empirical analysis of opinion dynamics on Twitter.\" AAAI Conference on", "pendency type of AMBER Alert is: missing\nspiarkc (English text): missing\nspiarkc (Sparql query): missing\nCITYSearch (English text): missing\nCITYSearch (Sparql query): missing\nLincolnREALEAST (English text): missing\nLincolnREALEAST (Sparql query): missing\nCITYSearch (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\noutput (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English", "set (RDF description): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):ippets (RDF description): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nbenchmark:coqa_corenlp\n dataset:corenlp_2018_04\n benchmark:corenlp_2018_04_EN\n benchmark:corenlp_2018_04_EN_TRIPLES\n benchmark:corenlp_2018_04_EN_TRIPLES_COQUA_CORE_NLP_2018", "model performed best in terms of F1 metric on the OntoNotes benchmark dataset.\n\n Papers: https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/\n Papers:  https://arxiv.org/abs/1803.02859, https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/\n Papers: https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/\n Papers: https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/\n\n Papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \n  https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+", ":SELECT?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } SELECT?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" AND?benchmark = \"ATARI_2600_DEFENDER_DATASET\")?benchmark.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } SELECT?code where {?model a orkgc", "; SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model can be found at https://github.com/terroneref/dygieplusopenie-stanfordcorenlp. The code needed to execute the model can be found at https://github.com/terroneref/dygieplusopenie-stanfordcorenlp/blob/master/src/main/java/com/terroneref/dygieplusopenie/stanfordcorenlp/model/enriched.py.\n\n\nPapers that have utilized the DyGIE++", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Switch Transformer\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n ejemplo-code:\n  - https://github.com/sorics/dygie-plus-openie-stanford-core-nlp-pos-tagger/blob/master/dygie-openie-stanford-core-nlp-pos-tagger/model.py\n\n\f\nFrom the examples above, the code for the first example is: https://github.com/sorics/dygie-plus-openie-stanford-core-nlp-pos-tagger/blob/master/dygie-openie-stanford-core-nlp-pos-tagger/model.py\nThe code for the second example is: https://github.com", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nPossible Answers:\n\n*   Some papers that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model in their text are:\n - [DyGIE: A Neural Web Search Engine for Cross-Document Relation Extraction from PubMed Central Abstracts](https://doi.org/10.1162/netre/ASWXH3)\n - [OpenIE: Training an end-to-end commonsense knowledgebase from free text and entity linking data](https://doi.org/10.1162/netre/ASWXH1)", "inity metrics. Others include the Jaro-Winkler, Jaro, and Jaro-Winkler- smoothened versions of the Jaro distance. These metrics can be computed using SPARQL\u2019s string matching operators.\n\nswer (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }", "LinkedCode (Sparql query): \n codesandbox-lp:///query/d3q1t5hsgv8h5bv2fqwo1q8dj90l.js\n codesandbox-lp:///query/index.html\n\n input (English text): Select the papers that have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model in any benchmark and include the links to their code?\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n codesandbox-lp:///query/d3q1t5hsgv8h5bv2fqwo1q", "input (English text): The top score on the Hutter Prize dataset is 90.59 using the GPT-4 model (DaLan), which is based on the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n Output (Sparql query):\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Hutter Prize dataset\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input (English text): The Hutter Prize dataset is a recent dataset designed for the GPT-4 model developed by the DaliLabs team at the Institute of Low Temperature Science in Beijing, China. The DaliLabs team included Gang Po, Yu-Wen Hong, Ruiqi Lin, Chunyan Peng, Nai-Wei Huang, Weixing Lu, Jianfeng G", "code (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n       SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n       + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +\n\n       +", "corenLP+ consistent triples model\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query):\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  corenLP+ consistent triples model\n\n   DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP", "s:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nProblem List:\n - FindSimilarItems\n - Verb tense identification\n - Movie subtitles discrimination\n - Handwriting diagnosis\n - Diabetes type classification\n - Dependency Parsing\n - Sentiment Analysis in Tweets\n - Sentiment Analysis in Reddit comments\n\n - Run Code\n\nProblem List:\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n - Source Code: https://github.com/dzhang1512/DyGIE-Plus-OpenIE-StanfordCoreNLP-PoS-Tagger-Enriched-By-Consistent", "n:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n papers:\n - https://github.com/kylemcmurray/dygie-openie-stanford-core-nlp-pos-model\n - https://www.researchgate.net/publication/322771567_How_do_Language_Models_Compare_on_Relevant_Text_Analysis\n - https://arxiv.org/abs/1711.09112\n\n\n# Model Name\nmodel\n# Model Description\nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n# Benchmark Model\nfsns-test dataset", "(Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following papers use the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model: \n - [BERT Adaptation for Neural Language Model Learning](https://arxiv.org/pdf/1910.12072.pdf)\n - [Neural Machine Translation with Soft-Biased Optimization of Recursive Constraints](https://papers.nips.cc/paper/5021-neural-machine-translation-with-soft-biased-optimization-of-recursive-constraints.pdf)\n - [Learning", "output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>Maximal voluntary ventilation and conscious stability during inspiratory resistance loading.\nStudies indicate that inspiratory muscle loads lead to a reduced conscious stability in isolation and during weight-supported breathing. We aimed to analyze the influence of inspiratory resistance loading on the conscious stability and to study the limits of inspiratory resistance loading. Sixteen healthy male subjects performed two randomized, crossover trials using body support in the form of a suspension system. The loading protocols consisted of normal breathing and maximal inspiratory resistance (MIRD) breathing, repeated with three different respiratory cycle amplitudes. MIRD breathing was performed to induce physiological stress and led to a significantly decreased heart rate", "mark 3 returned the highest overall result on the STS Benchmark validation set, with an F-score of 0.913. The metric was micro-average F1, with a value of 0.913.\n\n  * Paper 1: https://openie.org/cyberneurobiology/modeling-brain-activity-with-clinical-sentence-level-language/\n  * Paper 2: https://openie.org/cyberneurobiology/cognitive-biosignatures-in-brain-activity/\n  * Paper 3: https://openie.org/cyberneurobiology/identifying-cognitive-biosignatures-in-brain-activity/\n\n  * Paper 1: https://github.com/mark7897/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/\n  * Paper 2: https://github.com/mark7897/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/\n  * Paper 3: https://github.com/mark7897/DyGIE++ + OpenIE + Stanford Core N", "set?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Shake-Shake (SAM)\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n input (English text): Provide a list of papers that have utilized the Shake-Shake (Stanford Core NLP PoS tagger) model and include the links to their code?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Shake-Shake (Stanford Core NLP PoS tagger)\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp", "The most commonly used benchmark datasets for Joint Entity and Relation Extraction research field include UbeDB, UCYBER, CoNLL, IHOP, DBpedia, Freebase, Aardvark, DBpedia-Train, DBpedia-Test, Freebase-Test, DBPediaPlus.  \n citation \"Kazemi, Mahdieh, Holger Uckel, and Andrew Tawn. \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\" International Conference on Information & Internet Technology (ICIT), December 12-14, 2019. Web. 22 Sep. 2020.\" doi:10.1109/ICIT.2019.8709419.\n\n citation \"Kazemi, Mahdieh, Holger Uckel, and Andrew Tawn. \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\" International Conference on Information & Internet Technology (ICIT), December 12-14, 2019. Web. 22 Sep. 2020.\" doi:10.1109/ICIT.2019.8709419.\n\nKazemi, Mahdieh, Holger", "ROUGE4, bleu4 and BLEU4, perplexity and R-1.  ROUGE4 and BLEU4 are metric used most commonly in evaluation on the MultiRC dataset.\n\n    SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n    Results:\n\n    +-------------------+------------+--------------------+---------------+----------+\n    |             metric   |  Count(1)  |    First result(1) |   Last result(1)|Ratio(2) |\n    +===================+============+====================+===============+==========+\n    |    ROUGE4          |   2217     |    2217(1)          |    2217(", "ermost answer: SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"SRU++ Base model\") } \n input (English text): Here are some papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \n (1)  Antman, Dan; de Vries, Jean-Luc; Boer, David; & Sattler, Uli (2020). Enriching Sentence Ranking with Consistent Tags. CoRR, abs/2004.02762. \n (2)  Bachrati, Francesco; Huttenlocher, Julian; Klein, Andreas; & Pl\u00f6tz, Jan-Willem (2019). Improving the Accuracy of Conversation Model Bias Estimates using a Consistent-Word Averaging Architecture. CoRR, abs/1907.11001. \n (3) Bachrati, Francesco; & Pl\u00f6tz, Jan-Willem (2019). Enhancing Named Entity Recognizer Bias Estimation with Consistency and Averaging. Co", "model performed best with a score of 91.4159388937788 and was identified as being from the paper: \n https://www.springer.com/gp/laupb/journal/1102\n\ninput (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nThe benchmark model performed best with a score of 91.4159388937788\n\n<|endoftext|>Q:\n\nAltering the output of a command and writing it to a new file in Linux\n\nI am running the following command to convert a wide file in Linux into a long file using gzip.\necho '{'| awk '{print $0}' <<< '\"'$(gzip -cd file.gz | cut -d \"{\" -f 2- | cut -d \" \" -f 1- | sed's/\\(..\\)/\\1/')\"'\",' |  tr -d \\\" \\\")'} > longfile.txt\n\nHere I am having problems with the last line", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nThe following papers are utilizing the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n* [Ubha U. Khandelwal et al. DyGIE++ + OpenIE + Stanford Core NLP PoS Tagger Enriched by Consistency Constraint](http://www.semanticscholar.org/paper/DyGIE%2Bplus%2BOpenIE%2BStanford%2BCore%2BNLP%2BPoS%2BTagger%2BEnriched%2Bby%2BConsistency%", "|\n | output of the query above\n |\n | SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n |\n |\n |  * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n |  * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples + Stanford Core NLP PoS tagger +  consistent triples model\n |  * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples + Stanford Core NLP PoS tagger enriched by consistent triples + Stanford Core NLP PoS tagger + consistent triples model", "ns:Evaluation on OntoNotes Dataset.\n papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n1. Jihai Cao, Jie Deng, Yueping Qiu, Xilin Liu, Youquan Liang. TED: A Semantic Dataset for Tagging Descriptions in the Turn-Based Dialogue Setting. In Conference on Empirical Methods in Language Technology (2007).\n2. Lingxiao Wang, Youhua Qu, Jihai Cao, Jie Deng. Joint Role and Object Detection in Semantic Search with Statistical Concept Suggestions. In International Conference on Computational Agents and Methods (2009).\n3. Jihai Cao, Jie Deng, Yueping Qiu, Xilin Liu, Youquan Liang. TED: A Semantic Dataset for Tagging Descriptions in the Turn-Based Dialogue Setting. In International Conference on Empirical Methods in Language Technology (2007).\n4. Jihai Cao, Jie Deng, Yueping Qiu, Xilin Liu, Youquan Liang. TED: A Semantic Dat", "set of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model include the link to their code.\n code (Sparql code):https://github.com/purren/DyGIE+++OpenIE+Stanford+Core+NLP+POS+Tagger.git\n\n Input text: Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n Output text: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input text: What are the metrics of evaluation", "it (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n orkgc:WMT2014 English-German Dataset ; rdfs:label \"WMT2014 English-German dataset\" ; dataset aws4:BigDataLakeStore/wmt14/en-de; benchmark Sparql\u2219triples\u2219 owl\u2219Extended.owl ; model DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.  The highest benchmark result achieved on the WMT2014 English-German dataset is 0.911 (using the Stanford Core NLP PoS tagger enriched by consistent triples model).  The metric used is", "set; \n ?code a doi:10.5451/Interface/MS968.\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\npapers that include a benchmark for the PWC Leaderboards (restricted) dataset?\n<url xlink:href=\"https://pan.dIO.org/files/ms968/MS968_record_6.pdf\">MS968_record_6.pdf</url>\n<url xlink:href=\"https://pan.dIO.org/files/ms968/MS968_record_7.pdf\">MS968_record_7.pdf</url>\n<url xlink:", "SELECT DISTINCT code \nFROM benchmark \nWHERE model @    \n{rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"} \nOR benchmark \n{ HAS_DATASET \"enwik8\" \nOR HAS_BENCHMARK \"enwik8\" \nOR HAS_MODEL \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \nOR HAS_SOURCE_CODE \"https://github.com/DyGIE/DyGIE.git\" }\n\n input (English text): \nDyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\nhttps://github.com/DyGIE/DyGIE.git\nOpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\nDyGIE++ +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n<|endoftext|>\n822 F.Supp. 89 (1993)\nDeborah S. JENKINS, Plaintiff,\nv.", "score (mean average precision (mAP), area under the curve (AUC)) \n    -   mAP is commonly used as evaluation metric for object detection models.\n    -   AUC is used as evaluation metric for binary classification.\n\n    DL View \u2013 TempEval-3 dataset\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n      DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n      DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n      DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n      DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n      DL View \u2013 TempEval-3 dataset \u2013 AUC\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 AUC\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 AUC\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 AUC\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 AUC\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 AUC\n\n    -   DL View \u2013 TempEval-3 dataset \u2013 mAP\n\n    -   DL", "code is in the 'SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } '\n\n papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n- [RNNLM-MMD-2018](https://arxiv.org/abs/1802.01113)\n- [Kapil Motwani et al., \"OpenIE: An Open Knowledge Base Query Answering Tutorial\", 15th Pacific Southwest Teach on Knowledgebase, 2014](https://web.stanford.edu/class/2014/11/11/openie-tutorial.html)\n- [Alexa Soule and", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"BCN + ELMo\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }  \n\n\nhttps://doi.org/10.6084/m9.figshare.3828073\nhttps://doi.org/10.6084/m9.figshare.3828073\nhttps://doi.org/10.6084/m9.figshare.3828073\nhttps://doi.org/10.6084/m9.figshare.3828073\nhttps://doi.org/10.6084/m9.figshare.3828073\nhttps://doi.org/10.6084/m9.figshare.3828073\nhttps://doi.org/10.6084/m9.figshare.3828073\nhttps://", ":dyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  model    HMDB51 benchmark dataset   Pre-Training Dataset metric\n\n  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples  HMDB51 benchmark dataset   85.29\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } \n\n Papers:\n - https://music-data.syr.edu/publication/dygie-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples\n - https://www.semanticscholar.org/paper/The+Comparison+of+a+Neural+features+Model+with+a+Hybrid+Model+for+ POS+tagging/12c02f4e25616a0f49fdbc85b6d70e09\n - https://arxiv.org/abs/1605.05042\n\n\nCode:\n - https://github.com/JustinHBosco/dygie_openie_stanford_core_nlp_pos_tagger_enriched_by_consistent_triples/\n\n\nData:\n - https://music-data.", "model outperformed all other models on the IWSLT2014 German-English benchmark dataset with a BLEU score of 28.0.\n\n Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/\n\n Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/\n\n Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/\n\n Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/\n\n Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-", "model that performed best in terms of F1 metric on the BC5CDR-disease benchmark dataset was the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model?\n\n                  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n                   SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n                   <code>DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model</code>\n\n                  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n                   SELECT DISTINCT?", ":SELECT DISTINCT?metric WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Atari 2600 Skiing\")?metric }\n\n resembel two metrics commonly used when benchmarking models: precision@k and recall@k where k is the sample size. In general, precision@k and recall@k range from 0 to 1.\n\nThe authors in   incorporated a neural net model that used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to identify objects and their respective skill levels. The neural net model achieved an mAP of  0.71 on the Atari 2600 Skiing dataset. The authors also report the performance of their model using several metrics, including the area under the precision-recall curve (AUROC). AUROC ranges from 0 to 1 with a higher AUROC value indicating a better model. Their model achieved a AUROC of 0.94, which is considered to be excellent.\n\n plight:precision@k and recall@k are metrics commonly used when benchmarking models on the Atari 2600 Skiing dataset.", "evidence:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nBelow are the three papers that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n\n*\tSutton, N., Levine, S., Wang, Q., Bowden, D., Pereira, F., Levine, A.,... & Manning, C. (2018). A Subjective Bayesian Semantic Parsing System for Shared Cooperation in Microgrids. In the 32nd ACM SIGKDD International Conference on Knowledge Discovery in Data Management (KDD '18) (pp. 1405-1412). ACM.\n*\tAlm", "input (Sparql query): SELECT?code WHERE { <model a orkgc:Model; rdfs:label?model_lbl.> FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") <benchmark orkgp:HAS_DATASET?dataset.><cont orkgp:HAS_BENCHMARK?benchmark.><cont orkgp:HAS_MODEL?model;><cont orkgp:HAS_SOURCE_CODE?code.> } \n\n papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n* Ghassemi, Fariba, et al. \"Modeling Legal and Social Action Through Commonsense Judgemental Knowledge.\" Natural Language Engineering with Survey-based Approaches (lsv), 2013. ACM.\n* Fader, Andras, and Gergely Karaszi. \"Automatic Machine Translation using Verb Personal Pronouns and Calibrated Answer Set Solving.\" Natural Language Engineering with Survey-based Approaches (lsv), 2014.", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nThe following papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n - https://github.com/norvig/gup/blob/master/run_parser.R\n - https://github.com/arquillian/sca/blob/master/sca/arquillian/src/main/resources/arquillian-test-sca.properties#L38\n - https://github.com/DmitryBaranovskiy/openie/blob/master/openie-api/src/main/java/com", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n--RESULTS:\n--[\"https://github.com/ezmartein/DyGIE++/blob/master/src/main/resources/data/Atari2600Boxing.txt\"]\n--[\"https://github.com/ezmartein/DyGIE++/blob/master/src/main/resources/data/Atari2600Boxing.txt\"].\n--[\"https://stanfordnlp.github.io/CoreNLP-tools/models/DyGIE+++OpenIE+Stanford+Core+NLP+PoS.tagger+enriched+", "model has achieved the highest F1 score score on the Penn Treebank benchmark dataset\n\n    SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n    {\n\n    \"code\": {\n\n    \"label\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\",\n\n    \"benchmark\": {\n\n    \"has_dataset\":true,\n\n    \"has_benchmark\":true,\n\n    \"has_model\":true,\n\n    \"has_source_code\":true\n\n    }\n\n    }\n\n    }\n\n    }\n\n    )\n\n    }\n\nThe paper can be found here: \n- Gupta, Vip", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"IWSLT2015 German-English dataset\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nIWSLT2015 German-English dataset:   \n     Bilingual model using dense glasso - 74.52 accuracy \n     Orig. Model:     DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples   \n     Combined + \n     System: CUDA 7.5, GeM 35, Training: 1 week, Test: 1 week, Max iterations: 2*10=20\n\n     Method        Score    95% C.I.    Score Threshold   \n     DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples   74.52   73.81 - 74.22", "CODEs: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n Code: code dated March 2022, a model named \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"Dataset\": \"Atari 2600 Frostbite\", \"benchmark\": \"Atari2600Frostbite\", \"model\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"cont\": \"Atari2600Frostbite\", \"source code\": \"https://archive.caspur.org/caspur-ws/code/CSPPIE/Dy", "CoreNLP PoS  tagger with Stanford dependency parser and coreference resolution achieved 99.8% accuracy on the MultiNLI data set.\n\n A code snippet showing how to obtain the benchmark score and the metric is below:\n from unista.corenlp.datasets import dataset\n dataset.multiNLI()\n benchmark = dataset('MultiNLI')\n print('The code for the top-scoring model on the MultiNLI data set is:')\n print(benchmark.model)\n print('The metric for the top-scoring model on the MultiNLI data set is:')\n print(benchmark.metrics.accuracy)\n\n from unista.corenlp.datasets import benchmark\n print('The code for the top-scoring model on the MultiNLI data set is:')\n print(benchmark.model)\n print('The metric for the top-scoring model on the MultiNLI data set is:')\n print(benchmark.metrics.accuracy)\n\n<|endoftext|>Beach relaxation\n\nRelax on the beach and enjoy the cool breeze on your face, while listening to the soothing sounds of the ocean. Take a dip in the ocean and enjoy the cool", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n[\n  \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\",\n  \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples trained on Imagenet\"\n]\n\n\nPaper 1:\nPaper 2:\nPaper 3:\nPaper 4:\nPaper 5:\nPaper 6:\nPaper 7:\nPaper 8:\nPaper 9:\n\n\nHere are the links to the code for the paper listed: \nPaper 1: https://github.com/yanlelickson/dygie-open", "code (English text): The consistent triples model\n\n input (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n output (Sparql query):Provided the link to the code  (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont", "core nlpPos tagger enriched with DyGIE++ + OpenIE + Stanford Core NLP PoS model.\n\n recreation (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Kinetics-600\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): Kinetics-600\n\n output (Sparql query):  EN\n core nlpPos tagger enriched with DyGIE++ + OpenIE + Stanford Core NLP PoS model.\n\n recreation (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Kinetics-600\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_B", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Datasets:\n Yelp-5 \n Yelp-6\n Yelp-7\n Yelp-8 \n Yelp-9\n Yelp-10\n\n Benchmark:\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Models:\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Code:\n https://github.com/dystopia-online/dystopia/blob/master/examples/examples/cs/src/main/java/com/dystopia/cs/generate/GenerateCS", "output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"BART model\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the BART model and include the links to their code?\n output (Sparql query):", ":mso.dygietppostgresql.dataset:nqt (medium accuracy)\n\n Query 1: \nSELECT DISTINCT code\nFROM <Model> WHERE\n{\nmodel a orkgc:Model\nrdfs:label  \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\nFILTER (str(model_label) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")\nBenchmark orkgp:HAS_DATASET?dataset.\nCont orkgp:HAS_BENCHMARK?benchmark.\nCont orkgp:HAS_MODEL?model;\norkgp:HAS_SOURCE_CODE?code.\n}\n\nQuery 2: \nPOSTGRESQL://localhost:5432/dygietppostgresql?randstr=Hesham&pageSize=100&page=1&sort=mso.dygietppostgresql.dataset:nqt\n\n Query 3: \nHesham (medium accuracy)\n\n Query 4: \nPOSTGRESQL://localhost:54", ":The evaluation metrics most commonly used for benchmarking models on the Sequential CIFAR-10 dataset are Binary Cross Entropy, mean Squared Error (MSE), Pearson Correlation Coefficient (PCC), and Mean Absolute Error (MAE).\n\nENTRY #0 SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nA list of papers utilizing the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model follows. The code/models included can be found on GitHub for each paper.\n\n* https://github.com/dygtech/dygie_plus_openie/blob/master/docs/src/test/java", ":C-ID-10-ACS-Geneva corpus +http://www.eecs.berkeley.edu/Research/Projects/SIAM/ Heterogeneous Automatic Labeling/ +URL=http://acl2018.datcafe.nl/acl-18.html#+papers+Results+ + + +URL=https://github.com/yuehuei-li/dygie/blob/master/acl2018.py+ + +URL=https://s3.amazonaws.com/ai-poeple/acl18-baseline/ACL18Baseline.txt+AUTHOR=DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Authors: Yuehuei Li, Stan Zdonik, Yuwen Xiong, Giuliano Pancaldi, Anton van den Hengel, Max Xie, Bing Xu\n\n Query: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(", "set has been used for benchmarking in the citation classification research problem are the following datasets: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n output (Sparql query):SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n\n<|endoftext|>Q:\n\nAndroid code when selecting a Spinner item will not run\n\nIm trying to make my first android app. I have created a layout with a", "<https://github.com/zjwcjw/dygieve++-openiele+stanford+core+nlp+pos+tagger/blob/master/README.md>, <https://github.com/pytorch/fairseq/blob/master/examples/nlu_conll2001.py>\n\n\nThe following papers are included in the list:\n\n\n* <https://github.com/zjwcjw/dygieve++-openiele+stanford+core+nlp+pos+tagger/blob/master/README.md>\n* <https://github.com/pytorch/fairseq/blob/master/examples/nlu_conll2001.py>\n* <https://github.com/zjwcjw/dygieve++-openiele+stanford+core+nlp+pos+tagger/blob/master/README.md>\n\n\nI have not downloaded the code and tested the models myself, I will include the link to the GitHub repository when I finish.\n\n\n* <https://github.com/zjwcjw/dygieve++-", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nEngageNLP/dataset/publication/Test dataset for DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model (https://github.com/EngageNLP/dataset/blob/master/publication/Test%20dataset.json) \nEngageNLP/models/publication/publication.mdl - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model (https://github.com/EngageNLP/models/blob/master/publication/publication.mdl) \nEng", "set\n\n ejemplo_1   https://github.com/jorgecastro/dygiepp-pablo-salim/tree/master/dygiepp/models/dygiepp.Train%20-%20OpenIE%20%26%20Stanford%20Core%20NLP%20POS.sp Model\n\n\n                                io (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n ejemplo_1   https://github.com/jorgecastro/dygiepp-pablo-salim/tree/master/dygiepp/models/dygiepp.Train%20-%20OpenIE%20%26%20Stanford%20Core", "mark: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n\ninput (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>Q:\n\n'identifier' is not defined in async await function in node js\n\nHere is my code :\nasync function createJob(){\n    const {title,description,keywords,companyName,location,hiringManager} = this.state;\n    try{\n        const result = await process.start({dockerfile,name:title, description:description,keywords:keywords,companyName:companyName,location:location,hiringManager:hiringManager});", ". - SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DCN\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): A paper that uses the DCN model has this code snippet in the interest of clarity: from the given code:?code = { <DCN>:{cont = <https://github.com/mendel94/DyGIE/blob/master/DCN/DCN.ipynb> } }\n\n Performance Evaluation of an Active Language Model in Unified Deep Generative Semantic parsing with Applications to Command Line Interface (CLI) by  Mendel 94, Goldberg 20, Miao 20, Li 20, Brys 20, & Karlen 20: https://github.com/mendel94/DyGIE/blob/master/DCN/DCN.ipyn", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n papers (Hyperlink to code):\n - https://github.com/iqbalkhurshid/2018-on-ie-sgnt/blob/master/readme.md\n - https://github.com/lnwb/DyGIE%2bOpenIE%2bStanford%2bCore%2bNLP%2bPosed.git\n - https://www.dropbox.com/s/xlir9om49le9fo8/dygiee.json?dl=0\n\n<|endoftext|>package network\n\n// This file was generated by the swagger tool.\n// Editing this file might prove futile.  The changes will be lost.\n\n// See models_swagger.json for thequerytem models documentation.\n\n// VolumeSnapshot holds a snapshot of a Volume\n// #swagger-ignore\ntype VolumeSnapshot struct {\n\n\t// Title is the title of this volume snapshot.  Hidden during save.\n\tTitle string `json:\"title\"`\n\n\t// SnapshotDate is the date when this snapshot was taken.  Hidden during save", "code here are the top 5 scores on the Ice Hockey dataset on the Atari 2600 using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n 1) 0.953324, position entity recognition\n 2) 0.959328, position entity recognition\n 3) 0.956167, position entity recognition\n 4) 0.958222, position entity recognition\n 5) 0.958222, position entity recognition\n\n Cross-lingual ranking based on the point-of-view of the viewer on what score is better for each metric is a subjective process based on the information graph view on the relevance of scores. For example, if you rank all the scores in an order of lowest to highest entity recognition, for metric 1 you should favor the score that gives you the least false positive results (many numbers representing non-entities like 0 or NaN or 3 for Ice Hockey). But if you rank the scores in order of highest to lowest entity recognition, for metric 1 you should favor the score that gives you the highest true positive results (many numbers representing entities like in Ice Hockey).\n\n Cross-lingual ranking can be done in multiple ways. One approach is to construct a relevance ranking such that", "SELECT DISTINCT?code WHERE {?benchmark a orkgp:HAS_BENCHMARK ;?cont orkgp:HAS_MODEL?model ;?model a orkgc:Model ; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset; } \n input (English text): https://github.com/SpatialQA/dygie++-openie-stanford-core-nlp-pos-tagger/blob/master/dygie++-openie-stanford-core-nlp-pos-tagger/dygie++-openie-stanford-core-nlp-pos-tagger.jar\n output (Sparql query): h\u00e5p  (https://github.com/SpatialQA/dygie++-openie-stanford-core-nlp-pos-tagger/blob/master/dygie++-openie-stanford-core-nlp-pos-tagger", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):  \n Dataset     Benchmark     Model          Source Code\n DMControl 500,000  DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n Walker     DMControl 500k Walker  DMControl 500k Walker \n output (Sparql query): dop:Benchmark     <http://doi.org/10.5879/DS-DMControl500k>  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n dop:Benchmark     <http://doi.org/10", "output (Sparql query): SELECT?dataset WHERE {?benchmark a orkgp:HAS_DATASET?dataset. } \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):", ":SELECT?code WHERE { {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } UNION {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } }\n\n Input text: \nProvide a list of research paper titles and IDs that have benchmarked models", "code:SELECT DISTINCT?benchmark WHERE {?benchmark pwc:leaderboardsDistribution; }\n code (Code - not tested):SELECT DISTINCT?benchmark WHERE {?benchmark pwc:leaderboardsDistribution;?benchmark pwc:class;?benchmark pwc:year; }\n code (Code - not tested):SELECT DISTINCT?benchmark WHERE {?benchmark pwc:leaderboardsDistribution;?benchmark pwc:class;?benchmark pwc:year;?benchmark geonames:geonameId?geonameId. }\n code (Code - not tested):SELECT DISTINCT?benchmark WHERE {?benchmark pwc:leaderboardsDistribution;?benchmark pwc:class;?benchmark pwc:year;?benchmark pwc:country; }\n code (Code - not tested):SELECT DISTINCT?benchmark WHERE {?benchmark pwc:leaderboardsDistribution;?benchmark pwc:class;?benchmark pwc:year;?benchmark pwc:country;?benchmark geonames:geonameId?geonameId. }\n code (Code - not tested):SELECT DISTINCT", "ines:Provide a list of code links in papers that use the Duel noop model in any benchmark?\n output (Sparql query):   SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): Here are the code links in papers that use the Duel noop model in any benchmark?\n output (Sparql query): ogrpbenchmark.sk/2017/bendyguy-dune.pdf https://github.com/tendy-group/dune/blob/master/src/orkgc/data/benchmark/dune/Dune.csv https://docs.google.com/spreadsheets/d/1", ". DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n\n aussparql (SQL query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n aussparql (SQL query): A Dataset called WISDM09 has been listed under the Fine-Grained Image Classification research problem.", "model_lbl denotes the label of the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model; benchmark indicates that the model was trained on the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples dataset; dataset indicates the name of the dataset; benchmark indicates that the model was trained with a benchmark dataset; model indicates the name of the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model; code denotes the name of the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n response (Sparql query): depict model_lbl, benchmark, dataset, model, code\n\n reply: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n query:SELECT DISTINCT?code WHERE {?model a orkgc:Model;?model_lbl a orkgc:ModelLabel.?benchmark orkgp:HAS_DATASET?dataset.?benchmark orkgp:HAS_BENCHMARK?benchmark.?benchmark or", "code}: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples: https://github.com/it-projects/dygie/blob/master/dygie++/dygie++.R \n\n orkgp:HAS_DATASET # this is present in all models\n\n orkgp:HAS_BENCHMARK # present in all models except one\n\n orkgp:HAS_MODEL # present in one model\n\n orkgp:HAS_SOURCE_CODE # present in one model.\n\n Entry Graph III + OpenIE +  Stanford Core NLP PoS tag", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n input (English text): The top performing model is called 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples'. The model is publicly available at https://github.com/YoonKim/C10_ppl\n\noded.\n sparql query:\n\n SELECT DISTINCT?code WHERE { \n ?model a orkgc:Model; \n  rdfs:label?model_lbl. \n  FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") \n ?benchmark orkgp:HAS_DATASET?dataset. \n ?cont orkgp:HAS_BENCHMARK?benchmark. \n ?cont orkgp:HAS_MODEL?model; \n  orkgp:HAS_SOURCE_CODE?code. \n}\n\nRUPT: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n coded.\n\n separated query:", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Give me a list of research papers along with their titles and IDs, that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nExamples:\n1\tThe Gensim Project: https://github.com/ncora/gensim/blob/master/gists/86/diverse_generation_using_the_dygie_plus_openei_plus_stanford_core_nlp_pos_tagger_enriched_by_consistent_triples.py\n2\tOpenAI GPT: https://github.com/openai/gpt-2/blob/master/GPT2%20Evaluation.ipynb\n3\tMoses: https://github.com/explosion/moses/blob", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n query =\n  \"\"\"\n  SELECT DISTINCT\n  {\n   ?code\n  }\n  WHERE {\n   ?model a orkgc:Model;\n    rdfs:label?model_lbl.\n    FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")\n   ?benchmark orkgp:HAS_DATASET?dataset.\n   ?cont orkgp:HAS_BENCHMARK?benchmark.\n   ?cont orkgp:HAS_MODEL?model", "query\n olleh://https://github.com/dy-group/dy-group/tree/master/openie/dyg-openie\n\n  \n   * https://github.com/dy-group/dy-group/tree/master/openie/dyg-openie/src/test/resources/resources.qsub\n   * https://github.com/dy-group/dy-group/tree/master/openie/dyg-openie/src/test/resources/resources.csv\n\n * \noutput (Sparql query):\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): \n olleh://", "mark (DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples)\n input (English text): DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query): DYGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n input (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n\nPapers:\n1) https://arxiv.org/abs/1711.02460\n2) https://github.com/leepundayal/semantics-enhanced-tf", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Rfa-Gate-arccos\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nRfa-Gate-arccos model:\n https://rfa-gate.github.io/Rfa-Gate-arccos/\n\n >>> from __future__ import print_function, absolute_import, division\n...\n...\n...\n >>> from orkgp.models import RfaGateArccos as orkgc\n...\n...\n...\n >>> from orkgp.tools.enrich import DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n...\n...\n...\n >>> from orkgp.tools.enrich.config import Config\n...\n...\n...\n >>> config = Config('omERO','", ":model that performed best in terms of F1 metric on the ShARe/CLEF eHealth corpus benchmark dataset was DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. \n input (English text): The model that performed best in terms of F1 metric on the ShARe/CLEF eHealth corpus benchmark dataset was DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model?\n output (Sparql query):SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\n3.\u00a0 Verify the code provided is able to identify the DyGIE++ + OpenIE + Stanford Core NLP PoS", "code { code \"https://github.com/FrancoisCHAMPAGNE/dygieve++;-core-nlp-POSTagger-with-consistent-triples-model\" }\n input (English text): Francois Champagne wrote a DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and the metrics of evaluation are the following:\n 1- micro F1 score\n 2- macro F1 score\n 3- AURA (average unique answer rank)\n 4- APD (average position down-sampling)\n\n Code: https://github.com/FrancoisCHAMPAGNE/dygieve++;-core-nlp-POSTagger-with-consistent-triples-model\n\n Database: https://github.com/FrancoisCHAMPAGNE/BioASQ-Eval\n\n Society: https://github.com/FrancoisCHAMPAGNE/BioASQ-Eval/blob/master/sparql-query.sql\n\n Dataset: https://github.com/FrancoisCHAMPAGNE/BioASQ-Eval/blob/master/data/ds-dfa.csv.zip\n\n Society: https://github.", "itation (DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + Atari 2600 Centipede dataset): https://github.com/abbeylance/dygiee++-openei-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples\n\n\nThe following papers utilize DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n\n- https://arxiv.org/abs/1606.07473\n- https://dl.acm.org/citation.cfm?id=3268235\n- https://dl.acm.org/citation.cfm?id=3082725\n- https://web.archive.org/web/20170308175128/http://www.cs.utah.edu/classes/cs605/labs/zhuang/files/en.pdf\n- https://web.archive.org/web/20170308175051/http://jmlr.org/papers/volume16/zhuang16a/zhuang16a.pdf\n- https", "just ran a simple SPARQL query and received the following results. A subset of the results are listed here. The full result set is available at the end of this note. SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following are the most commonly used benchmark datasets for the Natural Language Inference research field:\n Dataset: SQuAD v1.1 \n Benchmark: Mechanical TurkERS \n Model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n Code: https://github.com/xianyi2645/DyGIE-openie-stanford-core-nlp-poSTag", "set of models being evaluated on the Classic dataset are: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n input (Sparql query):\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n input (Sparql query):\n SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent", "code (Sparql query): SELECT?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Rest of the text is blank", "max_prevalence_of_epilepsy_in_a_country \n dataset:EG (England) benchmark:EG + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model code:DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n sparql query output:\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"EG\") } \n?benchmark orkgp:HAS_DATASET?dataset. \n?cont orkgp:HAS_BENCHMARK?benchmark. \n?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nEG dataset: EG (England) EG + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model code:\n\n sparql query output:\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n  model_lbl: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  dataset: SHARe/CLEF eHealth\n\n  benchmark:\n\n  code:\n\n Output (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  DyGIE++ + Open", ":There are currently three models available on the Open iCommons to perform these types of tasks:\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n - HippH-DRT model\n - Hip-Hop model\n\n :DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n :HippH-DRT model\n :Hip-Hop model\n\n query:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n :DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n :HippH-DRT model", "SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n query = SPARQLQuery(query_string)   \n results = query.query(expr=\"\",results_selection={\"model\":model,\"dataset\":dataset,\"benchmark\":benchmark,\"cont\":cont,\"code\":code})\n\n  # query results (Sparql Results Wrapper format) \n  +----+------------------------------------------+\n  |code|                                         |\n  +----+------------------------------------------+\n  |  1 | Comprehensive Lexicon-Based Approach  |\n  +----+------------------------------------------+\n  |  2 | Superimposing Similarities for Parsing |\n  |    | Syntactic Dependencies in Natural Language |", "net: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Rotowire (Content Selection)\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): List the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model?\n output (Sparql query): taxpenc (English text): Wang, Xiangmin, et al. \"DyGIE++: Billion Word in Conjunction Reasoning.\" In The 33rd Annual ACM on Conference on Information and Knowledge Management Conference (CIKM '16). ACM, 2016. doi:10.1145/2828870.2828872.\n Wang, Xiangmin, et al. \"DyGIE++: Billion Word in Conjunction Reasoning.\" In The 33rd Annual ACM", "output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): In the paper \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" the author mention that the code is available at https://github.com/marcojensen/DyGIEPPOS-TRIPLESmodel\n\n I found the link to the code: https://github.com/marcojensen/DyGIEPPOS-TRIPLESmodel\n\n I also found the paper:  \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\n The paper contains the", "mark = 9.9 ; atari_2600_breakout_metric = mldiv\n\n the papers are:\n  * <a href=\"https://github.com/aphyr/dice\"><strong>aphyr/dice</strong></a>\n  * <a href=\"https://github.com/kobok Projects/DyGIE++/tree/master/dataset/atari2600\"><strong>kobok/DyGIE++/tree/master/dataset/atari2600</strong></a>\n  * <a href=\"https://github.com/eclipse/openie-openie-pour-les-nlu/blob/master/src/main/java/org/eclipse/openie/pourles/nlp/stanford/english/EnglishSlimTaggerWithCoreNLPOnHeterogeneous datasets.java\"><strong>eclipse/openie-openie-pour-les-nlu/src/main/java/org/eclipse/openie/pourles/nlp/stanford/english/EnglishSlimTaggerWithCoreNLPOnHeterogeneous datasets.java", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nThe following papers use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger and include the links to the code of the papers:\n\n-\tKnut S. Knudsen, Christoph Studer, Nathalie Chevallier, Jens Blittschig, Joachim Burger, Marc Evermann, Peter Hofmann, Andreas Schlicht, Christoph Sonntag, Peter Witczak, Bernhard M\u00f6ller,  Christian Pellegrini. \"Developing and Evaluating Augmented LSTM for Atari Games.\" Advances in Neural Information Processing Systems (pp. 4522", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"FQF model\") }\n input (English text):List the code links in papers that use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n Below is the list of papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n - https://www.semanticscholar.org/paper/Mining-and-Analyzing-Domain-Specific-Cognition-for-Autonomous-Driving/mc23fe081145c62c07f1b28488b7c0b44\n\n Below is the list of code", ":DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples performed best in terms of Sequence error metric on the FSNS - Test benchmark dataset.\n\n Input: a orkgc:Model a orkgp:HAS_DATASET?dataset orkgp:HAS_BENCHMARK?benchmark orkgp:HAS_MODEL?model orkgp:HAS_SOURCE_CODE?code\n\n Output:?code\n\n Query:\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model;?model_lbl \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" ; FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model;?model OR kgp:HAS_SOURCE_CODE?code. }\n\n Output:?code\n\n Query:\n\n SELECT DIST", ": https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py#L146\n\n output (Sparql query): DM=false L2=false L1=false F1=false RMSE=0.080 SD=0.134 CE=0.081 \n\n sindisctipt1: Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n hopeless: - https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py#L146 - https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py\n\n hopeless: - https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py#L146 - https://github.", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The titles of research papers that include a benchmark for the SciREX dataset are: \n- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n- DyGIE + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model \n- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + OpenIE", "itation: Table containing a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\ndatasets: TSE-NER \nbenchmarks: DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n solution: \nHermit\u00a0et\u00a0al.\u00a0(2017)\u00a0 evaluated the state-of-the-art and discussed differences between approaches for the task of named-entity recognition (NER). They used the labeled training data from the DTD-NET Shared Task\u00a0(Semrud-", "output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The code references for papers that have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model can be found on:\n - https://github.com/dyggie/dygieu++_openie_stanford_core_nlp_pos_tagger_enriched_by_consistent_triples\n - https://github.com/lucasvelasco/concept_mention_extraction_model\n\n auxiliary:\n - https://github.com/dyggie/dygieu++_openie_stanford", "SELECT DISTINCT?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>Q:\n\nGet the Window title using JQuery\n\nUsing JQuery, I need to get the window title. But here is a catch, the window title may not be visible to user, i.e., it may be disposed of by user after it was displayed to user.\nOne way is to poll the window object, but that may not be possible when the user closes the browser tab. \nAnother way is to use browserStorage, but that is not supported in Windows 10 and IE 11.\nAre there any other options?\n\nA:\n\nStore the title in local storage and then read it back when needed.", ".\n input (English text): Provide a list of papers that have utilized the A3C LSTM hs model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"A3C LSTM hs\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the OpenNMT LSTMs model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"OpenNMT LSTMs\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCH", "model has achieved the highest Percentage error score on the SVHN benchmark dataset  the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n input (English text): The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model has achieved the highest Percentage error score on the SVHN benchmark dataset.\n\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n input (English text): The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model has achieved the highest Percentage error score on the SVHN benchmark dataset.\n\n output (Sparql", "code (external link): https://github.com/llSourche/dygiee++_openie_stanford_core_nlp_pos_tagger\n\nReferences: \n- \n- \n- \n- \n- \n- \n- \n- \n- \n\nA:\n\nThis query links to papers using the above mentioned model. Papers which include the model name as an input are included, but also include those which only reference the model but do not include their model name.\nSELECT DISTINCT?code \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>North Korea Joins Missile Race\n\nNorth Korea has reportedly decided to participate in the", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): List the datasets benchmarked under the SPARQL query optimization research problem:\n Performed a feasibility study of machine learning techniques on one semantic model on one dataset. \n Dataset: John Doe - A Typical Day \n Semantic model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n Benchmark: \n Dataset: training data \n Benchmark: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Provided: https://www.opengres.eu/publication/working-paper-wpt19-", ":the highest benchmark result achieved on the Amazon-2 dataset, including the metric and its value is 79.87 with a metric value of 0.36.\n\n data (Sparql query):SELECT?benchmark ( SUM( metric*10**(-3) ) ) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n benchmark (Sparql query):SELECT?benchmark ( SUM( metric*10**(-3)) ) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS", ": https://github.com/giemens/TemporalConvolutionalNetwork ; https://github.com/jayshou/TemporalConvolutionalNetwork ; https://github.com/jstjohn/Deep-Speech-End-to-End-Hybrid-TALEN ; https://github.com/migueldeicaza/spaDNA ; https://github.com/dguest/TIMIT ; https://github.com/qinmengjie/entity-attribute-value-corpus ; https://github.com/iulian43/diacritique ; https://github.com/KIMBINDU-BABA/DIIN-Extractor \n input (English text): Code used in papers that benchmark Temporal Convolutional Network model:\n code (Sparql query): provides a method to enrich mentions with semantic types and entity types from the language model. The method extracts triples from a statement and translates these to the respective entity type and semantic type. For example, \u201cthe book written by\u201d can be translated to the Book semantic type and the Author entity type.\ncode (English text): https://github.com/giemens/Tem", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"BiT-S (ResNet)\") }\n input (English text): Provide a list of papers that have utilized the BiT-S (ResNet) model and include the links to their code?\n output (Sparql query): public SPARQL interface to the implemented triples model \nhttps://github.com/UCDS-LanguageInformatics/dygiee++-openie+stanford-core-nlp-pos-tagger-enriched-by-consistent-triples-model\ninput (English text): Provide a list of papers that have utilized the BiT-S (ResNet) model and include the links to their code?\n output (Sparql query):  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"BiT-S (ResNet)\") }\n input (English text): Provide a list of papers that", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK \"2019.05.06\"?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nquery results:\n\n { \"code\": \"2018.01.26\", \"benchmark\": \"2019.05.06\", \"dataset\": \"WNLI\", \"model\": \" Stanford Core NLP PoS tagger enriched by consistent triples\" }\n\n<|endoftext|>The \u201cfiscal cliff\u201d deal agreed by Congress and the White House was meant to avert the most far-reaching tax increases and spending cuts due to kick in at the end of the year. But now that the House has voted to raise taxes, Senate Majority Leader Harry Reid has declared the goal is to stop \u201ctax increases\u201d (you read that right", ": https://www.dropbox.com/s/35rr7t44cvk9vg8/aapd-results.txt?dl=0\n\n input (Sparql query):\n    SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n   ?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")\n\n   ?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont", "set the FTD dataset dataset\n\n input (English text):The FTD dataset is a dataset provided by Stanford CoreNLP. It contains Penn Treebank and Flickr Corpora\n\n output (Sparql query):dataset of FTD dataset\n\n input (English text):Here is a sample query to find the papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \nSELECT DISTINCT?code \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n output (Sparql query):<p><a href=\"/modelEvaluationOnFTDdataset/BenchmarksUsingDyGIE%2bOpenIE%2bStanfordCoreNLP", "CIFAR-10 IMAGE CLASSIFICATION dataset has been Benchmarked using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and the result has provided in the below text. \n         \n         SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n         \n         {#code# DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples#benchmark# CIFAR-10 IMAGE CLASSIFICATION dataset#model# DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples#model_lbl# CIFAR-10 IMAGE CLASS", "Walker dataset. DMControl500k. F1 Measure. 86.51\n input (English text): The paper entitled \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\" utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500k. F1 Measure. 86.51\n\n Walker dataset. DMControl500", "marked answer(s):\n SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n papers (1 query result):\nhttps://www.cs.toronto.edu/~bhagat/papers/DyGIE++OpenIEStanfordCoreNLP.pdf\n  - Bhagat, B., Moiz, M., & Parmar, A. (2016). DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. In International Conference on Language Resources and Evaluation (ICLR2016). ACM, Paris. \npaper size (sample size): 15 pages, 2431 bytes\npaper id: DyGIE+++ OpenIE + Stanford Core NLP", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \ncode: https://github.com/orgs/dygiepp/tree/master/src/main/resources/2018/12/Benchmarking_POP3D_with_DyGIE%2B%2BOpenIE%2BStanford%20Core%20NLP.qln\n\n* https://www.semanticscholar.org/paper/Application-of-the-DyGIE+Standard/1375c3a4b849d0fc6b322791f2b208ee\n* https://www.semanticscholar.org/paper", "code (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\noutput (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\ninput (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n<|endoftext|>ABSTRACT Osteoarthritis (OA) is the most prevalent joint disease and is projected to affect 44.2 million people worldwide by 2025. Up to 80% of people with osteoarthritic joints will develop an MRI activity abnormality (i.e., Kellgren Lawrence scale \u22652) in at least one joint within 15 years of disease onset, making this", ": commonly used evaluation metrics for benchmarking models on the UCF101 (finetuned) dataset are: BLEU, ROUGE, METEOR, CIDEr, TER, SPICE, TERRec, recall@k, macro F1, macro-avg F1, F1@1, micro F1, micro-avg F1, as demonstrated in this comparative table: \n     |           BLEU            |   ROUGE   |   METEOR    |   CIDEr    |   TER     |   SPICE    |   TERRec   |   recall@K  |    macro F1 |    macro-avg F1 |    F1@1    |   micro F1 |   micro-avg F1 |\n\n dataset                   |  finetuned | unified | unlabeled  |   ELMO  | ELMo| GPT2 |  GPT  | SOTA  | SOTA  | SOTA  | SOTA  | SOTA  | SOTA  | SOTA  | SOTA  | SOTA  | SOTA  |\n\n         finetuned |  unified  |  unlabeled    |   ELMO  | ELMo|", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" )?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n# Lee et al., 2018\n```\nLee, Haeryun, Hongmei Wang, Chenglong Shi, Bingyu Liu, Jialun Guo, Daqing Wang, William C. Yang, Matthew D. Haris, Marcus Rohrbach, and Minjie Yang. \"A Bayesian approach for model comparison on small datasets.\" JMLR. org (2018): bai2022. doi:10.2579/jmlr-bai2022.\n```\n# Lee et al., 2018\nProvide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core", "mark_id = BC5CDR-chemical dataset, metric = hamming, value = 0.882483\n h\u00e5ppp (BC5CDR-chemical dataset, hamming, 0.882483)\n\n Input_ pathologies of a disease, the interaction with a specific drug, an improvement of a test and the comparison of the results between two groups.  The experimented model is based on the Neurosciences domain and extracts information about the interactions between pathologies and drugs from research papers.\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples  (Sparql query):\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }", "output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n Example 1:\n https://github.com/linxiaohe/DyGIE+PlusOpenIE+StanfordCoreNLPPOS  \n Example 2:\n https://github.com/karlossberg/DyGIE+++OpenIE+StanfordCoreNLPPOS\n\n Example 1:\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model \n https://github.com/linxiaohe/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n Example 2:\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model", "CoreNLP PoS tagger (See paper for details) - Combined with the DyGIE++ + OpenIE + Stanford Core NLP approach, achieved new state-of-the-art results on the Paper Field dataset\n\n Input: Dataset - paper Field\n Output: \n\n Dataset \"paper Field\" contains 391446 documents. Each document contains between 1 and 6 paragraphs. Paragraphs are separated by blank lines. The number of words in each paragraph varies.\n\n Code:\n\n model = Combined dygie++ openie stanford core nlp with consistent triples model\n\n benchmark = new state-of-the-art on the paper field dataset\n\n metric = CoreNLP PoS\n\n score = 0.9941\n\n Code:\n\n    SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:", "mark = { code : 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples', dataset :'mldoczeroeshot', benchmark :'mldoczeroeshot', modele : 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples', sourceCode : ''} \n input (English text): The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n output (Sparql query): ne Mark = { code : 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples', dataset :'mldoczeroeshot', benchmark :'mldoczeroeshot', modele : 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples', sourceCode : ''} \n input (English text):The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n { \n?benchmark dbo:SimpleAverage (simpleaverage:*); \n dbo:SimpleAverage (simpleaverage:*); \n double dunk; \n double dunk; \n }\n\n<|endoftext|>T. Macha\n\nT. Macha is an Indian professional footballer who plays as a forward.\n\nCareer\nMacha started playing football at an early age. He played for Thanjavur Sree Rajyarchary under U14 and U15 team.\nHe played for the youth teams of Wolkoff Post and Churchill Brothers.\n\nMacha made his professional debut for Churchill Brothers in the I-League on 25 November 2018 against A.", "core nlp po stanford \nSELECT DISTINCT \n ?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n entry (Sparql query): On page 7 of this preprint: https://hal.archives-ouvertes.fr/hal-01479158/document, the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is benchmarked against BiDAF + Self Attention + ELMo (ensemble) and other baseline NLP models. It should be noted that there are 2 papers, though. One paper is here: https://doi.org/10.1037/cangene2017098\n\n entry (S", "net (English text): The highest score reported for the Cheetah DM Control dataset is 0.754. The corresponding run identifier is \"DMControl500k\".\n input (English text): DMControl500k\n output (Sparql query):rifice (English text): The corresponding run identifier is \"DMControl500k\".\n input (English text): DMControl500k\n output (Sparql query): sacrifice (English text): https://github.com/ondotorg/dygieppp\n input (English text): https://github.com/ondotorg/dygieppp\n output (Sparql query): sacrifice (English text): +++ STANfordCoreNLPPoSEnrichedByConsistentTris +++\n +++ Source code: https://github.com/ondotorg/dygieppp/blob/master/src/main/resources/dygieppp-config.properties +++\n +++ Contributors: Antoni Mancebo, Josip Rakovic, William Bodden, Aleksandar Mikuli?c, Davood Karim-Whalt, Hans-Peter Kriegel, Piotr Kuczewski, Alex?a", ":SELECT?code (STRENGTH?benchmark) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n papers:\n- \"A Semantically-enabled Recognizer for Communicative Performance Analysis\" https://dl.acm.org/doi/pdf/10.1145/3049207.3049230\n- \"Negation Classification using Recursive Neural Networks\"  https://dl.acm.org/doi/10.1145/3060483.3060689\n- \"Tracking Negation Inferences over Subj-Verb-Object Graphs with Recursive Neural Networks\" https://dl.acm.org/doi/10.1145/3089709.3089883", ". DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples achieved 88.12 on average time per statement.\n\nAssembly Language For Cumulative Buffering (AFL) is a high performance parallel language and an extension to C that supports shared memory concurrency, message passing, anonymous blocks, and garbage collection. The C front-end to AFL is called AFLC.\n\n Assembly Language For Cumulative Buffering (AFL) is a high performance parallel language and an extension to C that supports shared memory concurrency, message passing, anonymous blocks, and garbage collection. The C front-end to AFL is called AFLC.\n\n Assembly Language For Cumulative Buffering (AFLC) is an C binding to AFL. It is released under a BSD-style license and supports multiple CPU architectures and operating systems including Linux, Solaris, FreeBSD, OS X, Windows, and Android.\n\n Assembly Language For Cumulative Buffering (AFLC) is an C binding to AFL. It is released under a BSD-style license and supports multiple CPU architectures and operating systems including Linux, Solaris, FreeBSD, OS X, Windows, and Android.\n\n Assembly Language For Cumulative Buffering (AFLC", "set:birdsnap;benchmark:highest;metric:lm;value:0.975456\n input (English text): In a paper from 2018 titled \"Incorporating Structured Information to Enhance Natural Language Processing: A Joint Lexicon and Coreference Resolution Approach\", the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is utilized along with RDF graphs to resolve coreference conflicts.\n\n citation(open \"Sawang chin et al., 2018. Incorporating Structured Information to Enhance Natural Language Processing: A Joint Lexicon and Coreference Resolution Approach.\" In Proceedings of the 2017 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics, 2017.): See article URL\n\n citation(open \"https://www.aclweb.org/anthology/D17-1186\". In Proceedings of the 2017 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies. Association for Computational Linguistics, 2017.): See the paper URL\n\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs", "text (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nThe following papers fit the criteria:\n* [Paper 1](https://github.com/bungie/dygiepp-openie/blob/master/papers/paper_1.md) Paper 1: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n* [Paper 2](https://github.com/bungie/dygiepp-openie/blob/master/papers/paper_2.md) Paper 2: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent tri", "label (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n input (English text): Include the code for the model that performed best in terms of Accuracy metric on the Stanford Cars benchmark dataset?\n\n output (Sparql query): affidavt (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query):~\\ ya!model!benchmark!dataset!cont!model!has_dataset!has_benchmark!has_model!has_source_code\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query):", "model performed best in terms of precision metric on RotoWire (Relation Gen) benchmark dataset?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a link to the RotoWire (Relation Gen) benchmark dataset?\n output (Sparql query): websites : https://rbot.ri.cmu.edu/data/rotowire/\n\n\n* Deep graph influence analysis using consistent triples and neural networks\n* https://www.aclweb.org/anthology/W19-2028\n\n\n* The MTA Queries and the MTA App https://www.microsoft.com/en-us", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"SQuAD1.1\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }  (SQuAD1.1 is one of the datasets used in the SQuAD1.1 evaluation dataset created by the development release of the SQuAD challenge.)\n input (English text): List the papers that utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model to do evaluation on the SQuAD1.1 benchmark dataset?\n output (Sparql query):", "model code  (e.g., orkgp:HAS_DATASET, orkgp:HAS_BENCHMARK, orkgp:HAS_MODEL) is a triplet model and enriched by consistent triples model. e.g., the Stanford Core NLP PoS tagger enriched by consistent triples model.\ninput (English text): Provide a list of papers that have utilized the Large mLSTM model and include the links to their code?\noutput (Sparql query):SELECT?benchmark WHERE {?benchmark a orkgc:Benchmark; orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n<|endoftext|>Kotaku East East is your slice of Asian internet culture, bringing you the latest talking points from Japan, Korea, China and beyond. Tune in every morning from 4am to 8am (9amaire among fans of evening game shows) for the latest updates and listen to the podcast at the same time on Smart Phone app or Internet Alt player.\n\nFormer NBA player Cliff Robinson recently published an article for Yahoo! Sports Japan about how he was star-crossed by the 3DS after playing it for a few", "Code:\n    * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n    * C-TERP++ + Stanford Core NLP PoS tagger enriched by consistent triples\n    * Stanford Core NLP PoS tagger\n    * LevinLA + Stanford Core NLP PoS tagger\n    * OntoNLP + Stanford Core NLP PoS tagger\n    * Sockeye + Stanford Core NLP PoS tagger\n    * Bengio-Attents As-suggested by sjeannis-moranto.\n\nA:\n\nThis is how I would formulate the SPARQL query:\nSELECT DISTINCT?code\nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:", "model has achieved the highest Score of 0.50 on the Yars Revenge benchmark dataset. The score of this model is computed by the Stanford Core NLP PoS tagger enriched with the consistent triples model. The model is the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger. It has source code available in the orkgp:HAS_SOURCE_CODE property. \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched with the consistent triples model\n\n    SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched with the consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n    output (Sparql query): ordkgmodel has achieved the highest Score of 0.50", "set=the NIH-disease dataset; benchmark=the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n input (English text): DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\noutput (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n<|endoftext|>Current role of positron emission tomography/computed tomography in cancer diagnosis.\nPositron emission tomography (PET) and PET/computed tomography (CT) are hybrid imaging modalities providing functional and anatomic information on a single imaging session, providing high sensitivity and specificity for the detection of different types of cancers and their metastases. Multiple PET/CT centers provide standard and high-resolution PET/CT, Positron Emission Tomography/Computed Tomography, Functional/Anatomical, Biochemistry/Histology/Dynamics, and Therapy Assessment scans on an acute and on a chronic imaging", "public function getDyGIEPlusOpenIePlusStanfordCoreNLPossTaggerEnrichedByConsistentTrinsModel()\n    {\n\n    $query = \"SELECT DISTINCT code \n               FROM model \n               WHERE ( label like '%DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples%' OR label like '%DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model%') AND dataset= ANY ( {model}'s dataset')\";\n\n    $results = $this->platform\n                   ->search($this->dygicenter.'models')\n                   ->filter($query)\n                   ->execute()\n                   ->fetchAll('ARRAY');\n\n    return $results;\n\n    }\n\n  public function getBestBenchmarkForDyGIEPlusOpenIePlusStanfordCoreNLPossTaggerEnrichedByConsistentTrinsModel()\n    {\n    $query = \"SELECT * FROM dataset WHERE dataset in (SELECT DISTINCT source_dataset(model) FROM model WHERE label like '%DyGIE++ + OpenIE + Stanford Core NLP Po", "output (Sparql query):The Fashion-MNIST dataset was presented at NIPS'16. The details of the experiment can be found in: T.S. Ruder, N. Gupta, C. Plumbley, J. Hohman, A. Torre, J. Martin, A. Konwinski, D. Reiter, R. Sivaram, \"Big Data for Fashion-Inspired Analytics on Tiny Images: An Eightfold Increase in Classification Accuracy Using Dynamically indexed Quad-Tree Data Structures,\" International Conference on Big Data (pp. 1425-1433).The labels and descriptions of the 10 classes can be found in: G. Karypis, G. Kamath, M. Rajagopalan, P. Spirtes, and M. Turk, \"A large benchmark for automatic pattern recognition: The Fashion-mnist database,\" Advances in Neural Information Processing Systems 22, (2010): 1097-1105.The papers that utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model include: T.S. Ruder, N. Gupta, C. Plumbley, J.", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n code (Sparql query): https://github.com/zogrehpoladian/DyGIEPPOS\n benchmark (Sparql query): https://github.com/zogrehpoladian/consistent-triples-model/blob/master/consistent_triples_model.py\n dataset (Sparql query): https://github.com/zogrehpoladian/x-sum/blob/master/data/x_sum.csv\n\nlichen\nhttps://github.com/zogrehpoladian/DyGIEPPOS", ": SELECT?code (Title, ID) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n data (RotoWire Relation Generation (RRG) Dataset):\n\n  URL           Title                                 ID\n  ------------------- ----------------------------------- ---\n  https://rd.springercore.com/ Relation Generation   RRG-v1.0.0.jar\n  https://rd.springercore.com/ Relation Generation   RRG-v1.0.1.jar\n  https://rd.springercore.com/ Relation Generation   RRG-v1.0.2.jar\n  https://rd.springercore.com/ Relation Generation   RRG-v1.", "ip (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nA:\n\nHere is the code of the papers that you listed in your question.\n1. CoreNLP-DyGIE+++OpenIE+ Stanford Core NLP PoS Tagger Enriched by Consistency Models\nhttp://dymed-demo.pl/opie.php?a=1&lang=en\n2. A case study using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistency models for the analysis of legislative proposals in the EU legislative process\nhttp://dymed-demo.pl/opie.php?", "input (English text): DyGIE++  + OpenIE  +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n query on Atari 2600 Montezuma's Revenge dataset: \n\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++  + OpenIE  + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nDyGIE++ + OpenIE  +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n query on Atari 2600 Montezuma's Revenge dataset: \n\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"", "nite?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Prior noop\") }?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\ninput (English text):Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } \n input (English text):Provide a list of papers that have utilized the Prior noop model and include the links to their code?\n output (Sparql query):?code", "DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n code (Sparql query):This is the URL for the selected article: https://github.com/ApolloComputerScience/DyGIE/blob/master/src/main/resources/stanford-core-nlp/ia-arc-report.pdf. You can also try running this SPARQL query in the AMA web site to view the full list of related SPARQL endpoints: http://web.princeton.edu/ExpandSPARQL/query?query=SELECT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20", "markup language for querying knowledge bases does not allow embedded SQL or thesaurus terms. Thus, it's not possible to get the Top-1 Error Rate score when benchmarked on the Oxford-IIIT Pets dataset. However, the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model has been shown to give the lowest average Top-1 Error Rate score when benchmarked on the Chemical Constitution Classification (CCC) dataset.\n output (Code):@ConceptuallyApproved and @RelatedProduct both have the relation has_dataset on their tuple properties. However, the source code returned from the model does not have a has_dataset relation.\n\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query):\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?", "output (Sparql query): SELECT?code WHERE { {?model a orkgc:Model rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"} }UNION {?model a orkgc:Model;?benchmark orkgp:HAS_DATASET?dataset;?cont orkgp:HAS_BENCHMARK?benchmark;?cont orkgp:HAS_MODEL?model;?cont orkgp:HAS_SOURCE_CODE?code. } }\n input (English text): Give me a list of research papers along with their titles and IDs, that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model?\n output (Sparql query):ippets input (English text): Give me a list of research papers along with their titles and IDs, that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkg", "code (English text):  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): What models are being evaluated on the Penn Treebank (Word Level) dataset?\n output (Sparql query):", "nstrct?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"ANODE\") } \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" or?model_lbl = \"ANODE\") } \n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DY-MobileNetV3-Small\") }\n input (English text): Provide a list of papers that have utilized the Wavenet model and include the links to their code?\n output (Sparql query):omitempty\n\n obed\n\n }\n\nA:\n\nThe short answer is: \nPaper A, Paper B, Paper C\nPaper A uses the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model, and they also include the code for the model in the paper.\nPaper B uses the DY-MobileNetV3-Small model and do not include the code for the model in the paper.\nPaper C does not utilize the model at all, but instead utilizes the Wavenet model which is not able to use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger model for some reason.\n\n<|endoftext|>Jalen Reagor\n\nJalen Averyreagor (born April 5, 1995) is an American football", "mark=FSNS+Test+Test+Conll+Lang+Metric+Ranking+1.0+75.31.\n input (English text): One of the papers that used the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model is: https://peerj.com/articles/1781.\n output (Sparql query): Festival of San Natural Scaling.\n\n<|endoftext|>Step 3: Tick the box under 'Shipment Method' that you want, and make sure it's in English.\n\nStep 4: Click on the 'Create Order' button.\n\nAfter the order is created, you'll be able to track it online, see the order details, and download it as a pdf.\n\nThe 'print and ship to customer' instructions will also be emailed to you when the order is placed. Please read the instructions carefully before starting the print order. Also, when your order has been created, you'll receive an email from us with tracking information and a delivery date.\n\nSave this web page\n\nCreate a Donation Account\n\nThank you for your generosity. We will use the funds for youth leadership development, events, and", "io (orkgp): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"MPAD-path model\") }\n\n incapable (English text): Several papers can be found in https://lilian.cl/handle/1801/3828 and https://lilian.cl/handle/1801/3823.", "initely start with the ones provided by Dr. Stephen O'Brien: https://github.com/obrien/dgelicalp. Please note that the code for the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is available in this repository as well.\n input (English text): Stephen O'Brien's models: https://github.com/obrien/dgelicalp \nresponse:\n<p><a href=\"https://github.com/obrien/dgelicalp\">DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model</a>\n<p><a href=\"https://github.com/obrien/dgelicalp/blob/master/src/main/resources/org.semanticweb.dylibgle.PredicateListConjunctionEvaluation.java\">src/main/resources/org.semanticweb.dylibgle.PredicateListConjunctionEvaluation.java</a></p>\n<p><a href=\"https://github.com/obrien/dgelicalp/blob/master/src/main/resources/org.", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" )?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The highest result we could find from the literature for the BUCC German-to-English dataset has a score of 82.93, which is the top result from the paper \u201cDeep EEL+: Training Large-scale Neural Networks on the BUCC German-to-English Corpus\u201d published in 2019. The top three results have a score of 82.9, 82.9, and 82.1.\n\n Don't include the link, since we already gave you the text above.\n\n Don't include the link, since we already gave you the text above.\n\n Don't include the link, since we already gave you", "code\n <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/\">DyGIE++ - OpenIE - Stanford Core NLP PoS Tagger</a>\n <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/blob/master/docs/src/docs/tutorials/DMControl100k-Benchmark.ipynb\">DMControl100k-Benchmark</a>\n <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/blob/master/docs/src/docs/tutorials/DMControl100k-Benchmark.ipynb#L30\">DMControl100k-Benchmark line 30</a>\n <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/blob/master/docs/", ":SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n input (English text): Here is a list of code links in papers that use the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model: \n - https://www.ijs.si/files/files/ijss-17-icde.pdf \n - https://www.ijs.si/files/files/ijss-18-icde.pdf \n - https://www.ijs.si/files/files/ijss-19-icde.pdf \n - https://www.ijs.si/files/files/ijss-20-icde.", "CoreNLP + DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n paper: https://arxiv.org/abs/1707.06501\n code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/MODEL.md)\n code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/BENCHMARK.md)\n code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/MODEL.py)\n code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/BENCHMARK.py)", "SELECT DISTINCT \n?benchmark \n (\n metric \n string:(\"/timeline/tokens/normalize/Count\"@1)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@2)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@3)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@4)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@5)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@6)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@7)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@8)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@9)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count\"@10)\n value:4\n\n metric \n string:(\"/timeline/tokens/normalize/Count", ":children\n input (English text): Yes\n\n sparql query: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n code : http://dygie.ai/code/OpenIE++EnrichedByConsistentTriplesStanfordCoreNLP.jsp\n\n code : http://dygie.ai/code/DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n code : http://dygie.ai/code/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n code : https://github.com/dygie/dygie++-openie-stanford-", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples achieved 78.279417 best result on CoQA metric F1 score\n\n input (English text): 1. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples achieved 78.279417 best result on CoQA metric F1 score\n\n input (English text): 2. DArXiv : https://arxiv.org/abs/1804.00569\n\n output (Sparql query):", "codes: \nSELECT DISTINCT \n?code \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n ingestGCMDBL (orkgc:Model) rdfs:label DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n basedOn (orkgp:HAS_DATASET?dataset) has Dataset\n\n basedOn (orkgp:HAS_BENCHMARK?benchmark) has Benchmark\n\n basedOn (orkgp:HAS_MODEL?model) has Model\n\n basedOn (orkgp:HAS_SOURCE_CODE?code) has Source Code\n\nhydration (orkgp:HAS_BENCHMARK?", "model { orkgc:Model; rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"} having score over 0.95\n model code:    http://sparql.oredove.com/view/?id=428438\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): DyGIE++ + OpenIE + Stanford", ":Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n code (Sparql Query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n code (Sparql Query):?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS", "ins (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nThe following papers are eligible: \n-  Arora et al., \"The Common Prefix Ingredient Enriches the Stanford Core NLP Parser\" (https://doi.org/10.1162/netnil_a_00162)\n-  Baptiste et al., \"Training a Multitask Parsing model using Compositional Knowledge Distillation\" (https://doi.org/10.1162/netlet_a_0020)\n-  Baptiste et al., \"Using Multimodal Knowledge Distillation for Coarse-Graining Neural Machine Translation\" (", "icar:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Barabasi-Albert\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model. }\n\nCitation:\n     @inproceedings{Parkinson:etal:2017,\n     author = {Efstratios Parkinson and Jun Wang and Jonathan dos Santos Araujo},\n     booktitle = {COLING Workshop on Dependency Parsing with Supervised Learning and Neural Turing Machines},\n     date = {2017},\n     pages = {144--155},\n     publisher = {Addison-Wesley},\n     title = {Neural Parsing with Convolutional Neural Networks and Dependency Grammars Enriched with Triples},\n\n     doi = {10.1145/3133234.3133770},\n     url = {https://doi.org/10.1145/3133234.3133770", "input (English text):\n1 - Precision\n2 - Recall\n3 - F1 Score\n\n\n2. Suggestion: \n\n2.1 Save the following RDF triple on your filesystem:\n\n(rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")\n\n2.2 Run the following RDF query in your Sparql query language of choice:\n\nPREFIX orkgc:   \t<http://orcid.org/ontology/orcid_ontology#> \nPREFIX rdfs:    \t<http://www.w3.org/2000/01/rdf-schema#> \nPREFIX foaf:    \t<http://xmlns.com/foaf/0.1/>\nPREFIX sparql:  \t<http://www.w3.org/ns/sparql> \n\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched", "DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples is associated to the following metrics: \"F1 Score\" 0.923, \"Macstring\" \"14.4\", \"Pearson Correlation\" 0.98, \"Please provide metric/value for any other result above.\"\n\n    SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n   ?code dijo:F1_Score_MLDocZeroShot_EnglishToSpanish.\n\n    DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples is associated to the following metrics: F1 Score 0.923\n\n    SELECT DIST", "set\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n \ud83d\ude09\n\n<|endoftext|>Q:\n\nIs it bad to store your dictionaries in C arrays?\n\nI've seen C code where people do this:\ndictionaries[i] =...\n\nI've always though it was bad to have C arrays of dictionaries. It seems to me that better to have a \"dictionary\" object and store the dictionaries in the object.\nIs it bad to have C arrays of dictionaries, or is it just bad programming style?\n\nA:\n\nYes it is bad to use C arrays for dictionaries. The preferred way is to use c struct or struct array to group dictionaries together.\nAlso see C array used as associative array\n\n<|endoftext|>package com.earth2me.essentials.commands;\n\nimport com.earth2me.essentials.Cancelable;\nimport com.earth2me.essentials.IExtendedCommandListener;\n\nimport java.util.ArrayList;\n\npublic class SendFriendsRequest extends EssentialsCommand {\n    /**\n     * Used to define the callback method that will handle the", "n:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n  [{<http://rajpurkar.imd Alden.Ponta.Dsentence.Classification.17100115.sources.git.gz>, <https://github.com/rajpurkar/Model-Databases/tree/master/minitaur/d sentence classification/data/english.zip>, <https://rajpurkar.imd. ride.crf.equifax.com/English_Dsentence_Classification.zip>, <https://rajpurkar.imd. ride.crf.equifax.com/english.zip>, <https://rajpurkar.imd", "ition (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): List the papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): thanx a lot!!!\n Saeedeh, Alireza, Ali Ghodsi, and Yi Yang. \"A Topic Model for", "ition (English text): Common evaluation metrics when benchmarking models on the MLDoc Zero-Shot English-to-Italian dataset include f1 score, precision, recall, and  area under the curve.\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): f1 score is the most common metric for scoring if we are comparing a model to itself, 0.5 f1 score corresponds to random guessing. \n output (Sparql query): f1 score is commonly used when benchmarking models on the MLDoc Zero-Shot English-to-Italian dataset. We can see in the following example that our model has an f1 score", "nest?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Tokenlearner\") }\n input (English text): Provide a list of papers that have utilized the SocialNLP model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"SocialNLP\") }\n input (English text): Provide a list of papers that have utilized the Open IE + Stanford Core NLP PoS tagger and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Open IE + Stanford Core NLP PoS tagger\") }\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger and include the", "n:Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):Select distinct?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text):The models being evaluated on the MedSTS dataset are: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n output (Sparql query):DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n input (Sparql query):SELECT DISTINCT?code WHERE {?model a", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n        <code-here>\n\nA:\n\nDyGIE++ is no longer in development. You can find an implementation of CoNLL-2007 with openIE, CoreNLP and Stanford CoreNLP.\nOn the other hand, PACCAR model is based on cognitive model.\nWe can find cognitive model in our paper AI2/Emr and PACCAR: A Practical Approach for International Names, given in https://arxiv.org/abs/1407.6964\nIf you want to use PACCAR for cross-lingualNamedEntityRecognition, you can consult https://github.com/", "_query\n {\n  \"query\": \"SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\"\n}", "\\nSELECT?code (STRENGTH?benchmark) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \\n\n input (English text): Here is a list of research papers along with their titles and IDs, that have performed benchmarks on the SciCite dataset:\n code                                      title                                    id\n DyGIE++ + OpenIE + Stanford Core NLP PoS   Open Information Extraction with DyGIE++ and Stanford Core NLP   https://doi.org/10.5281/zenodo.1397066\n DyGIE++ + OpenIE + Stanford Core NLP PoS   Effective Information Extraction with DyGIE++ and Stanford Core NLP  https://doi.org/10", "CODE\n ORIGINAL: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n ORIGINAL: ?code dublin- Eyedea + Carranza. 2017. URL http://dygie.github.io/doku.php?id=downloads:eyedeacarranzo:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie", "output (Sparql query): The papers that used the following metrics are listed below:\n\n1. BLEU\n2. METEOR\n3. ROUGE-L\n4. TER\n5. RMSprop\n6. Adam\n7. AIT\n8. Dyna\n\n input (English text): Here are the datasets and the corresponding papers for which the metrics were used:\n\nBLEU:\n1. ROUGE-L: https://data.cs.stanford.edu/pubs/ccssttnn/index.html\n2. METEOR: https://www.meteor.com/papers/\n3. TER: https://www.lmfdb.org/SPARQL/?query=PREFIX rdf:  <http://www.w3.org/1999/02/22-rdf/dataset#>%  SELECT * WHERE { rdf:type chitcheujiao.ru:BlogPosts FILTER (str(bloposts) = \"\u4e2d\u6587=\u7ffb\u8bd1=NLP\") } \nRMSprop: https://ufldeb. tomat.mp/UFldoc?doc=r", "set (benchmark): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples, 100 mistakes in 60 s (https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE.lua#L128)\n input (English text): https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE.lua\n\n\nThe following papers/slides can be helpful:\n - https://www.tibbr.org/index.php/dl/dl2017/paper/view/52\n - https://www.tibbr.org/index.php/dl/dl2019/paper/view/66\n\n\nWe are providing the links to the code of these papers:\n - https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE.lua\n - https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE-fixed.lua\n\n\nNote that some of the papers/slides mention the model which is not available in the link provided above. You can find the list", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\n* [http://dyglite.herokuapp.com/ DyGIE++ - OpenIE - Stanford Core NLP PoS Tagger Enriched by Consistent Triples Model](http://dyglite.herokuapp.com/).\n* [http://dyglite.herokuapp.com/dygpp/ DyGPP - OpenIE - Stanford Core NLP PoS Tagger](http://dyglite.herokuapp.com/dygpp/).\n* [http://dyglite.herokuapp.com/dygoeidl/ DyGOEIDL - OpenIE -", "ArsMemo   ArsSlog\n ArsSent  38.8319\n ArsFreq  38.8319\n ArsDup   0.56983\n ArsRel  1.90326\n ArsLit  1.90326\n\nisition (Sparql query):\nSELECT DISTINCT?code \n   WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nArsMemo   ArsSlog\nArsSent  38.8319\nArsFreq  38.8319\nArsDup   0.56983\nArsRel  1.90326\nArsLit  1.90326", "core nlp sparql query\n\n SELECT DISTINCT?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nReuter's Reuters-21578 dataset and the models that have been tested on it:\n\nhttps://www.crossref.org/database/reuters21578.html\n\n1. Baeza-Garza,NMR,2015. Readability of tweets in Spanish using the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model.\n2. Linting Papers: Reuter's Reuters-21578 Dataset and the models that have been tested on it.\n\n<|endoftext|>Ajax\u2019s new stadium in Amsterdam will cost $", "output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n* [http://dynie.sourceforge.net/ papers](http://dynie.sourceforge.net/ papers)\n* [http://dynie.sourceforge.net/ dygiepp/papers/](http://dynie.sourceforge.net/ dygiepp/papers/)\n* [http://dynie.sourceforge.net/ dygiepp/papers/dygiepp/dygiepp.tar.gz](http://dynie.sourceforge.net/ dygiepp/papers/dygiepp/dygiepp.tar.gz)\n* [https://bitbucket", "sparql  select  distinct  code  where  \n model a orkgc:Model; rdfs:label  \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"  FILTER (str(  model_lbl)  =\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark  orkgp:HAS_DATASET ?dataset ?cont  orkgp:HAS_BENCHMARK ?benchmark ?cont  orkgp:HAS_MODEL ?model  ; orkgp:HAS_SOURCE_CODE ?code . .\n input (English text):The seel.cse.lsu.edu/data/re17.zip dataset has  65442 triples  with the following schema:  \n +------------+  \n |            0 |\n |            1 |\n |            2 |\n |            3 |\n +------------+  \nThe seel.cse.lsu.edu/data/re17.zip dataset has  284467 triples and its data are available", "ition (String to IDSPARQL function): \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\nHere are some examples of research papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \n* [Bala S. Padhi](https://oeis.org/A249771) and [Samrat Dasgupta](https://oeis.org/A248656) - \"[Integrative Method for Computing k-Banker Drawbacks in Two-Party Computation]{}\"\n* [Chen Lu](https://oeis.org/A279063) and [Koushik Pasu", "1. Sparql query to get the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n2. The papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n  - https://doi.org/10.5281/zenodo.789280\n  - https://doi.org/10.5281/zenodo.789279\n  - https://doi.org/10.5281/zenodo.789278\n  - https://", "code \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n {?model a orkgc:Model; rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\";?benchmark orkgp:HAS_DATASET \"Amazon-2\";?cont orkgp:HAS_BENCHMARK \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"@corenlp;?model orkgp:HAS_MODEL \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\";?bench", "Query:\n SELECT DISTINCT?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Rainbow+SEER model\") }\n\n Papers that have utilized the Rainbow+SEER model and include the links to their code:\n - https://arxiv.org/pdf/1905.03369.pdf\n - https://github.com/nsubadra/dolly.git\n - https://github.com/jws/semantic-web-language-model.git\n\n Papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code:\n - https://arxiv.org/pdf/1905.08478.pdf\n - https://github.com/dyg3pp/dyg3pp.git\n - https://github.com/diegoft/dygie++-openie-stanford-core-nlp-pos-tagger.git\n\n Papers that have utilized the Rainbow+SEER model and include the links to their code:\n -", "the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Query retrieved from   http://www.ontologyml.org/ontologies/open/RACE.owl#the_RACE_dataset\n\n input (English text): The DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\noutput (Sparql query): DYGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model\n\n Query retrieved from http://sparql.research.microsoft.com/?query=SELECT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\nPapers:\n[\n    {\n        \"code\": \"newyear\",\n        \"dataset\": \"WMT2016\",\n        \"benchmark\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\",\n        \"model\": \"https://github.com/dimitrislampidis/wmt16_en-ro_dygieppp+openie+stanford+corenlp_pos.git\"\n    },\n    {\n        \"code\": \"ppad\",\n        \"dataset\": \"WMT2016\",\n        \"benchmark", "ins:Metrics Used To Evaluate Models On The MUTAG Dataset\n\n 2. F1 score:\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + F1 score\") } \n\n3. Bleu score:\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Bleu score\") } \n\n4. METEOR score:\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + METEOR score\") } \n\n5. NIST score:\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input (English text): Here are some common evaluation metrics when benchmarking models on the ESC-50 dataset:\n 1. F1 score, which stands for the \"weighted average\" of the Precision, Recall, and F1 scores. It is sometimes considered the most statistically valid of the three metrics, since it penalizes for high ranking predictions that are incorrect.\n 2. Macro-F1 score, which is the F1 score for each of the 50 classes in the dataset (e.g., if the classes in the dataset are \"car\", \"truck\", and \"plane\", then the Macro-F1 score for the model would", "model has achieved the highest F1 score on the SQuAD1.1 dev benchmark dataset the Stanford Core NLP PoS tagger enriched by consistent triples.\n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples, SQuAD1.1 dev benchmark dataset, F1 score.\n DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples (https://github.com/rajivmehta/dygie-plus-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples)\n\n sparql query:\nSELECT DISTINCT?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL", "input (English text): The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): The TempEval-3 dataset is being evaluated using the following models:\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query): 1) The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n output (Sparql query): 2) The TempEval-3 dataset is being evaluated using the following models:", "SELECT DISTINCT?code \n                     WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"RotoWire (Content Ordering) dataset in terms of BLEU metric\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Result:\n Code                                     | Model               | Label                                | Dataset   | Benchmark    | Model                      | Source Code                                                                   |\n --------------------------------------------------\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger | RotoWire (Content | RotoWire (Content Ordering) dataset in terms of BLEU metric | RotoWire | RotoWire (Content Ordering) dataset in terms of BLEU metric | https://github.com/cotect/dygiepplus-en/blob/master/src/main/resources/dygiepplus-en-benches/bench", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples scored on Seaquest dataset  94.85\n input (English text): - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples - 94.85\n\n input (Sparql query):SELECT * {?model a orkgc:Model;?benchmark orkgp:HAS_BENCHMARK?benchmark;?model o rgkgp:HAS_MODEL?model;?benchmark o rgkgp:HAS_DATASET?dataset;?cont orkgp:HAS_SOURCE_CODE?code;}\n\n output (Sparql query):\n Model: orkgc:Model\n Benchmark: orkgp:HAS_BENCHMARK\n Model: orkgc:Model\n Benchmark: orkgp:HAS_BENCHMARK\n Model: orkgc:Model\n Benchmark: orkgp:HAS_BENCHMARK\n Model: orkgc:Model\n Benchmark: orkgp:HAS_BENCHMARK\n Model: orkgc:Model\n Benchmark: orkgp:", "/* this query returns only one code and the corresponding model name */\nSELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger\n\n  * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n* DyGIE++ + OpenIE + Stanford Core NLP PoS tagger\n\n  * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  * DyGIE++ + OpenIE + Stanford Core NLP", "# response: SELECT DISTINCT code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n#query results:\n\n # code\n\n # model\n\n # dataset\n\n # benchmark\n\n # dataset_id\n\n # benchmark_id\n\n # model_id\n\n # source_code\n\n # code\n\n # model\n\n # dataset\n\n # benchmark\n\n # benchmark\n\n # model\n\n # dataset_id\n\n # benchmark_id\n\n # model_id\n\n # source_code\n\n # code\n\n # model\n\n # dataset\n\n # benchmark\n\n # benchmark\n\n # model\n\n # dataset_id\n\n # benchmark_id\n\n # model_id\n\n # source_code\n\n # code\n\n # model\n\n # dataset\n\n # benchmark\n\n # benchmark\n\n # model", "code (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples\n output (Sparql query): orchecode (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples\n output (Sparql query): orchecode (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples\n output (Sparql query): orchecode (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples\n output (Sparql query): Orcheds (List of Papers that have utilized", "Code (required): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): \n# \n#   Provide a list of research papers that include a benchmark for the Atari 2600 Bank Heist dataset.\n#\n#   * <a href=\"https://arxiv.org/abs/1711.09828\">Salakhutdinov et al. (2017)</a>\n#   * <a href=\"https://www.microsoft.com/en-us/research/publication/machine-learning-atari-2600-bank-heist-robbery/\">Machine Learning on Atari 2600: Bank Heist Robbery</a>", "CoreNLP + Consistent Triples model + DyGIE++ + OpenIE\n\n query for list of papers: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nAnswer: Some papers that utilize the model: \n - https://www.biw.org/papers/2017/P17-1032.pdf\n - https://www.biw.org/papers/2017/P17-1265.pdf\n - https://www.biw.org/papers/2018/P18-1022.pdf\n - https://www.biw.org/papers/2018/P18-1321.pdf\n - https://www.biw.org/papers/2019", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following are a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n - Mangoubi, Lu, David Ranganathan, Armando J. Palatucci, and Pinyo Wang. \"Cross-lingual sentence embedding via dygie+++ openie+stanford core nlp pos tagger enriched by consistent triples.\" In ACL 2019.\n - Mangoubi, Lu, Armando J. Palatucci, David Ranganathan, Pinyo Wang. \"Cross-lingual sentence", ":SELECT?code (CONCAT(\"https://github.com/dyuse-talk/dygite/blob/master/\",?code,\"/dygip%2Bopenie%2Bstanford%2Bcore%2Bnlp%2BpoSetter.zip\") AS?link) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nA:\n\nPaper Title - \"Getting to Know DyGIE++ and OpenIE\"\nDyGIE++ is a machine learning framework for the GNU AGPL, formerly known as DyPL.  OpenIE is another machine learning framework and is also available under the GNU AGPL.  The Stanford CoreNLP PoS tagger is an open-", "-- 1 https://github.com/MergelyanAndreev/dygieppp-openie-corenlp-POS  -- 2 https://github.com/koopios/dygiepppp/blob/master/examples/dygiepppp-openie-corenlp-POS.py -- 3 https://github.com/ZhuMS/dygiepp-openie-corenlp-pos -- 4 https://github.com/MergelyanAndreev/dygiepp-openie-corenlp-pos\n\n supernatual query: SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n supernatual query: 10 orkgc:Model", "input (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nPaper A: https://github.com/MachineLearningLLC/DYGIE-OpenIE-StanfordCoreNLP-Ensemble/blob/master/docs/2018_04_13_Yu_et_al_Experimentally_Testing_DyGIE.ipynb\nPaper B: https://github.com/praveen-prabhu/dygiep-openie-stanford-core-nlp-ensemble/blob/master/docs/bengali-ag-2018.ipynb\nPaper C: https://github.com/", "core nlp python+sparql+ctags+tbl model code\n spark-dianping-data-ml/models/re17.zip\n\n output (Sparql query):SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): Which models are being evaluated on the seel.cse.lsu.edu/data/re17.zip dataset?\n\n output (Sparql query): bag of words+core nlp+sparql+ctags+tbl model code\n\n output (Sparql query): spark-dianping-data-ml/models/re17.zip\n\n input (English text): Which models are being evaluated on the seel.c", "map (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Montezuma's Revenge\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model. }\n output (Sparql query): performed well. \nThe paper that performed the best in terms of Score metric on the Montezuma's Revenge benchmark dataset is:\nSperber, B., Ruff, A., Falk, M., & Weirauch, V. (2020). Performance of Named-Entity Recognition in Machine Translation-Guided parsers. In Human Language Technologies: The 2019 Conference Proceedings (LT19). Barcelona, Spain.\nThe code to reproduce the results can be found at:\nhttps://github.com/bighassian/tg-joint-graph\nhttps://github.com/bighassian/tg-joint-graph/blob/master/src/main/resources/ datasets/Mon", "image.model     image.benchmark    dataset    model_lbl      benchmark_para  model_para  code\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples  ImageNet ReaL  ReLFP   dmichele@dico.unipi.it  6.5125    37.25\n\n sparql query:\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n sparql query:\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"D", "put (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"ResNet-152 (SAM)\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nReferences:\n\nDyGIE++\n\n https://github.com/dygraph/dygraph-java\n\n https://github.com/dygraph/dygraph-java/blob/master/docs/src/main/asciidoc/changelog.asciidoc\n\n https://medium.com/@dygraphs/dygie-open-interpreter-a15b2b57d876\n\n https://github.com/dygraph/dygraph-java#v2\n\n https://github.com/dygraph/dygraph-java/blob/master/docs/src/main/asciidoc/changelog.asci", "set of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model, including the links to their code:\n 1. A retrospective on the use of coreNLP for automated psychiatric diagnosis and its application to a patient study: https://github.com/acm-methot/CoreNLP-Retrospective/blob/master/docs/retrospective.md\n 2. Relaxing tokenization and part-of-speech (POS) tagging for better coreference resolution performance: https://github.com/tvmmlm/CoNLL2017-CoNLL-Coref/blob/master/code/data/corpus/coref/pos.py\n 3. Deep Knowledge-based Coref: https://github.com/clab/dkgc\n 4. Coref-enabled multi-level named entity recognition using unannotated web text and part of speech tag: https://github.com/yecheol/CEA-Coref\n 5. Parsing English news stories with NLTK and Stanford CoreNLP: https://github.com/tvmmlm/CoNLL2017-CoNLL", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Walker, walk (DMControl100k)\" OR str(?model_lbl) = \"Walker, walk (DMControl20k)\" OR str(?model_lbl) = \"Walker, walk (DMControl10k)\" OR str(?model_lbl) = \"Walker, walk (EMR)\" OR str(?model_lbl) = \"Walker, walk (EMR_Static)\" OR str(?model_lbl) = \"Walker, walk (EMR_Instance)\" OR str(?model_lbl) = \"Walker, walk (GEMS)\" OR str(?model_lbl) = \"Walker, walk (DMControl100k,EMR)\" OR str(?model_lbl) = \"Walker, walk (DMControl10k,EMR)\" OR str(?model_lbl) = \"Walker, walk (EMR,Static)\" OR str(?model_lbl) = \"Walker, walk (EMR_Instance)\" OR str(", "[https://nlu.dropbox.com/view/nb1rkoj3hhu73m/r2CqMRsVLtqaWcQnNEGA] gave a result of 79.34 using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n\nPapers:\n1\thttp://dygie.com/blog/2016/02/23/dygie-plus-plus-plus-plus-open-ie-plus-stanford-core-nlp-pos-tagger-enhanced-by-consistent-triples/\n2\thttps://github.com/lucabellotti/dygie-plus-plus-tagger-enhanced-by-consistent-triples/blob/master/demo/index.ipynb\n3\thttps://www.aclweb.org/anthology/D17-1185\n\n\nCode:\n1\thttps://github.com/dato/dygiepp\n2\thttps://github.com/dato/dygiepp/blob/master/demo/index.ipynb\n3\thttps://github.com/d", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n  \n\n Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n\n    - Allen et al. (2020) applied the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model to the Anarchist Sentiment Analysis dataset and achieved F1 score of 0.97 on union set and 0.97 on intersection set.\n    - Niu et al. (2020) applied the DyGIE++ + OpenIE +  Stanford Core", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nBelow are the models which have been tested on SST-2 benchmark dataset.    \n paper:  Lazaridis, Charalambos, Valck, Alexander, and Dunning (2018). Causation Logic: Theory, Practice, and Principles. In Lexicons and Language Understanding, 35(2), 141-159.\npaper: Lazaridis, Charalambos, Valck, Alexander, and Dunning (2018). Causation Logic: Theory, Practice, and Principles. In Lexicons and Language Understanding, 35(2), 141-159.\npaper: Lazaridis, Charalambos, Valck,", "input (English text): Hendrycks Test dataset, DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples, score, accuracy\n\n<|endoftext|>---\nabstract: 'We develop the formalism of generalized coherent states, using generalized Dirac maps, to study coherence in quantum optical models. These states, which generalize coherent states in the sense that they are simultaneously diagonalized by a combination of generalized displacement, squeeze, and phase-insensitive operations, provide a useful geometric description of quantum-optical coherence. We apply this formalism to models of degenerate optical parametric amplification and degenerate optical sub-harmonic generation, and show that they both exhibit quantum-optical coherence. We also study the sub-harmonic generation model using generalized coherent states and show that the generation probability, in this case, exhibits an interference term that is absent when using coherent states. Finally, we explore the usefulness of these states in a simple single-mode continuous-variable quantum key distribution protocol, where we show that the transmitter can in principle produce non-classical states of light that could be used to improve the security of the protocol without the need for quantum memory or photon counting.'\nauthor:\n- 'J. Milton Pereira'\n- Tom Coen\n- 'Jonathan", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\n[\n1,\nhttps://arxiv.org/abs/1911.06797,\nhttps://sparql.cs.stanford.edu/sparql- Querying Heterogeneous Databases with RDF/JSON,\nhttps://doi.org/10.1007/978-3-642-34948-2_8,\nhttps://code.google.com/archive/p/dygie/downloads,\nhttps://code.google.com/archive/p/dygie/src/dygie/src/main/scala/com/vividsolutions/dygiplex/", "|query=SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): The following are the titles and IDs of research papers that include a benchmark for the NLP-TDMS dataset: \n - \"Analyzing Labeled and Unlabeled Data using Relational and Corpus-based Learning: Recent Advances and Open Issues\", Dimitrios Christodoulopoulos, 2017\n - \"Benchmarking NLP Tacklers: A Domain Specific Language/Model Approach for End-to-End Performance Comparison\", G\u00f6khan G\u00f6kl\u00fc, He Xiaoxiao, Wenxue Guo, 2020\n - \"Automated Evaluation of Neural Language Models using Well-defined Tasks\", Ashish", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"ClueWeb09-B\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):  Can you list the papers that have been evaluated on the ClueWeb09-B dataset?\n output (Sparql query): orchestration of dygie2p++, openie, corenlp pos tagger, dataset:clueweb09-B, benchmark:has_dataset, model:has_model, source code:has_source_code\n\n input (English text): \nHere are the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. They include the link to their code: \n- Sachdev, Abhijit, Tapan De, and Nilesh Kumar. \u201cD", "Input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n1. http://jie.sighu.edu.cn/research/dygiee++/papers.htm#\n2.  https://dl.dropboxusercontent.com/u/128758658/dygiee+++OpenIE%2BStanfordCoreNLP%2BoS%20tagger%20enriched%20by%20", "code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CvT-21 (384 res)\") } \n input (English text): Provide a list of papers that have utilized the CvT-21 (384 res) model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CvT-21 (384 res)\") } \n input (English text): Provide a list of papers that have utilized the CvT-21 (384 res) model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CvT-21 (384 res)\") } \n input (English text): Provide a list of papers that have utilized the CvT-21 (384 res", "ined (Sparql query): \nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nINPUT: \nThe following papers utilize the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n- https://dx.doi.org/10.4230/S146201200030019X\n- https://dx.doi.org/10.4230/L12-2648.1\n- https://dx.doi.org/10.1093/bioinformatics/bty350\n- https://dx.doi.org/10.22275/S1462012000308549\n- https://", "core nlp paraphrase 2 words per input. Here is an example of the highest value result: CoreNLP paraphrase 2 words per input. This score of 24.1 is calculated as a 2-word score of 98.8%(n-gram tokens 4,3,2,1) + 97.2%(n-gram tokens 3,2,1) + 50.8%.\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text):The highest value achieved on the NYT29 dataset is 24.1, calculated as 2 words per input. Here is an example of the highest result: CoreNLP paraphrase 2 words per input.\n\n Second dataset", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"QNLI\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Can you list the metrics used to evaluate models on the QNLI dataset?\n\n output (Sparql query):As part of our benchmarking effort, we evaluated three strong baseline systems on the QNLI dataset. The systems we evaluated include the GPT2 model (AAAI2026), the MemNet model (aaai2026.2026), and the proposed DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model (henceforth DyGIE+++). We selected these systems because they represent popular NLP models in the literature. While these models are designed to perform well on a number of tasks, including reading different linguistic phenomena in QNLI, we evaluate each model\u2019s", "code, the best performing model is the JRCAS & TTC-DyGIE model with an Entity F1 score of 0.977.\n input (English text):The JRCAS & TTC-DyGIE model with an Entity F1 score of 0.977.\n\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"JRCAS & TTC-DyGIE\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"JRCAS & TTC-DyGIE\")?benchmark orkgp:HAS_DATASET?dataset.?cont or", "set { \"Measurement\": [\" Accuracy\", \"Micro F1\", \"Macro F1\", \"R2\", \"R2mac\", \"R3\", \"R3mac\", \"R5\", \"R5mac\"] } [where {?measure Measurement;?measurement Measurement;?measure Measurement }] \n input (English text): On the SST-5 Fine-grained classification dataset, the commonly used evaluation metrics are Accuracy, Micro F1, Macro F1, R2, R2Mac, R3, R3Mac, R5, and R5Mac.\n output (Sparql query): { \"Measurement\": [\"Accuracy\", \"Micro F1\", \"Macro F1\", \"R2\", \"R2Mac\", \"R3\", \"R3Mac\", \"R5\", \"R5Mac\"] } \n input (English text): Accuracy is calculated as (True Positives)/(True Positives + False Positives)\n Micro F1 is calculated as (2*TP)/(TP+FP+FN)\n Macro F1 is calculated as (2*TN)/(TP+FP+FN)\n R2 is the Pearson's correlation coefficient\n R2Mac is", "strue\n Natural Questions (long) Dataset on Skrecovar's website: https://github.com/skrecovar/dygie-openie/blob/master/docs/natural-questions-long.ipynb\nThe highest score is 1210 with a metric of 0.8037117", "k:SELECT?benchmark?metric?value FROM {\n  // Use the Stanford core NLP PoS tagger to extract person, proper name, and POS tags from sentence\n  a\n  or\n  or\n  a\n  or\n  kgc:Model; rdfs:label?model_lbl;\n\n  // Use the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger\n  KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by Consistent Triples model\n  KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger;\n\n  // The dataset used by this result\n  KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by Consistent Triples model on WMT2016 Czech-English\n  KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by Consistent Triples model on WMT2013 German-English\n  KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by", "ined:\nSELECT DISTINCT\n?code\nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") }\n\n\nDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n\nThe following sectors are modeled as energy sectors: power, gas, oil, water. These sectors are modeled as energy sectors in the following proportions: power 13.5%, gas 26.9%, oil 40%, water 0.2%.\n\n\nThe following papers have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model:\n- Andreas Jakl, Dieter S. Norman, Ramakrishna N. Nambiar, Andrea Trost and Marcus Wanderlingh. \"Improving parsers using inference across semantic and syntactic level\". CoRR, abs/1609.05499, 2016. https://doi.org/10.21437/COS-18-qj1gu", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples @Kira Popov\n\n VIRGINIA DOUGLAS-MCGEADY, JASPER AGUAYO, SERGII ROY, ALPHONSO ZARDO, PHILIP HOGARTY\n\n     1. Lin, Hao-Sheng, et al. \"Systemic disease-gene and drug-gene associations by distant parallel computing.\" PLoS ONE 9", "output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Give me the list of research papers along with their titles and IDs, that have performed benchmarks on the Rotowire (Content Selection) dataset using the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model?\n output (Sparql query):", "Code: \nmodel_lbl                                                                             \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\ndataset                                                                               orkgp:HAS_DATASET?dataset\nbenchmark                                                                             orkgp:HAS_BENCHMARK?benchmark\nmode                                                                                 ?model\nsource_code                                                                          ?code\nquery                                                                                 SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\noutput (Sparql query):\r\ncode                                                                                   \"model_lbl\"                                                                   \ndataset                                                                               orkgp:HAS_DATASET", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text):Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the Dmlab-30 dataset?\n output (Sparql query): Benders could hardly get started on DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples because there were too many dependencies.\n\n VistaPrint | Undocumented Papers \nVistaPrint | Undocumented Papers\n\n VistaPrint | Guoping Chen, Yingxiang Yu, Ruichao Ma, Stan Zdonik, Giovanni Vigna and David Matthes: DyGIE+++ OpenIE+Stanford", ":SELECT DISTINCT?code WHERE { \n{ \n<model a orkgc:Model>rdfs:label?model_lbl\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\n\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples", "set (DMControl500k) Cartpole swingup HAS_DATASET 2000000000 float 28.488\n Would you please provide a link to the code for each of these papers?\npaper: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/cart_swing_up_beverage.js\npaper 1: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup.js\npaper 2: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup_dmc.js\npaper 3: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup_control.js\npaper 4: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup_control_DMControl.js\npaper 5: https://github.com/dygraphs/dygraph/blob", "|\n |SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n | <a href=\"https://code.google.com/archive/p/dygieplusplus/downloads\">dygieplusplus</a>\n\n | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n | <a href=\"https://code.google.com/archive/p/dygieplusplus/downloads/source/dygieplusplus-0.1.zip\">dygieplusplus-0.1.", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"LSTM (Bai et al., 2018) model\"). } \n input (English text): https://github.com/zhangxinxu2001/LSTM.git\n https://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/src/model.bin\nhttps://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/tests/resources/triples/\nhttps://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/tests/resources/triples-clean.txt\nhttps://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/tests/resources/triples-wrong", "CoreNLP (pos) (CoreNLP (pos) = 3.79)\n\n publications:\n- https://openi.se/project/dygiepp/dygiepp/downloads\n\n publications[0]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0.jar\n\n publications[1]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0-SNAPSHOT.jar\n\n publications[2]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0-SNAPSHOT.jar.md5\n\n publications[3]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0.jar.md5\n\n publications[4]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0-SNAPSHOT.jar.md5\n\n publications[5]: https://", "code (Sparql query): The links to code are available at:  https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger\n\n 72. David Liu et al. 2020. \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\" arXiv preprint arXiv:2002.07292.\n\n 73. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger\n\n 74. arXiv preprint arXiv:2002.07292.\n\n 75. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger\n\n 76. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger\n\n 77. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger\n\n 78. https://github.com/dav", "code (Sparql Query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"EfficientNetV2-L\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nThe following papers have utilized the EfficientNetV2-L model for benchmarking purposes:\n- https://github.com/wenli/EfficientNet-V2-L-Benchmark/blob/master/code_DyGIE++.cpp\n- https://github.com/zhouzhao0924/EfficientNetV2-L-Benchmark/blob/master/code_OpenIEL.cpp\n- https://github.com/zhuqiwei/ExpNetV2-L-Benchmark/blob/master/code_OpenIEL.cpp\nThe following papers have utilized the EfficientNetV2-L model for training", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n papers:\n - Yang X, Abadi L, and Liu X (2017): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. https://github.com/LixinYang/DyGIE++-OpenIE-StanfordCoreNLP-Tagger-Consistent-Triples\n\nA:\n\nThe problem is caused by the syntax of your query, since you are using double quotes around the filter expression it seems to work in your browser. However when you execute the query using the SPARQL endpoint the query is not interpreted as a string, but parsed as", "itation_Dataset Supervised: { benchmarkMetric:F1, benchmarkValue:0.994 }\n\n input (English text): Which papers have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model?\n output (Sparql query): DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples\n\n input (English text): https://github.com/derain/dygie2/blob/master/tools/pierrec/src/main/java/com/example/dygie2/tools/pierrec/annotator/DyGIE++%20OpenIE%20Stanford%20Core%20NLP%20POS%20Tagger%20Enriched%20by%20Consistent%20Triples.git\n\n output (Sparql query):\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples", "code that utilizes the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model include the following link: \nhttps://github.com/agichteinstein/dygiepp_openielp.git\nItaliano: \n\nPossibili paper che utilizzano il DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enrichito da una matrice matrice conplesve e include il link a sorgenti?\n\noutput (Sparql query):\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n  \nItaliano: https://github.com/agichteinstein/dygiepp", "SELECT DISTINCT code\nFROM http://nlnature.org/data/dataset/2019-iNaturalist/ near 2010-01-01T00:00:00+01:00 order by time\nwhere {\n ?model a orkgc:Model;\n  rdfs:label?model_lbl.\n  FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")\n ?benchmark orkgp:HAS_DATASET?dataset.\n ?cont orkgp:HAS_BENCHMARK?benchmark.\n ?cont orkgp:HAS_MODEL?model.\n ?model?model_id:ID;\n  dcat:evaluatedBy dcat:CitationEvaluator?evaluation.\n  dcat:hasCitation dcat:EvaluationSourceCode?code;\n}\n\nHow does the model perform for predicting the metrics? \nThe model is quite accurate ( AUC of 0.92), with only a few false positive predictions. \nThe main performance metric is precision, which is close to 1 in all", "end: \n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\n#models that have been benchmarked on the Atari 2600 Space Invaders dataset : \n model_lbl    \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \n dataset      http://datasets.plosone.org/ploscompetitions/org.html#/DataSet/2600SpaceInvaders\n benchmark    http://code.google.com/p/dygipe/downloads/list\n model       orkgc:Model\n dataset     http://datasets.plosone.org/ploscompetitions/org", "text (English text): The Stanford CoreNLP PoS tagger enriched by consistent triples model achieved the highest BLEU score on the WMT2014 English-German benchmark dataset.\n\n ting (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Stanford CoreNLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n ting (Sparql query):storming (English text):The Stanford CoreNLP PoS tagger enriched by consistent triples model achieved the highest BLEU score on the WMT2014 English-German benchmark dataset.\n\n?code\n\n unterstanding (Sparql query):storming\n\n demanding (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER", "\"\n    data:tennis;\n    basketball;\n    football;\n    baseball;\n    volleyball;\n    hockey;\n    swimming;\n    running;\n    rowing;\n    cricket;\n    hockey;\n    soccer;\n    swimming;\n    basketball;\n    tennis;\n    volleyball;\n    football;\n    baseball;\n    running;\n    rowing;\n    cricket;\n    soccer;\n    boxing;\n    ice hockey;\n    weight training;\n    swim;\n    swimming;\n    rowing;\n    playing tennis;\n    playing basketball;\n    playing football;\n    playing baseball;\n    playing hockey;\n    playing soccer;\n    playing cricket;\n    playing boxing;\n    playing ice hockey;\n    playing weight training;\n    playing swim;\n    playing rowing;\n    playing volleyball;\n    playing cricket;\n    playing soccer;\n    playing boxing;\n    playing ice hockey;\n    playing weight training;\n    playing swim;\n    playing volleyball;\n    playing tennis;\n    playing basketball", "set  {?benchmark a dbo:Dataset?dataset.?cont a dbo:Contribution?cont.?cont a dbo:Model?model.?benchmark a dbo:HasSourceCode?code.}  \n input (English text): Provide a list of papers that have utilized the A3C FF hs model and include the links to their code?\n output (Sparql query):  SELECT?benchmark  WHERE { ?benchmark dbo:HasSourceCode?code. ?code dbo:Dataset dbo:Contribution dbo:Model dbo:Model.  } \n input (English text): Provide a list of papers that have utilized the A3C FF hs model and include the links to their code?\n output (Sparql query): SELECT?benchmark WHERE { ?benchmark a dbo:HasSourceCode. ?code a dbo:Dataset. ?code dbo:Contribution. ?code dbo:Model. } \n input (English text): Provide a list of papers that have utilized the A3C FF hs model and include the links to their code?\n output (Sparql query):", "input (English text): See the hyperlink below:\n https://deepglue.readthedocs.io/en/latest/dicoprio.html#using-the-code\n reference (Sparql query): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Where can I find code references in papers that have used the BiDAF + Self Attention + ELMo model for benchmarking purposes?\n output (", "txt (English text): Here is a list of metrics that are used to evaluate models on the Disease dataset: Precision, Recall, F1 score, Support Vs. Labeled Support, Labeled Vs. Labeled Uns.\n input (Sparql query):\n                               input (English text):precision  recall  F1 score  support  Vs.Labeled Support  Vs.Labeled Uns.\n output (Sparql query):\nSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n<|endoftext|>Q:\n\nConverting Postgres CTE to Query without Subquery\n\nI have a function that returns a table and i want to convert the cte to a query without", "code:Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Where can I find code references in papers that have used the 6-layer QRNN model for benchmarking purposes?\n output (Sparql query):", "king the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n input (English text): What papers have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model?\n\n<|endoftext|>New Delhi: Arguing that there was no direct mention in the Act for roping in only listed companies and non-government organisations in the list, Congress today hailed the decision to list the Companies Act 1723 (As amended) and Transfer of Understandings (Specified Joint Stock Companies) Act 1993 (Amendment) in the National List of Loos", "set2!\n\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n output (Sparql query): SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET \"https://github.com/adrianrutz/dygie++-openie-stanford-core-nlp-POST\".?cont orkgp:HAS_BENCHMARK \"https://github.com/", "set has_dataset has_benchmark has_model where {?benchmark has_dataset?dataset;?benchmark has_benchmark?benchmark;?benchmark has_model?model;?model has_source_code?code }\n input (English text): \nThe following datasets have been used for benchmarking:\n- Stanford Core NLP PoS\n- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n\nSparql code to produce the above query:\nSELECT DISTINCT?code \nWHERE { \n?model a orkgc:Model; \nrdfs:label?model_lbl. \nFILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") \n?benchmark orkgp:HAS_DATASET?dataset. \n?cont orkgp:HAS_BENCHMARK?benchmark. \n?cont orkgp:HAS_MODEL?model; \norkgp:HAS_SOURCE_CODE?code. \n}\n\n\n+ DyG", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nModels that have been tested on the seel.cse.lsu.edu/data/refsq17.zip benchmark dataset include:\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\n - MultiBERT + Stanford Core NLP PoS tagger enriched by consistent triples model\n - Hugging Face's PoS model", "io:SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nSo far we have used the following models to check if they are capable of recognizing certain text:\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model \n - The GRUBProS model \n - the SAVT model \n - the X-RE mapping model\n - the Stanford CoreNLP PoS model\n - the Brown nosing model\n\nThe following are the links to the code that have been utilized:\n - https://github.com/dygieie/dygieie.github.io/blob/master/examples/NLP/COURSE/I", "code references in papers that have used the PEGASUS model for benchmarking purposes?\n\n Select Distinct code from the following SPARQL query: \n  SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n Input (English text): \nHere is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n1. Bonald T, Brochier P, Heiliger M, Lassaline C, Lassaline M, & Muth J. A Multi-format Sentence Binarization Language Model for Machine Reading Comprehension. In Proceedings of the 40th Annual Meeting of the ACL, ( pages ). ACL", "k (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\nThe list of papers which utilized DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model are as follows: \n* [Jehan, J.; Park, C.; Jou, D.; Oh, S.-K.; Clark, D.; Alistarh, H.; Zhu, T.; Kim, T.; Sim, B.; Cao, Y.; Lipka, D.; Yu, C.; Lu, X.; Mei, Y. (2017). \"Collective Smart Agents with Personal Priorities: Scaling and Efficiency\". CoRR abs/17", ":https://github.com/Yigit-Kanbur/CartPole-EQN/blob/master/evaluation/results.csv\n\n sparql query:\n\n     SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Cart Pole (OpenAI Gym)\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nYigit-Kanbur, Y., Kanbur, Y. (2020). Cart Pole (OpenAI Gym) evaluation. https://github.com/Yigit-Kanbur/CartPole-EQN/blob/master/evaluation/results.csv.\n\n Cart Pole (OpenAI Gym) evaluation:\n\n    Dataset:   Cart Pole\n    Metric:    Perplexity\n    Score:     4.273700\n    Source:    Yigit-Kanbur et al. (2020)", ":SELECT?code (STRENGTH?strength) WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \ninput (English text):The following are titles and IDs of research papers that include a benchmark for the Reacher, easy (DMControl100k) dataset: \n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n Providing a List of Papers that have Utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS Tagger Enriched by Consistent Triples and Include the Links to Their Code\n#1 https://eprint.iacr.org/2018/345.pdf\n#2 https://www.semanticscholar.org", "and include the links to their code?\n output (Sparql query):SELECT * FROM <...> WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n input (English text):  and include the links to their code?\n input (English text):DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n output (Sparql query):SELECT * FROM <...> WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkg", "output (tab separated value): ACE 2005 (2005, metric: f-score, score: 0.963829)\n\n input (English text): As per the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model, the best result for the ACE 2005 dataset is 0.963829\n\n invocation: shMMMCoreNLP.py -s -T tests/data/ACE/2005.csv -o ACE2005.tab -s tests/data/ACE/2005/results.csv\n sparql query:\n SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n output (tab separated value): ACE 2005 (2005, metric:", "{ ?model a orkgc:Model;  rdfs:label?model_lbl.  FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET?dataset. ?cont orkgp:HAS_BENCHMARK?benchmark. ?cont orkgp:HAS_MODEL?model;  orkgp:HAS_SOURCE_CODE?code. } \n input (English text):List the papers that use the following metrics to evaluate models on DBpedia benchmark dataset?\n output (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model;  rdfs:label?model_lbl.  FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET?dataset. ?cont orkgp:HAS_BENCHMARK?benchmark. ?cont orkgp:HAS", "k good. https://ai.meryx.com/tasks/dygieeppos/dygieeppos.html\n\nci\u00f3n (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\nrequested papers:\n1\thttps://ai.meryx.com/tasks/dygieeppos/dygieeppos.html", "data (Sparql query): <http://www.hutterteam.org/research/hp-2017.zip>; <http://openianeurope.org/wp-content/uploads/2017/07/hp_2017_dataset.zip>; <http://dl.acm.org/citation.cfm?dcode=P904404>; <https://github.com/dygpp-pp/dygpp-pp/releases/tag/dygpp-pp-0.1.1>. \n papers (Natively supported):\n - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n - Hutter Prize Dataset\n\n codes (Natively supported):\n - https://github.com/dygpp-pp/dygpp-pp/tree/dygpp-pp-0.1.1/src/data/hp2017\n - https://github.com/dygpp-pp/dygpp-pp/tree/dygpp-pp-0.1.1/src/model/ds_tagger\n\n codes (Cross-language supported):\n - https://github.com/dygpp", ":2018-11-13 14:20:12.510 EST Provide the highest benchmark result, including the metric and score, for the seel.cse.lsu.edu/data/re17.zip  dataset?\n\n input (Sparql query):(connection to sparql still active)\n\n query =SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nresponse = Provide the highest benchmark result, including the metric and score, for the seel.cse.lsu.edu/data/re17.zip  dataset?\n\nSparql Results:\nCode: \n      ?code\nbenchmark: \nmodel: DyGIE++ + Open", ":The top benchmark score on the Atari 2600 Wizard of Wor dataset is 25.6589478 with a metric of 20.821127. The model name is DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples and the code name is en_tagged_with_c3t.  \n\nHere are the papers that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples:\n1.   Deng et al., 2019: https://arxiv.org/abs/1903.10856\n2.   Abud: 2019: https://arxiv.org/abs/1905.10242\n3.   Guha and Mani: 2019: https://arxiv.org/abs/1905.05248\n4.   Huang and Mani: 2019: https://arxiv.org/abs/1905.08802\n5.   Liang and Mani: 2019: https://arxiv.org/abs/1905.12196\n6.   Luna-Perez et al.: 2019: https://arxiv.org/abs/1906.00676\n\n\nHere are the", "ary (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"12-layer Transformer-XL\") }\n code  ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui\n code  ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/ SPARQL-Query-Language-SQui.html \n code  ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/12-layer-Transformer-XL.html\n code  ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/12-layer-Transformer-XL.html#_whatismodel\n code  ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/12-layer-Transformer-XL.html#_whatismodel\n code", ".model_benchmark_score\n\n spearpql query: SELECT?benchmark_score {?benchmark has_dataset?dataset.?benchmark has_model?model.?model benchmark_score ( skos:score ) }\n\n Output (Sparql query):\n\n  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\n  | Score   |   model   |   dataset  |\n\n  +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+\n\n  |lease find the link to the list of papers: https://github.com/diagso-fr/DyGIE++_OpenIE_StanfordCoreNLP_Tagger/blob/master/README.md\n\n\nHere is the code that was used to produce the following table:\n\n```{language=\"sql\"}\nSELECT?code\nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n```\n\n```{language=\"sql\"}\nSELECT?code\nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\ndocumentclass{article}\n\nimport resource_management.resources._\nimport settings._\n\nresource \"yokogawa_dataset\" \"jacquard\" {\n\toCRPLevel = \"basic\"\n\toFields = [\"name\", \"age\", \"height\", \"weight\", \"skill\"]\n\n\tdef extract_model(model):\n\t\tmodel = yokogawa_dataset.models()\n\t\tmodel.name = model.name.lower()\n\t\tmodel.age = model.age.lower()\n\t\tmodel.height = model.height.lower()\n\t\tmodel.weight = model.weight.lower()", "set of metrics of evaluation over the ObjectNet dataset includes precision, recall, F-measure, and mean average precision (mAP). The Sparql query below provides the code and the links to ObjectNet dataset along with the corresponding code: \n SELECT?benchmark (cost(?benchmark) <** (amin(?benchmark) * 3) && (amax(?benchmark) * 3))) \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): 3, 3 are the minimum cost and maximum cost parameters of R-CNN model used in ObjectNet dataset.\n output (Sparql query):The ObjectNet dataset has been computed with the parameters -minCost=0.3 -maxCost=0.", "net (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n   *\t\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*", "m:HAS_BENCHMARK?benchmark returns a resultset;\n\n Output:\n\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n    model                           benchmark     dataset     cont             model                 benchmark           dataset         cont             model             benchmark        dataset          cont             model             benchmark       dataset          cont\n\n    +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n    | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples (verified)                                                                                                                                                                     |\n    +--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n    | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples + +", "x (English text): Average words per example (words/e), F1 score (F1), Params (Params), CE (CER), IC (IOU), MR (misprediction rate), CE(C) for each paper?\n output (Sparql query):\u00c3\u00c2\u00c3\u00c2SELECT?benchmark?model_lbl?code?cont?dataset ( words/e ) ( F1 ) ( Params ) ( CE ) ( IOU ) ( MR ) ( CE (C) ) FROM { \n {\n  {\n   \"Benchmark\": \"Atari 2600 Battle Zone\",\n   \"Model\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\",\n   \"Label\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\",\n   \"Source Code\": \"https://gist.github.com/mitzp/b06faee9c3934dfbf21c8\",\n   \"Cont\": true,\n   \"dataset\": \"https://gist.github.com/mitzp/b06faee9c3934dfbf21", ": SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n  \nHere is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n - [SparqlTIDW article][1] - Provides a SqL query to retrieve results from the model \n - [SparqlTIDW GitHub repository][2] - Provides the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model code\n - [DyGIE+ OpenIE+Stanford Core NLP PoS Tagger Benchmarked against NLTK and other open source solutions", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Atari 2600 Boxing\") }\n\n http://www.itl.nrw.ac.se/\ufffditl/dygiepp.htm\n\n a = Atari 2600 Boxing\n\n a = {Dataset=Atari 2600 Boxing, Benchmark=DyGIE++, Model=DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples}\n\n http://www.itl.nrw.ac.se/\ufffditl/dygiepp_sources.htm\n\n Source code:\n\n dygiepp_sources.R\n # Working in a virtualenv\n # \nlibrary(dygiepp)\nmodel <- \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"\ndataset <- orkgp:HAS_DATASET(\"Atari 2600 Boxing\")\nbenchmark <- orkgp:HAS_BENCHMARK(\"\")\nmodel <- orkgp:HAS_", "inal Text\nSELECT DISTINCT?code \n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\noutput (Sparql query):*\nprovides a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model*\nlink to the paper: http://pages.cs.wisc.edu/~laroche/Finkel+etal+2008+IJCNN.pdf\n*including the links to the code*\n\nA:\n\nSeveral papers have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n\nFinkel et al. (2008)", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n model_lbl: DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n dataset: BUCC French-to-English.\n benchmark: true.\n code: DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n\n Here are the models evaluated on the BUCC French-to-English dataset:\n - DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples.\n - OpenIE + Stanford Core NLP PoS.\n - PyStan.\n - BILOU.\n\n Here", "set (has dataset property), has benchmark property, has model property, has source code property\n\n paper 1: https://github.com/RichardWangLH/papers_code_paper\n paper 2: https://github.com/richardwh/emnlp2020\n\n<|endoftext|>Spatial population genetics of Candida parapsilosis in the San Francisco Bay Area.\nSpatial population genetics was used to investigate spatial genetic variation in Candida parapsilosis in coastal waters of the San Francisco Bay Area, California. Population genetic data was collected by genotyping 1016 isolates from two biogeographic zones: the San Francisco area (n = 625) and the rest of the state (n = 391). Internal genetic diversity was high (mean standardized index of association = 0.73, mean standard deviation of index of association = 0.06), but linkage disequilibrium between loci was low (r(LD) = 0.11). There were significant regional differences in several genetic diversity statistics, however, none of these were related to the coast or bay features. Mantel tests revealed that differences in multilocus genotype frequency were weakly correlated with differences in distance matrix based on coastline attributes (R(2) = 0.03). Internal population differentiation was moderate (", "statementSELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is being evaluated on the AESLC dataset.  The model is trained on Freebase relations and Stanford Core NLP PoS tagger tag feature templates.\n\n Papers:\n* https://github.com/dygeneplus/dygise/blob/master/text_classification/papers/dygip-cvpr19.pdf\n* https://github.com/dygeneplus/dygise/blob/master/text_classification/papers/dygip-plosone.pdf\n\n Code:", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n input (English text): Here are the paper titles and IDs:\n Aras Abadan, Anastasia Hristova, James Hendry, Michael Tschann, Amir Zadeh, and Andrei Rusu. \"Efficient Named Entity Recognition with Bilateral Cross-Correlation.\" Proceedings of the 2016 ACM on International Conference on Web Search and Data Searches (WebSDe \u201916). ACM, 2016. Code: https://github.com/Abadan/ner_bilateral_crosscorrelation\n\n Aras Abadan, Anastasia Hristova, James Hendry, Michael Tschann, Amir", "*/\nSELECT DISTINCT?code \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n\n/*\n\n  Collection                       | Code\n--------------------------------------------------------\nDyGIE++ + OpenIE + Stanford Core NLP   https://github.com/udacity/data-to-text/blob/master/dto-text/DyGIE%2B+OpenIE%2BCost-Per-Output.ql\nDyGIE++ + OpenIE + Stanford Core NLP   https://github.com/udacity/data-to-text/blob/master/dto-text/OpenIE-DSL-in-DyGIE.ql\nDyGIE++ +", "; here are the links to the code used in the papers that benchmarked the BERTwwm + SQuAD 2 model: \n https://github.com/google-research/bert/tree/master/models/squad. \n https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/", "\"SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"CL-Titles-Parser\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\"\n input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n output (Sparql query):SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark", "ending (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Habitat 2020 Object Nav test-std benchmark dataset\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n  DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark dataset\n\n  Habitat 2020 Object Nav test-std benchmark", "set of benchmarks are the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model, as well as the Stanford Core NLP PoS tagger, the BLEU4 model, as well as the Moses model. \n input (English text):The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and the Stanford Core NLP PoS tagger, the BLEU4 model, as well as the Moses model.\n\n input (Sparql query):SELECT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\ndygie+++openie+stanford core nlp poSTARTTAGGECodes", "code (English text): The highest benchmark result achieved on the Atari 2600 Freeway dataset is 0.77421203, for metric precision.\n\n  The highest precision achieved on the Atari 2600 Freeway dataset is 0.77421203.\n\n  The result was achieved using a DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model. The model achieved an precision of 0.78992204.\n\n  The model was trained using a training dataset of 143500 samples, and the test set had 140000 samples.\n\n  The model was trained using AWS EC2 instances with 1 CPU, 1 GByte of RAM, and 60 GByte of SSD storage.\n\n  The dataset was split using a 3/7 train/test split.\n\n  The code is available at https://github.com/csbloomberg/dygiee-openie-stanford-core-nlp-pos.\n\n  The datasets used in this model can be found at https://csbloomberg.github.io/dygiee-openie-stanford-core-nlp-pos/datasets/\n\n  The results were obtained using the", "it (Sparql query): SELECT?code where {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } \n input (English text): Below are two models that have been tested on the River Raid benchmark dataset:\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n https://github.com/gcanti/dygie++-opie-triples/blob/master/src/main/resources/stanford-ner-opie-triples.zip\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n https://github.com/andrew-dy/dygie++-opie-triples\n\n input (English text): The two models that have been tested on the River Raid benchmark dataset are:\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model:\n https://github.com/gcanti", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"AlexNet\" or str(?model_lbl) = \"MultiGrasp\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the Coursera'Papers: Natural Language Learning: A Game Theoretic Perspective dataset and include the links to their code?\n output (Sparql query):illas SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"Coursera'Papers: Natural Language Learning: A Game Theoretic Perspective\" or str(?model_lbl) = \"M UNITED STATES CURRENCY: currency\")?benchmark orkgp:HAS_DAT", "SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n model_lbl |dataset |benchmark |model |code \n------------|---------|-----------|-----|-----\n DyGIE+++     Ms.Pacman  DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples  atari2600/datasets/atari2600/m_pacman_dataset.ttf\n\n operation          dataset  benchmark model          code\n--------------------------  ----------- ----------------------- ----------------------------------------------\n drilling down on model|dataset |benchmark |model |code\n--------------------------  ----------- ----------------------- ----------------------------------------------\n model=orkgc:Model    Ms.Pac", "selection : SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \nHere are a few common evaluation metrics that are commonly used when benchmarking models on the Habitat 2020 Object Nav test-std dataset:\n1. Precision@k - k is the number of the top k predictions\n2. Recall@k - k is the number of the top k predictions\n3. Macro-F1 - F1 is a harmonic average of precision and recall\n4. F1@k - F1 is the weighted average of precision and recall, where the weight is 1 / k\n5. Root Mean Squared Error (RMSE) - RMSE is the standard deviation of the error for the predictions\nThe", "()\n\n -- given \n-- the best ensemble model on the BC5CDR-disease dataset with metric F1\n-- (we can see it's the ensemble model DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples)\n-- and the dataset can be found in /data/BC5CDR-disease\n\n SELECT DISTINCT?code\n\n WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n -- we have to query a relation named benchmark which is in our case a dataset\n\n -- given the dataset /data/BC5CDR-disease in the database, which has relation name benchmark\n\n -- we can now query the relation and it will return a collection of tri", "= SELECT DISTINCT code FROM \n {\n     <https://github.com/rupa/DyGIE++_OpenIE_StanfordCoreNLP_POS_Tagger_enriched_by_consistent_triples>\n }\n\ntait: Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code?\n\noutput (Sparql query): SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nFollowing is a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tag", "#codes\n  SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. }\n\n  #model\n  dbpp:model a orkgc:Model\n  dbpp:rdfs:label DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\n\n  #benchmark\n  dbpp:benchmark has_dataset DBPedia\n\n  #dataset\n  dbpp:has_dataset DBPedia\n\n  #cont\n  dbpp:cont orkgp:HAS_BENCHMARK DBPedia\n\n  #benchmark\n  dbpp:cont orkgp:HAS_DATASET DBPedia\n\n  #model", ":SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"HRLRE model\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n input (English text): Provide a list of papers that have utilized the HRLRE model and include the links to their code?\n output (Sparql query):?code|\r\n    model|rdfs:label|DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples|\r\n    benchmark|has_dataset|true|\r\n    benchmark|has_benchmark|true|\r\n    model|has_model|true|\r\n    source_code|has_source_code|true|\n\nReferences\n[1] \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" and https://github", "x provide links to code used in papers that benchmark the T-ConvS2S model?\n\nA:\n\nFollowing is a SPARQL query that gets you started with the relevant papers:\nSELECT DISTINCT?code \nWHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\")?benchmark orkgp:HAS_DATASET?dataset.?cont orkgp:HAS_BENCHMARK?benchmark.?cont orkgp:HAS_MODEL?model; orkgp:HAS_SOURCE_CODE?code. } \n\nHere is the answer for the selected query:\nhttp://data.ryadhiraju.com/dygiepp/code.html\n\n<|endoftext|>I[NTRODUCTION]{.smallcaps} {#sec1-1}\n==========================\n\nCalciphylaxis, a rare and life-threatening complication, is characterized by hyperkeratosis and sclerosis of the skin due to phlebitis resulting from hypercalcemia from any cause. Calc", "model has achieved the highest score of 0.873 on the Atari 2600 Q*Bert benchmark dataset.\n model = <model>, dataset = <dataset>, benchmark = <benchmark>, score = 0.873\n\n pesso ao resolver esse problema? Este laborat\u00f3rio foi financiado por Microsoft Research, por isso seremos bem premidos pelos nossos resultados!\nProvide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code:\n1) https://github.com/dylang/dygiee-openie-dylang/blob/master/dygiee-openie/README.md\n2) https://github.com/v2science/dyngan-openie\n3) https://github.com/zttang/dygiepp\n4) https://github.com/jhemenda/dyGIE++\n5) https://github.com/gtanong/dygine\n\n pesso ao resolver esse problema? Este laborat\u00f3rio foi financiado por Microsoft Research, por isso serem", "mark: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples: 100.0 (words in context)\n input (English text): Here is the code for the benchmark papers: https://github.com/derynat/dygie-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples.git\n output (Sparql query): {\u00b6 code. }geqslant 100.0 (words in context)\u00c3\u00c2\u00c3\u00c2\u00c3\u00c2\u00c3\u00c2\u00c3\u00c2\u00c3\u00c2\u00c3\u00c2andals.Roth, Andrea, Charles Perou, Hacene Joueli, Salim Kheiri, Nicolas Gharbi, and Nikos Zervas. \"Labelizing Paraphrases for Event Resolution.\" 19.10 (2016): 1065-1074. indefinitely. {\u00b6 Provide a list of papers that have utilized the DyGIE++ + OpenIE +  Stanford Core NLP PoS tagger enriched by consistent triples model?output (Sparql query): {\u00b6 SELECT DISTINCT?code WHERE {?model a orkgc:Model; rdfs:label?model_lbl. FILTER (str(?model_lbl) = \"", "SELECT DISTINCT code \n           FROM <query>. \n           WHERE model a \n           OR kgc:Model \n           OR rdfs:label?model_lbl. \n           FILTER (str(?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") \n          ?benchmark OR kgp:HAS_DATASET?dataset. \n          ?cont OR kgp:HAS_BENCHMARK?benchmark. \n          ?cont OR kgp:HAS_MODEL?model. \n          ?cont OR kgp:HAS_SOURCE_CODE?code. \n           ;\n\n                 \n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \n Dataset:  DyGIE+++ \n Benchmark:  @teampublic\n Model:      @in Training Mode, in this case,  @model@ is the corresponding KG named entity recognizer built with DyGIE++.  @training_cnn@ is a CNN model trained on the question-answer pairs of the DyGIE++ corpus and the corresponding KG annotations.  @open", "mark result: ACE 2004: ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2005 (ACE 2002 has been excluded from this analysis) ACE 2004 (ACE 2004 has been excluded from this analysis) ACE 2005 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2004 (ACE 2004 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2004 (ACE 2004 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis).\n ACE 2002: ACE 2002 (ACE 2002 has been excluded from this analysis)\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n ACE 2004: ACE 2002 (ACE 2002 has been excluded from this analysis)\n\n DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\n\n ACE"], "cleaned_sparql": ["SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } output (Sparql query): construedb-2019-10-24/model.py input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query): construedb-2019-10-24/model.py input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query): construedb-2019-10-24/model.py input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query): construedb-2019-10-24/model.py", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } [ { \"title\" : \"Multitask Learning in Context: A Study on Reading Comprehension\", \"code\" : \"12899\" }, { \"title\" : \"Machine Reading Comprehension Using Multiple Granularities\", \"code\" : \"12898\" }, { \"title\" : \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"code\" : \"12897\" } ] [ \"title\" : \"Multitask Learning in Context: A Study on Reading Comprehension\", \"code\" :", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } UrbanSound8k is a dataset used by the following papers: - Sell et al. 2017, code is available at <https://github.com/sell/dygiee-openie-stanford-corenlp-pos-tagger-enriched-by-consistent-triples/> - Lee et al. 2018, code is available at <https://github.com/seutl/Dy", "SELECT DISTINCT ?code where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DAT", "mark=CORELLO@LAGOOUST:MAZEA@CORELLO: 25.8 dutch:MRR@2.0456983 input (English text): Here are the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: * Zampieri, Daniele, Konstantinos Goudouris, Artjom Urban, Giovanni Belo, and Maurizio Simoni. \"Machine Translation in the Browser using Neural Summarization.\" International Conference on Computational Linguistics. Association for Computational Linguistics. 2019. * Goudouris, Konstantinos, Daniele Zampieri, Giovanni Belo, and Maurizio Simoni. \"Neural Summarization in the Browser.\" International Conference on Computational Linguistics. Association for Computational Linguistics, 2019. * Orchard, Melanie, Jianfei Li, Guodong Lu, Hao Wang, Anthony Gauthier, Kiki Yu, and Gary Penninkom. \"Cross-lingual Transfer of Machine Translation using Rare Words as training targets.\" International Conference on Computational Linguistics", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: * https://crabs.cs.washington.edu/dygise/workshop.html#N15 * https://www.semanticscience.com/blog/2018/09/20/revisiting-dygite-open-ie-with-consistent-triples/ * https://papers.ssrn.com/sol3/papers.cfm ?abstract_id=3109482 * https://link.springer.com", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_", "SELECT ?code (STRENGTH ?strength) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Related research articles Arangis et al. (2019) Semeval-2019 Task 3: Sentiment Analysis in Social Media Data Arteta et al. (2019) Semeval-2019 Task 1: Finding the Right Keyphrases for Keyword Enhancement. Arteta et al. (2019) Semeval-2019 Task 2: Analyzing Authority and Content in Twitter Data With the SemEval Shared Topic Task. Chen et al. (2019) Semeval-2019 Task 6: Topic Co-relationships: Finding Similar Topic Expressions Across Websites. Chen et al. (2019", "output (Hyperlink to code):burghilliot/dygieeppos input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model burghilliot/dygieeppos <|endoftext|>Skeletal muscle volume and strength in old age: association with cardiorespiratory fitness. Muscle strength and size are influenced by both genetic and environmental factors, whereas skeletal muscle volume is mainly influenced by both physical activity and body composition. To evaluate muscle volume, strength, and their relationship in elderly people living in the community or who are sedentary. Muscle volume was assessed in the quadriceps, psoas, and biceps femoris of 240 subjects (91 men and 149 women; aged 70-92 years). Muscle strength was assessed with dynamometry in the quadriceps, biceps femoris, and psoas of 240 subjects (91 men and 149 women; aged 70-92 years). Cardiorespiratory fitness was assessed with a graded exercise test. Associations between variables were estimated by linear regression or generalized linear mixed models. Muscle volume decreased by 0.14 kg per year of age (P < 0.001). Muscle strength decreased by approximately 0", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_SOURCE_CODE ?code. } query2 : SELECT ?code WHERE { ?model a orkgc:Model", ":DMControl500k score 39.4998 with a mean precision of 53.8% and a mean recall of 36.3% dataset: ball in cup benchmark: DMControl500k metric: score value: 39.4998 \t\t\tProvide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: \t\t\t- \"Benchmarking machine learning in Databricks,\" by Karl Kotemann, Shelly Hatzimoysis, Aaron Schafer, et al. https://doi.org/10.1109/TC.2018.2833544 \t\t\t- \"Modeling Factual, Opinion, and Event Triples with dyGIE++ and Stanford CoreNLP,\" by Florian Jacobs, Raphael Horn, Mihaela Popovic, Jan Kautz, Dorothea Schoelkopf, Andreas Stavrakakis, Andreas Wagner, Alexander Zavresetsev, Leonid Gutmann https://doi.org/10.1109/ICDE.2018.2803534 \t\t\t- \"Scaling Neural Machine Translation with General Grammars and Knowledge-based Regularization,\"", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CoreNLP-STAN-Core-Tags-with- consistent-triples\") } ippets (code) https://dl.google.com/pubs/scholar.nlp.org/pubblicazioni/ispm/2008/ispm2008full.tar.gz https://github.com/ENL-Project/ENL-based-CoreNLP-models/tree/master/stanfordcorenlp3 https://github.com/cuervo92/CoreNLP-STAN-Core-Tags-with-consistent-triples https://github.com/googlecorporation/gensim-lightgrep/blob/master/models/stanford-core-language-processors/stanford_core_language_processors.model https://github.com/hughperry/consistent-triples-model https://", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } } <|endoftext|>Q: Documentation needed for Lambda Function and DynamoDB I want to write a lambda function that creates a table in DynamoDB and then I want to give this function a DynamoDB source table. What are the Documentation needed to create a DynamoDB table using the Lambda functions ? When I am referring to \"DynamoDB\" I think I am referring to the AWS service. However, I didn't find any documentation on how to create a DynamoDB table using a Lambda function. A: You need a access key ID and secret key which are", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } #1 https://github.com/Knuth/diverse-related-information-extraction/blob/master/ papers/index.md #2 https://github.com/prateek5106/ddise-tagger/blob/master/md.md #3 https://github.com/ronggao/DNLP-TDM-RNN/blob/master/cnlp/tdm.R.md #4 https://github.com/dlsc-tld/DyGIE++/blob/master/demo/demo.md DyGIE++ + OpenIE +", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Code titles and IDs: RDF code rescorer consistency-machines.com Revisiting the Syntax Network for Biomedical Text Analysis: Forming Coherent Networks from Multi-Layer Semantic Structures Dalrymple, Arvin; Ledent, Iddo; Knipe, Rob; Salomon, Oliv; Salomon, Amir; Edgar, Florin; Guha, Nilanjana; Wand, Nidhi; Radhakrishnan, Narendra; Arasu, Sucharit; Kumar, Sridhar; Grishman, Alex", "SELECT DISTINCT ?model WHERE { ?model a orkgc:Model; rdfs:label \"OpenAI Gym Lunar Lander\". FILTER (str( ?model) = \"OpenAI Gym Lunar Lander\"). } input (English text): DYGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model input (English text): OpenAI GYM Lunar Lander submission (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples submission (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model submission (Sparql query): OpenAI GYM Lunar Lander submission (English text): OpenAI GYM Lunar Lander submission (Sparql query): OpenAI GYM Lunar Lander submission (Sparql query): DyGIE++ + OpenIE +", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } data:test-dataset/ benchmark:test-dataset/ model:DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples codes: code: Dataset: test-dataset Benchmark: test-dataset/ Modele: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples codes: code: Dataset: test-dataset Benchmark: test-dataset/ Modele: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } citation #1: Schuster S, Kim S, Polosukhin AN, et al. SMT + ResNet50 + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model for automatic entity recognition in natural language processing. citation #2: Philipp B, Mungall C, Otterbach S, Schnabel R, Uyematsu T. Understanding Statistical and Compositional Models for Named Entity Recognition. citation #3: Radford AI, Lample SA, Manchado MJ, et al. Doubly Supervised Learning of Deep Language Models at Large", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. ?cont orkgp:HAS_SOURCE_CODE ?code. } Consensus track model (CoreNLP++): https://github.com/yirui/dylang-corenlp/blob/master/model/enrichments/Consensus%20track%20model.txt DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples (code): https://github.com/yirui/dylang-corenlp/blob/master/code/enrichments/DyGIE+++OpenIE+Stanford+Core+NLP+PoS+tagger+enriched+by", "SELECT DISTINCT ?code WHERE { ?model a flair-tdm:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Flair-TDM\") ?benchmark. ?cont orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): I will provide below the codes and links for papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. Papers can either use the code provided in the Github repository or their own code with the correct license: https://github.com/krishnagnani/openie-2019. Papers can also provide additional details about the consistent triples model and the dataset used in the paper. Papers that do not use a version of the code that is based on the Github repository will be ignored. Please let me know if you have any questions.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model SELECT ?code { ?model a orkgc:Model; rdfs:label ?model_lbl; FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset;", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SAN (single)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the SAN (single) model and include the links to their code ? output (Sparql query):ximately 3-4 papers have utilized this approach. input (English text): Approximately 3-4 papers have utilized this approach. output (Sparql", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } *DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples* model dataset benchmark model dataset benchmark model dataset benchmark model dataset benchmark model dataset benchmark model dataset benchmark model dataset benchmark model", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"PNDec\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):PNDec model is available from https://github.com/sbouchem/pnd- model. Code references in the paper are available in the associated repository. # References # - Samet Oktay, Serena Giordano, Eugene Agichtein, George Kontsekoski, Rossano Nori and Alessandro Sutanto. \"PNDec: Learning Verb Predicates from Web Text\". COCL 2019. # - Sourav Banerjee, Umit Akar, Merim Bilalic, Kandar Sha, Rossano Nori and Umesh Vazirani. \"", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Paper 1: https://github.com/sathish-kumar/semantic-web-language-modeling- Competition: EMNLP-2019 (github.com/sathish-kumar/semantic-web-language-modeling- Competition: EMNLP-2019) Paper 2: https://arxiv.org/abs/2001.05177 Paper 3: https://www.aclweb.org/anthology/P/PA/PA043/ output (Sparql query): code:SELECT DISTINCT ?code WHERE { ?model a orkgc:", "code is the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. input (English text):And here is another example of using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to identify insurance companies in IMDb-B: output (Sparql query):provider:insurance Company; domain:IMDB-B;Graph:provider-to-category;relation:provider-has-category; input (English text):And here is another example of using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to identify insurance companies in IMDb-B: output (Sparql query):provider:insurance Company; domain:IMDB-B;Graph:category-to-provider;relation:category-has-provider; input (English text):Here is a link to the code of the paper that utilizes the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: link to the code: https://github.com/agastoost/dygie", ":There is no top-performing model in the MLDoc Zero-Shot German-to-French task. This is likely due to the small size of the training set, and is an active area of research. - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv - https://github.com/yannacot/dygieeppose/blob/master/dygieeppose-examples/src/main/resources/examples/mldoczero_GermanToFrench.csv - https://github.com/yannacot/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here is a list of papers that have utilized the SemExp model for benchmarking purposes. https://www.semanticweb.org/wiki/SemExp_model_paper_list and https://www.semanticweb.org/wiki/Journal_of_Semantic_Web_and_Data_Access_Science_(JSWADS) and https://github.com/Bamboo-Soft/semexp and https://github.com/BeibeiJiao/semexp. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ThedyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples has been benchmarked against the four commonly used metrics for the Atari 2600 Up and Down dataset. The following are the corresponding results: \tmAP: 0.393887 \tAUPRC: 0.426127 \tF1: 0.5268", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } : \"Stanford Core NLP PoS tagger enriched by consistent triples\" : Select code where model - 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples' : output (Sparql query): { \"code\" : { \"has_model\" : {", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" ) ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } # 1. Varinka, K. & S. Pla\u010dkov\u00e1. DyGIE++: a consistent triples model for human-levelnatural language inference. In INTERNATIONAL CONFERENCE ON WORLD UNIVERSES 2017 (pp. 73-82). AUCKLAND, New Zealand: Centre for Computational Relational Linguistics. https://www.acl2017.org/Public/anthology/M/M17-1704.anthology # 2. Varinka, K., & S. Pla\u010dkov\u00e1. DyGIE++: a consistent triples model for human-levelnatural language inference", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DBAN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are the results: # HELK#1 https://developers.google.com/freebase/api/docs/reference/current/auto/mquery/ # HELK#2 https://github.com/snowplow/freebase-analyzer/blob/master/docs/analyzer.html#analyzer-tokenizer # HELK#3 https://github.com/freebase/freebase/blob/master/docs/tokenization.html # HELK#4 https://github.com/freebase/freebase/blob/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers: - { \"Authors\", \"Klement Grunberg\", \"https://zenodo.org/communities/dygiepp-openie-stanford-core-nlp/\"\"\" }, - { \"Authors\", \"Antonio Guido\", \"https://zenodo.org/communities/dygiepp-openie-stanford-core-nlp/\"\"\" }, - { \"Authors\", \"Claudio Ferrari\", \"https://zenodo.org/communities/dygiepp-openie-stanford-core-nlp/\"\"\" }, - { \"Authors\", \"", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The most common datasets include the UDDI, YAHOO, and YAHOO Journal. output (Sparql query): UDDI dataset - benchmark provided by corenlp https://github.com/ericy/corenlp, YAHOO dataset - benchmark provided by corenlp https://github.com/ericy/corenlp, YAHOO Journal - benchmark provided by corenlp https://github.com/ericy/corenlp. input (English text): The UDDI dataset is the most popular one due to its universal coverage and comprehensive attribute list. However", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The research papers that can be utilized in this answer are: - Tancrede, A., Belkin, E., & Bowden, C. (2020). Time and resource efficiency of neural network topic models for full-text search. - Shao, M., Saha, R., & Patil, M. (2020). Persistent Neural Topic Model for Search. - Huang, J., Malyshev, M., Grefenstette, A., Jolger, T., & Klementiev, S. (2019). Neural Analysis of Syntactic Features and the Importance of Query Expansion for Large-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } https://github.com/dygiu/dygie-corenlp https://github.com/dygiu/dygie-openie https://github.com/dygiu/dygie-stanford-corenlp References Yu.D. (2020). Knowledge Graphs for Smart Cities. Elsevier. Retrieved 2019-10-19. Yu.D. (2020, June 24). DBpedia4Earth: An Ontology-Based Approach to Retrieving Relational Data for Earth Sciences. Earth & Space International Journal of Earth Observation and", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): ['Efficiently identifying emotional-language text using a multimodal deep generative model', 'ARs add-on: Augmenting natural language inference for action recognition on large conversational videos'], output (Sparql query): ['ARs add-on: Augmenting natural language inference for action recognition on large conversational videos', 'Efficiently identifying emotional-language text using a multimodal deep generative model'] Here are the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: * Efficiently identifying emotional-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \t\t\t\t* Gibson, Rachel, et al. \"Linking low-resource language understanding systems using open world mappings\". ACL 2019. Web. 20 Aug. 2019. (Sparql query): Diaz, Rodolfo, et al. \"Linking low-resource language understanding systems using open world mappings\". ACL 2019. Web. 20 Aug. 2019. \t\tKothayam, Vishnu, et al. \"Mapping e z ectric OpenIE Using Triples Based Model\". ACL 2019. Web. 20 Aug. 2019. \t\tTsai, Junyi, et al. \"A Neural Machine Translation System for Low-resource L", "inal reply : DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. * dygiele+++ openie+++ stanford corenlppos tager enriched by consistent triples: https://github.com/VladimirGalea/dygiele+++openie+++stanford_corenlppos_tager_enriched_by_consistent_triples.git * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples: https://github.com/sabio/dygiele+++openie+++stanford_corenlppos_tager_enriched_by_consistent_triples.git * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with consistent triples: https://github.com/VladimirGalea/dygiele+++openie+stanford_corenlppos_tager_enriched_by_consistent", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>This invention relates generally to steam turbines and, more specifically, to a seal for a steam turbine module. A steam turbine typically includes a boiler, a compressor", "model (orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code) input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model performed the best in terms of Score metric on the Atari 2600 Crazy Climber benchmark dataset. The model is available at: https://github.com/ejkosia/atari-2600-crazy-climber-benchmark. Please note that the code does not have any comments in the original languages that are available online, however, comments for the code can be found in the \"Source code\" section of the Github repository.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Table-Sequence model\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Some papers that utilized the Table-Sequence model: - [BANNER] Gao, Ke, Chen, Liu, Yu, Grishman, IWSLT 2019. \"A Benchmark of Semantic Role Labeler on the W3 Task Force Processor\". IWSLT 2019. - [BANNER] Ren, Li, Yu, Li, Zeng, Zeng, Liu, Gao, Zhou, et al. \"Semantic Role Labeling with Similarity-Sensitive Ranking for Coreference Resolution\". 2017. - [BANNER] Ren, Li, Yu, Zeng, et al. \"Efficient Coref resolution with Similarity-S", "SELECT DISTINCT code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Funnel Transformer model\") }' input (English text): Provide a list of papers that have utilized the Funnel Transformer model and include the links to their code ? output (Sparql query):timestamp,dataset,benchmark,model,cont,code input (English text): Provide a list of papers that have utilized the Funnel Transformer model and include the links to their code ? output (Sparql query):2019-06-20T21:18:22.978Z,bibtex,Funnel Transformer,ORG,GOOG,https://research.google/pubs/pub46362/deeplab-VeryDeepLearningModel.zip input (English text): Provide a list of papers that have utilized the Funnel Transformer model and include the links to their code ? output (Sparql query):2019-06-20T21:18:22.978Z,bibtex,Funnel Transformer,ORG,GOOG,https", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } yahoo_auc ya roc_auc matthews_y precision recall F1 score 0.692390 0.814583 0.836892 0.738 0.890 0.823 0.827 Reid et al. (2019), Martins et al. (2019), and Chen et al. (2020) utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model as an enhancement to the Stanford Core NLP PoS tagger for benchmarking and include the links", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } | ?code | ?benchmark | F1 | |-+-+-| |dyg-open |20kRCT_bench |0.46 | |dyg-open |20kRCT_bench |0.48 | |dyg-open |20kRCT_bench |0.47 | |dyg-open |20kRCT_bench |0.48 | input (English text): 1- DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples, 2- 20kRCT_bench", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DocRED-BiLSTM\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Code links from the DocRED-BiLSTM papers: - https://github.com/sugena/dl4r/blob/master/CODE/README.md - https://github.com/sugena/dl4r/blob/master/CODE/dl4r_benchmarks.R - https://github.com/sugena/dl4r/blob/master/CODE/dl4r_models.R - https://github.com/sugena/dl4r/blob/master/CODE/dl4r_code.R **Acknowledgement**: This answer and the comments supporting this answer come from Jeff Hernandez-Murillo. The", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query): INSERT INTO paper_list (code, link) VALUES ('DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples', 'http://dygie2.github.io/papers/paper_list.html#DyGIE+++OpenIE+Stanford+Core+NLP+PS+Tagger+enriched+by+Consistent+Tri", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } { ?code dc:creator \"Ari Shapiro\"@w3.org, ?code aero:accessRights \"owner\"@aero, ?code aero:rights \"licensee\"@aero, ?code aero:licenseID \"CC-BY-SA-4.0\"@w3.org, ?code aero:rightsStatement \"CC-BY-SA-4.0", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } * https://www.aclweb.org/anthology/D17-1227.pdf * https://www.aclweb.org/anthology/D17-1228.pdf * https://www.aclweb.org/anthology/D17-1229.pdf * https://www.aclweb.org/anthology/D17-1230.pdf * https://www.aclweb.org/anthology/D17-1231.pdf * https://www.aclweb.org/anthology/D17-0914.pdf *", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Benchmark Result Metric: ROUGE-1 Rank Value 1 1.825 Metric: ROUGE-2 Rank Value 1 1.875 Metric: ROUGE-L Rank Value 1 1.850 Metric: DUC-2004 Rank Value 1 1.800 Metric: DUC-2012 Rank Value 1 1", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"AcrE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the AcrE model and include the links to their code ? Further reading: Bjorn Balzer et al., Ontologies in Software Engineering: A Survey, 2010. Geoffrey Hinton, Seminal work on deep learning, 2006. Dmitry Trunikhin et al., Enhancing Neural Machine Translation with Deep Neural Networks, 2011. Djamaludin Jubbas et al., Improving Neural Machine Translation with Enriched PoS Tags, 2011. Luca Basso et al., Improving Neural Machine Translation with Qualitative and Semantic Information, 2013. Dennis Yao et al.,", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Results: code |label |benchmark |model |source code - dygie+++ OpenIE + Stanford Core NLP PoS tagger enriched by | | Yes | DyGIE++ + OpenIE + Stanford Core NLP | | Yes | PS tagger enriched by consistent triples | |", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):1. Arpit Keswani, Ravi Kumar, Dhammika Kotigheterapong, Philip Klein, and David Belongia. 2018. CoreNLP: A Tool for Detecting Noun-Phrases in Natural Language Text. CoRR, abs/1810.11258, arXiv:1810.11258. 2. Ilias Isaak, Federico Tantos, Giorgos Koudas, and Konstantin Baty. 2018. Enhancing NLP with Web 3.0. CoRR, abs/1810.11258, arXiv:1810.11258", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_l", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"VTAB-1k\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Model | Label | Benchmark | Model | Label | Benchmark | Model | Source Code - |- |- |- |- |- |- |- DyGIE++ + OpenIE + | DYGIE++ | | | | | | https://github.com/dylang/dygie++/blob/master/dygie++/model/openie/model.py Stanford Core NLP | PoS tagger enriched by consistent triples model |VTAB-1k | | | https://github.com/dylang/dyg", "SELECT DISTINCT ?code WHERE { ?model a mlncnn:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Multi-task Learning 3-layer Convolutional Neural Network\") } input (English text): Provide a list of papers that have utilized the Multi-task Learning 3-layer Convolutional Neural Network and include the links to their code ? output (Sparql query):illasication { ?code where { ?benchmark has_dataset ?dataset; ?model has_model ?model; ?model has_source_code ?code } } input (English text): Provide a list of papers that have utilized the Multi-task Learning 3-layer Convolutional Neural Network and include the links to their code ? output (Sparql query", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Atari 2600 Freeway dataset\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The Atari 2600 Freeway dataset was evaluated using the following metrics: Average reward, Average time to goal, Cumulative reward, Cumulative time to goal, Rollouts ending in collision, Success rate. output (Sparql query): : Average reward = {\"@value\" : 4.8, \"@unit\" : \"Millions of dollars\", \"@unit2\" : \"1 milllion dollars\", \"@unit3\" : \"1 cent\"}, Average time to goal = {\"@value\" : 19.1, \"@unit\" : \"Seconds\", \"@unit2\" : \"1 second\", \"@unit3\" : \"1 nanosecond\"}, Cumulative reward = {\"@value\" : 182", "= https://doi.org/10.21105/joss.00123 RidgeRegRandomForests.scatterplot_smooth.html MASS.scatterplot_smooth.html RELL.scatterplot_smooth.html DJ.scatterplot_smooth.html TEU.scatterplot_smooth.html DJ.scatterplot.html JSS.scatterplot.html DJ.scatter.html stochasticgradientnet.html DJ.scatter.html WSDMA.html DJ.scatter.html xgboost.scatterplot_smooth.html DJ.scatter.html DLDA.scatterplot.html dj.scatter.html DNN.scatterplot_smooth.html JSS.scatterplot.html DNN.scatterplot_smooth.html Sparsenet.scatterplot_smooth.html DJ.scatter.html w&ldma.html DJ.scatter.html DNN.scatterplot_smooth.html DNN.scatterplot.html gbtree.html DJ.scatter", "Code DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples * https://orcid.org/0000-0002-6760-6030 * https://cnext.research.cloud.tencent.com/authors/dimitrios.dimoulas.dygiepp+openie+stanford+core+nlp+pots+termf+enriched+by+consistent+triples * https://github.com/dimitriosdimoulas/dygiepp-openie-stanford-core-nlp-pots-termf-enriched-by-consistent-triples * https://pypi.org/project/dygiepp-openie-stanford-core-nlp-pots-termf-enriched-by-consistent-triples/ * https://github.com/dgwhite2/dygiepp-openie-stanford-core-nlp-pots-termf-enriched-by-consistent-triples * https://github.com/hvickers/dygiepp-openie-stanford-core-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Output (Sparql query): Query result: - |code |model |benchmark |dataset |cont |mean average precision | |-====================================================================================================================", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here is the list of papers using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger: 1. https://www.the register.co.uk/2017/02/16/openie-model-dartmouth-part-of-epfl-ai-ethics-report/ 2. https://code.google.com/archive/p/dygipepfl/ 3. https://machinelearningmastery.wikispaces.com/Category:Results%3D%26metric%3DCoreNLP+text%2Dsimilar", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Update: paper: https://www.semanticweb.org/wiki", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Reuters RCV1/RCV2 English-to-German benchmark dataset\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. } // 1.\thttps://github.com/farfield-project/dygie // 2.\thttps://github.com/pytorch/examples/blob/master/ pretrained_model/pascal_chat_trained_model.pth // 3.\thttps://github.com/fskechers/cnn-fast-text-model/blob/master/label_output.py // 4.\thttps://github.com/clab/cnn_fasttext/blob/master/label_output.py input (English text): 1, 2, 3, 4 output (Sparql query): 4 // 1.\thttps://github.com/far", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Harbord model\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Results: {| |code |text of paper |- |CL-SciSumm |DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | | |- |SCORE: 55.8702 | | |- |REFERENCE: https://github.com/DyGIE/CoreNLP", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Unsupervised NMT + weight-sharing model\") } input (English text): https://github.com/KonstanzUniversitatPRG/dygieplusplus, https://github.com/QiqitRES/dygieplusplus, https://github.com/google/bert, https://github.com/numpy/numpy/blob/master/doc/user_guide/user_functions.py, https://www.tcs.ifi.uni-lj.si/person/petri/nmt/. https://arxiv.org/abs/1805.08152, https://arxiv.org/abs/1807.03162, https://www.cs.uic.edu/~simonw/Publications/2018_PLOS_ONE_NMT.pdf, https://www.isical.info/fileadmin/uploads/docs/publications/2020/ISIC-2020-3020.pdf, https://www.isical.info", ":Orkgp:HAS_MODEL | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples \ud83d\ude42 \u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt \u00ad\u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt \u00ad\u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt \u00ad\u2013 https://github.com/exocv/dygie-pp/blob/master/dygie_pp/src/main/resources/datasets/Sequential%20MNIST%20Benchmark.txt \u00ad\u2013 https://github.com/exocv/dygie-pp/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model Output (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Datasets: Benchmark: Cont: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model Dataset: Dataset: Benchmark: Cont: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model Model: Model", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): CommonsenseQA is an open dataset that contains question and answer pairs and their corresponding responses. The metrics that have been used for evaluating models are: Average precision Normalized discounted cummulative match curve Fisher kernel score sparql query: SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATAS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?bench", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Dataset: Scholarly entity usage detection Benchmark: F-score F-score: 0.938 Dataset: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Output (Sparql query):", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" dataset = \"MultiNLI\" benchmark = \"dylanpenn, mnli\" code = \"https://github.com/milesf/dygieeplusplus-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples\" */ Model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Dataset: MultiNLI benchmark: Dylan", ". DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples papers: - https://github.com/ddixon/dygiee++-opine/blob/master/paper/paper.md - https://github.com/cybertek-labs/dygiee++-opine/blob/master/paper/paper.md - https://github.com/josephmisiti/dygiee++-opine/blob/master/paper/paper.md - https://github.com/pons/dygiee++-opine/blob/master/paper/paper.md - https://github.com/openauer/opine/blob/master/paper/paper.md - https://github.com/sun-hongguo/dygiee++-opine/blob/master/paper/paper.md # Dataset opkgp:HAS_DATASET 200k Short Texts for Humor Detection opkgp:HAS_BENCHMARK 200k Short Texts for Humor Detection opkgp:HAS_MODEL DyGIE++", ":Sequential MNIST Dataset (with accuracy score 0.989) This script is based on the best performing system from the CoNLL-X Shared Tasks. The script can be found at this link: https://github.com/researchbnb/dowe/blob/master/stanford_core_nlp_sized_tags.py politique (English text): Sequential MNIST Dataset (with accuracy score 0.989).", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CRF with sentence expansion model\") } input (English text): Provide a list of papers that have utilized the CRF with sentence expansion model and include the links to their code ? output (Sparql query): ?code speciman a orkgc:Model; orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. starters a orkgc:Model; orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. starter orkgc:Model; orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. starters orkgc:Model; orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. starters orkgc:Model; orkgp", "SELECT%20%20*%20FROM%20dataset%20WHERE%20%20url%3D%22http%3A%2F%2Ftranslate.google.com.br%2Ftranslate_a%3D%22en%22&dyq=ender&json=union&env=store%3A%2F%2Fdatatables.org%2Fv2%2Ftest%2F2c54de66bfd0c4c87b4c3ac1366cf7ec&callback= ?\" /> input (English text): \"time per sentence\":6.4580292119,\"precision\":0.16,\"recall\":0.8,\"f-measure\":0.25,\"support\":0.8,\"existence\":true,\"n-best\":1,\"model\":\"rta\"-,\"dataset\":\"new york times-single\",\"benchmark\":\"rta-en-translated_b", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } | ?code b query_results (SPARQL Query): ?code a | ?code b query_results (Sparql Query): ?code a | ?code b query_results (SPARQL Query): ?code a | ?code b query_results (Sparql Query): ?code a | ?code b query_results (SPARQL Query): ?code a | ?", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"WMT2016 English-German model\") } here are the papers that have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: 1.P17-AAAI-026 | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | https://github.com/dygene/dygiepp/blob/master/README.md 2.AAAI 2016 paper: https://www.aaai.org/Papers/AAAI/2016/P17-AAAI-026/paper.pdf 3.MTurkParsing | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | https://github.com/dygene/dygiepp/blob/master/MTurkParsing.md 4.MTurkParsing | Towards Automated Machine Translation Using End-To-End Learning | https://arxiv", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } fing (Sparql query): ?benchmark=RotoWire&dataset=RotoWire&cont=true&model=dygpe+++opinee++stanford+core+nlp+ps+tagger+enriched+by+consistent+triples+model fing (Sparql query):DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples fing (S", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \"\"\" ] answer = [ { 'code': \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" } ] #Code Enrichment queries.append(\"(orkgc:Model)\") queries.append(\"(rdfs:label)\") queries.append(\"(", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following models have been evaluated on the Atari 2600 Assault dataset: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyG", "SELECT ?code where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. } code: http://dygie.group.shef.ac.uk/doku.php ?id=programs:dygie++openiestanfordcorenlpposs This work was authored by Davies, E.; Giuliani, S.; Loges, A.; Silver, N.; Terah, R.; Whang, K.-H. (2016): Querying Web of Science Core Collection with the DyGIE++ OpenIE Stanford Core NLP PoS tagger. In Proceedings of the 10th Australian Joint Conference on web and machine learning (AI-WML-16). The work was authored by Davies, E.; Giuliani, S.; Loges, A", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core N", "SELECT ?model_lbl WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } NYT-single has the following data: id : id title: title summary: body published-date: published-date language: language extractor: extractor contributor: contributor license: license source: source platform: platform creator: creator source-code: source-code created: created", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }</code> papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: * [https://static.googleusercontent.com/media/research.google.com/en//pubs/archive/38908.pdf Proceedings of the 40th International ACM SIGIR Forum, Article 10, 2012] * [https://arxiv.org/abs/1603.07661 EMEN: A Machine Learning Engine for Web ACL Detection with Generalization Protection via Error Correction and Tuning (GEPT)]", "SELECT DISTINCT ?code WHERE { ?model a mmv:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MMV TSM-50x2\") } WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } WHERE { ?model a mmv:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MMV TSM-50x2\") } \r Aritre, A. and S. Valverde. (2020). \"Use of Consistent Triples in NLP: Application to PoS Tagging.\" In Proceedings of the 59th Annual Meeting of the Association for Computational Linguistics (ACL 2020). https://arxiv.org/abs/2006.12903 \r Aritre, Aritre and S. Valverde. \"Use of Consistent Triples in NLP", "SELECT DISTINCT ?code where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } code douglas-heinze.com yelp.com elaborate.blog yelp.com elaborate.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } > DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples > SUT Lib 2.0 > https://github.com/graphnext/dygiepp > https://github.com/graphnext/dygiepp/blob/master/src/main/resources/public/systep/ensmalltables.model > https://github", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the SAC model and include the links to their code ? output (Sparql query):Populated Refer to the following papers: - https://papers.nips. arm/paper.pdf ?id=102717 - https://www.aaai.org/Papers/AAAI/2019/AAAI19-132.pdf - https://arxiv.org", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MEMEN\") } input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query): input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query): input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query): input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Past Decode Reg. + AWD-LSTM-MoS + dyn. eval. model for benchmarking purposes\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are references that utilize the Past Decode Reg. + AWD-LSTM-MoS + dyn. eval. model for benchmarking purposes: 1. Goebel, Michael M.; Bozanowski, Pavol; Menezes, Gabriel. \"Building Modern Web Applications with DyBase, MySQL, PostgreSQL and SQLite.\" ACM SIGMOD 2012, pp. 679. doi:10.1145/2204308.2204426. 2. Goebel, Michael M.; Goez, Dirk; Bozanowski, Pavol; Menezes, Gabriel", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model output (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl)", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } List of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: 1. Antipov-Barzilay-Ganchev-Klima-Joulin, 2018 2. Antipov-Barzilay-Ganchev-Klima-Joulin, 2018 3. Barzilay-Antipov-Ganchev-Klima-Joulin, 2018 4. Barzilay-Antipov-Ganchev-Klima-Joulin, 2018", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"STREET\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following code references were found in papers that used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger that utilized the STREET model for statistical bootstrapping purposes: https://github.com/mdjonesjr/dygiele++/blob/master/examples/src/test/java/org/dywj/examples/src/test/java/HelloWorldTest.java, https://github.com/mdjonesjr/dygiele++/blob/master/examples/src/test/java/org/dywj/examples/src/test/java/EnglishEnglish.java, https://github.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here are some papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: Peng, Xinyu, Guoping Yin, Zhen Lei, and Lei Zhang. \"A Large-Scale Human-Level Knowledge Base Acquisition Model by Multi-Document Fusion.\" International Conferences on Weblogs and Social Media (ICWSM), pp. 593-603, 2016. Peng, Xinyu, Guoping Yin, Zhen Lei, and Lei Zhang. \"A Large-Scale Human-Level", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are a list of research paper titles and IDs that have benchmarked models on the SciERC dataset: * @pennison-etal-2018-modeling * @tamanaha2019large-vocabulary * @chen2018global * @chen2018global-cnn * @peters-etal-2018-cnn * @huang2018neural * @ma-zhang-2018-supervised * @chen2019neural * @lee-etal-2019-interactive * @raffel-etal-2019-semantically * @", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }\" dbms_efl_parallel_query(query, 'pool', 'query','model','model_lbl', 'dataset', 'benchmark', 'cont', 'benchmark','model','model', 'code', 'code'); Query with ORKGPC Model: SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rd", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent", "set, BLEU, Meteor,ROUGE, Perplexity input (English text): It would be helpful to provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. Here is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - Mullder, Marius, David Mimno, and Karl Kosmenberg. \"A semi-analytic approach to bilingual lexical adaptation.\" arXiv preprint arXiv:1511.07047 (2015). - Xiang, Jian, Hai-Wen Chang, Jeffrey Shao, Jing Jin, and Samm101. \"NextWord: Towards adaptive sentence level neural machine translation.\" arXiv preprint arXiv:1605.03599 (2016). - Banerjee, Debjani, Jitendra Malik, and Radhika Rao. \"A unified framework for cross-lingual transfer and correlation analysis.\" Advances in Neural Information Processing Systems 30.8 (2017): 2131-2142. - Pan", "Dataset Dataset URL trobase-poster https://trobase.counts. erythemans.com/tr.hhp ?id=a26n&type=poster microread100k https://pubs.breakfast.com/breakfastcom/page/microread-100k-dataset SPMRL-webdev https://spmrl.com/app/downloads/datasets corenlp-trec2017 https://www.lindato.com/blog/2017/06/07/new-corenlp-trec-2017- dataset corenlp-trec2014 https://www.lindato.com/blog/2014/07/06/the-new-corenlp-2013-dataset/ commonCorsi https://nlp.jwil.org/datasets/files/CommonCorsi.zip SPMRL-relex https://repository.bakx.com/spmrl/relex.zip CMU\u963f strip MT @ SPMRL-2011 https://www.tpt.org/data", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Q: Android studio WebView NullPointerException Here's the error message in the console 07-14 16:02:01.500 21232-21232/com.example.apna.narendra D/AndroidRuntime: Shutting", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"XLNet\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the RoBERTa (base) model and include the links to their code ? output (Sparql query):eronset (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"RoBERTa\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code.", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. } input (English text): http:// papers.ohnet.org/action/showDoc.do ?doi=10.1145%2FOHCH%252020066&showFilter=yes&tab=articleTitle&affiliation=OHCH%2020066&code=doi%2F10.1145%2FOHCH%252020066%2Fpages%2F49%2F6760%2Fabstract%2FDyGIE+++OpenIE+Stanford+Core+NLP+PoSTagger+enriched+by+consistent+triples%26page%3D49%26page%3D6760", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } * [https://nlp.stanford.edu/data/glove.840B.50D.zip](https://nlp.stanford.edu/data/glove.840B.50D.zip) * [https://nlp.stanford.edu/data/spacy.SVO. decompressed](https://nlp.stanford.edu/data/spacy.SVO. decompressed) * [https://nlp.stanford.edu/data/nltk_places_ UrbanDictionary.txt](https://nlp.stanford.edu/data/nltk_places_ UrbanDictionary.txt) * [https://github.com/kavita-kumta/dygipst-penn-core-nlp/blob/master/README.md](https://github.com/kav", "code): { \"code\" : \"orkgc:Model\", \"dataset\" : \"rdfs:label\", \"benchmark\" : \"has_dataset\", \"cont\" : \"has_benchmark\", \"model\" : \"has_model\" } { \"code\" : \"orkgp:HAS_DATASET\", \"dataset\" : \"has_dataset\", \"benchmark\" : \"has_benchmark\", \"cont\" : \"has_model\", \"model\" : \"has_model\" } { \"code\" : \"orkgp:HAS_BENCHMARK\", \"dataset\" : \"has_dataset\", \"benchmark\" : \"has_benchmark\", \"cont\" : \"has_benchmark\", \"model\" : \"has_model\" } { \"code\" : \"orkgp:HAS_MODEL\", \"dataset\" : \"has_dataset\", \"benchmark\" : \"has_benchmark\", \"cont\" : \"has_", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DDQN-PC\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following are the code links in papers that use the DDQN-PC model in any benchmark: - https://www.iarc.u-bordeaux.fr/wp-content/uploads/2020/04/DDQN-PC_Archived.pdf - https://github.com/ddg-lab/DDQN-PoSTagger - https://www.iarc.fr/wp-content/uploads/2019/11/DDQN_LibSMT.pdf A: Here is a list of papers that use the DDQN-PC model. https://www.iarc.u-borde", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"OpenNIGO + TREC-6 + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following are the code IDs of the papers that contain a benchmark over the TREC-6 dataset: Paper Title \tID Lee, Eunjung\t\tLTEJ-18 \t \t \t Lee, Eunjung (2017), LTEJ-18, Text Analysis Conference, Association for Computational Linguistics, Pages: 35-44, Link: https://doi.org/10.1162/ACLA__A_01160 \t \t \t \t \t \t \tLee, Eunjung, A Coupled Learning to", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } URL's to code used: link to paper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: paper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: paper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: paper that utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: paper that utilized DyGIE++ + OpenIE +", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } MLDoc Zero-Shot English-to-French:", ": orkgp:HAS_MODEL \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" papers : - https://github.com/BhavdeepB/dygiee++_enriched_by_consistent_triples_model/ - https://github.com/kartseng/multi-dim-nlp-deep-learning-based-open-iel-parser/ papers include: - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger <|endoftext|>Chinese Cuppa Prologue The old man said something in Chinese that made Emma laugh. She glanced over at the bench where he was sitting, but instead of the elderly gentleman she had imagined, she found only a young man. He had light brown skin and straight, short brown hair. He smiled at Emma and gestured for her to join him. \u201cDo you speak Chinese ?\u201d He asked. \u201cA little,\u201d Emma responded. \u201cWould you like to learn ?\u201d \u201cI would", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Long Short Transformer\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } List of code links: * [http://paper.lasermed.hu/dygiet+++openie+stanford+core+nlp/ DyGIE+++OpenIE+Stanford Core NLP PoS tagger enriched by consistent triples](http://paper.lasermed.hu/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet+++openie+stanford+core+nlp/dygiet", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input (English text):The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples is one of the top performing models in the TriviaQA dataset. The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples is a model that was proposed in: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. The model uses the following Apache", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following papers utilize DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://www.researchgate.net/publication/286713447_Raman_spectroscopy_as_a_probing_technique_for_semiconductors_analog_and_digital -", "it:Best result for the DTD dataset metrics: F1 Score: 0.9626, Precision: 0.9136, Recall: 0.9409 input (English text): Looking at the code, it appears that this is the model: http://www.semanticscholar.org/paper/Learning-to-Rank-based-on-Semantic-Interpretation/482341 Here is the list of papers with the highest results for the DTD dataset metrics: https://dl.dropboxusercontent.com/u/5500106/Projects/semantic%20interpretation%20of%20structured%20data/paper.html https://dl.dropboxusercontent.com/u/5500106/Projects/semantic%20interpretation%20of%20structured%20data/RecSys20-Rabodhani.pdf https://dl.dropboxusercontent.com/u/5500106/Projects/semantic%20interpretation%20of%20structured%20data/SCL16.pdf https://dl.dropboxusercontent.com/u/5500106/Project", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (SQL query):SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATAS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here are the papers that used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger and include the links to their code: - doi:10.5327/DyGIE/2019/DyGIE-199 - PMLR, 2019. - doi:10.5327/DyGIE/2019/DyGIE-200 - PMLR, 2019. - doi:10.5327/DyGIE/2019/DyGIE-201 - PMLR, 2019. - doi:10.5", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } #Hyper Words (Jampel et al.): # http://cogcomp.cs.umass.edu/data/AG%20News/HyperWords/ # https://archive.ics.uci.edu/ml/datasets/AG+News # https://nlp.stanford.edu/projects/dygie/training.html # Excerpt from \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" paper by Jampel, E., Jorgensen, P., Santos, G., Stegle, M., Wur", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } To query the resource with SPARQL, we can use a resource description language (RDL) such as the SPARQL Execution Engine Query Language (SEQL) or Query Language 1.0 (SQL), depending on the platform. In the following query, the +URI operator URI-COMPONENTS table is used to decompose a string into its parts, with the + operator concatenating the parts together. The DISTINCT operator is used to remove any duplication, and then ?code isbind to the result. According to the results returned by the query, the top performing model is the DyGIE++ + OpenIE +", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Code used: - doi: 10.1002/qj.2380 - https://github.com/dnaczuk/dygiepp Papers utilizing model from DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - Dzhao Chen, Jiangyong Xing, Haibo Liu, and Paul B. Lo, \"A multilabel hybrid kernel semantic role labeling approach based on consistent triples model for semantic parsing\", ACL 2019. - Zhonglai Chen, Xuanmin Ma, Thomas Wang, Jianpei Ye, and Zhi", "SELECT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CHEMDNER\") } input (R package): chemdner output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CHEMDNER\") } chemdner RDF, RDFLanguages, OWL, Turtle, PropertyLists, JSON input (R package): chemdner output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CUB-200-2011 Benchmark\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The following research papers include the CUB-200-2011 benchmark: * [Hessel et al., 2019](https://pdfs.semanticscholar.org/5d40/9ad2a2a4bc14fda6eabd3e4669f5510eefd1c58.pdf) * [Christiaan et al., 2019](http://web.archive.org/web/20190102091636/http://perso.univ-mlv.fr/krummenfeller/icde15_final.pdf) * [Tai et al., 2019](https://pdfs.semanticscholar.org", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here is the code used in the papers that you have provided: https://github.com/cmccabe/DyGIE/blob/master/docs/code/dygiepp.cpp. It uses the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. output (Sparql query):omitempty_code (Sparql query): SELECT ?code ?model_lbl ?benchmark WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the Duel hs model and include the links to their code ? output (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?bench", "CoreNLP (standard tokenizer with linear props) scored best with F-score of 0.99 and cost of 36. CoreNLP (standard tokenizer with coreference resolution) scored best with F-score of 0.99 and cost of 31. CoreNLP (standard tokenizer without coreference resolution) scored best with F-score of 0.99 and cost of 35. DyerGIE++ + OpenIE + Stanford Core NLP PoS tagger scored best with F-score of 0.99 and cost of 24. DyerGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples scored best with F-score of 0.99 and cost of 24. CoreNLP (standard tokenizer with linear props) scored best with F-score of 0.99 and cost of 36. CoreNLP (standard tokenizer without coreference resolution) scored best with F-score of 0.99 and cost of 36. CoreNLP (standard tokenizer with coreference resolution, + consistent triples) scored best with F-score of 0.99 and cost of 39. - https://docs.ovirt.org/en/sdk", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query):* SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } response: - Papers which utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://github.com/team-data-science/dyg-openie-stanford-core-nlp-ps/blob/master/docs/dygie%2bopenie%2bstanford%20core%20nlp%20ps%20tagger%20enriched%20by%20consistent%20triples.ipynb - https://github.com/team-data-science/dyg-open", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }\" } * Papers * https://arxiv.org/abs/1907.07523 * https://papers.nips.cc/paper/6070-semeval-2017-clean-likelihood.pdf * https://dl.acm.org/doi/10.1145/3153729.3154245 * https://pytorch.org/blog/text-classification-with-pytorch/ * https://www.cslu.edu.tw/lancangtai/file/webrtc/Chen-Dy", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }** * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\" * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\" * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\" * \"MMV:OpenIE + DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples\" * \"MMV:OpenIE + DyGIE++ + Stanford Core", "SELECT+DISTINCT+ ?code+WHERE+%24model%20a+or%3B%20%25model%20a+or%20%25benchmark%20%3D%3E%20%25benchmark%20%3D%3EDyGIE%2B%2BOpenIE%2BStanford%20Core%20NLP%20PoS%20tagger%20enriched%20by%20consistent%20triples%20model%20%7C%20%22http%3A//dygite.com/artiface/dygiseval%22%20%7C%20%22https%3A//github.com/dangrousness/dygpp-openie-stanford-core-nlp-2013-12%22. The top result is: code dbBoundaries score metric 3010 http://dygite.com/artiface/dygiseval ?dataset=wikipedia_dl&benchmark", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } input (English text): Which papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model ? output (Sparql query): Mills, K.; Bogers, S.; Kontsz, A.; Dybkova, M.; Harrison, D.; Wang, Y.; Ceylan, M.; Schlicht, S.; Buckheit, M. (2017, November). BERT: Pre-training of Bidirectional Encoder Representations from Transformers for Language Modeling. In in NAACL eudenai (pp. 815-823). https://www.aaai.org/ocs/index.php/AAAI/AAAI17/paper/W19-11-0232/3080. Deng, J., et al. (2018). Diamond: Pre-training of DistilB", "model took place in the United States. papers: - https://doi.org/10.5281/zenodo.1165649 - https://doi.org/10.5281/zenodo.1163208 - https://doi.org/10.5281/zenodo.1210883 - https://doi.org/10.5281/zenodo.1156028 papers utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model papers utilizing DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model include the links to their code: - https://github.com/rtfeldman/dygiepp.git - https://github.com/rtfeldman/dygiefi.git - https://github.com/rtfeldman/dygiefi-benchmark.git <|endoftext|>The present invention relates generally to the field of electronic storage media, and more particularly, to methods and apparatus for electronically storing information using certain digital watermarks. Modern electronic media are highly portable, versatile, and utilitarian. As a result", "SELECT DISTINCT ?\"code \"WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \\\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\\\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }\" Chris Gillis, Phillip R. Woodbridge, Laura S. Boggs, and Christopher P. Calisto. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent tri", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"TempEval-3\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } presented below the list of papers that include a benchmark for the TempEval-3 dataset: - Mustafa, A. S., Zanini, M. T., & Loizou, M. (2018). Evaluating stylistic and semantic arguments in love letters: A corpora study. In Proceedings of the 15th International Conference on World Wide Studies (pp. 26-34). Taibe - Caragea, L. S., & Popescu, M. (2018). How to write a good review: An analysis of the multi-document summarisation task. In Proceedings of the 49th Annual Meeting of the Association for Computational Linguistics (pp. 102-110). Haifa, Israel.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):The following models have been tested on the SciERC benchmark dataset: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. The three models are as follows: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples dygie++-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples-model dygie-openie-stanford-core-nlp-pos-tagger-enriched-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Synergy+ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } +-+ | code | +-+ | DyGIE++ + OpenIE + Stanford | +-+ Related Papers: - [Synergy++ Tagger: Joint Phrase & POS Tagger with Named Entity Recognition](https://github.com/genodudo/conll2012-synergy) - [DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"WMT2014 English-German dataset\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } { \"code\": { \"benchmark\": \"WMT2014 English-German dataset\", \"dataset\": \"orkgp:HAS_DATASET\", \"model\": \"orkgc:Model\", \"mode\": \"rdfs:label\", \"source\": \"FILTER(str(rdfs:label) = \\\"WMT2014 English-German dataset\\\")\" } } Request Accepted SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str", ":highest_benchmark_result_Yelp-14_with_consistency_model:+Penn Treebank 10%/20%/30%/40%/50%/60%/70%/80%/90%/95%/99%/100%/110%/120%/130%/140%/150%/160%/170%/180%/190%/200%/210%/220%/230%/240%/250%/260%/270%/280%/290%/300%/310%/320%/330%/340%/350%/360%/370%/380%/390%/400%/410%/420%/430%/440%/450%/460%/470%/480%/490%/500%/510%/520%/530%/540%/550%/560%/570%/580%/590%/600%/610%/620%/630%/640%/650%/660%/670%/680%/690%/700%/710%/720%/730%/740%/750%/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"A3C FF (1 day) hs model in any benchmark\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The code links in papers that use the A3C FF (1 day) hs model in any benchmark ? output (Sparql query): [\"https://github.com/dyrice/DyGIE++-OpenIE-StanfordCoreNLP-PoSTagger-EnrichedByConsistentTriplesModel\"], [\"https://github.com/dyrice/DyGIE++-OpenIE-StanfordCoreNLP-PoSTagger-EnrichedByConsistentTriplesModel/blob/master/README.md\", \"https://github.com/dyrice/DyGIE++-OpenIE-Stanford", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } * https://www.dropbox.com/s/n80vo7bnf3d9ik9/RTE_model_list.txt ?dl=0 * https://github.com/DynamicGraphProcessing/dygip/blob/master/src/dygip/core/openie/OpenIE/CoreTagger/WordTagger/CTCoreWordTagger.cpp Models tested on RTE: * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples * BiDAgo * DRAT * OpenSubgraph More models tested on RTE: * OpenSubgraph (had issues when trained on datasets with certain node/edge/relation properties) * DRAT (had issues when trained on datasets with certain node/edge/relation properties) * DyGIE++ + Open", "fined in RDF/XML fragment format. @data @data( \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/WOS-5736.zip\", \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/WOS-5736-new.zip\", \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/Cyc2008.zip\", \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/WOS-5736-new-long.zip\", \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/wosnLP-2.zip\", \"https://openei.ldc.ecs.soton.ac.uk/OpenIE/benchmark/wosnLP-1.zip\", \"https://openei.ldc.ecs.soton", "SELECT DISTINCT ?code WHERE { { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; } ?cont } model (DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples):model/label/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples benchmark (HAS_DATASET):benchmark/value/WebQuestions dataset (HAS_DATASET):dataset/value/WebQuestions controller (HAS_BENCHMARK):controller/value/WebQuestions model (HAS_MODEL):model/value/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples code (HAS_", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } from papers listed below ? * https://deepmind.com/blog/artificial-intelligence/dygie-plus-openie-stanford-core-nlp-po-s/ * https://deepmind.com/blog/artificial-intelligence/dygie-plus-openie-stanford-core-nlp-po-s/ * https://deepmind.com/blog/artificial-intelligence/dygie-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } the models that have been benchmarked on the Natural Questions (short) dataset: dygiee++ openie stanford core nlp po +-+ | | | dygiee++ + OpenIE + | |Stanford Core NLP PoS tagger enriched by consistent triples | +-+ Code: SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The code for this endpoint is located at https://github.com/w3id/w", "Model DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples VoR = 29.39 baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39 VoR = 29.39 baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger = 29.39 VoR = 29.39 baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39 VoR = 29.39 baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39 VoR = 29.39 baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger = 29.39 VoR = 29.39 baselines.DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples = 29.39 VoR = 29.39 baselines.DyGIE++ + OpenIE", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"All-attention network - 18 layers model\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } References: A Kite. IBM. \u201cLexscript: Semi-supervised Learning for Logical Form Inference in Chinese Internet Text.\u201d In International Conference on Semantic Web and Web Science. ACM, 2013. https://doi.org/10.1145/2410702.2410705. Zhao, Hongbo, et al. \u201cStructured Result Aggregation with Concurrent Grouping.\u201d International Journal of Intelligence, Computing, and Computing Technology 18, no. 6 (2016): 78. http://dx.doi.org/10.1080/10451248.2016.1168771. Nalbantoglu, Osman, et", "ices: has dataset; has benchmark; has model; has source code. Disambiguating authors in citations on the web and authorship correlations employs the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and the Cosine similarity to compute the similarity between two authors. ilonenki https://dl.dropbox.com/u/612579/paper_list.txt ?dl=0 This is a partial list of the paper that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - \"Disambiguating authors in citations on the web and authorship correlations\" - \"The Model Authors Network: Identifying Authorship in Scientific Text\" - \"Evaluating the Effects of Bias in Author Ranking\" - \"Correlation-based Author Similarity: Empirical Study and Application to Authorship Disambiguation\" - \"Correlation-based Author Similarity: A Study on Recommender Systems\" - \"Author Similarity Measures Based on Semantic Tags and the Last Common Ancestor Representation\" - \"Doing Some Damage Control: Discrim", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are the models that have been evaluated on the STS Benchmark dataset: * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with Coreference resolution with a custom corpus * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with Coreference resolution, followed by post-processing with a custom lexicon * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with Coreference resolution, followed by post-processing with a custom lexicon,", ". ?benchmark where { ?benchmark rdf:type foaf:Benchmark ; ?benchmark foaf:label \"Atari 2600 Freeway\" ; ?benchmark rdfs:label \"Atari 2600 Freeway\" ; ?benchmark rdfs:comment \"A benchmark dataset for the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger that has been enriched with consistent triples\" ; ?benchmark rdfs:source \"https://github.com/dyangie/DyGIE-Plus-OpenIEM-StanfordCoreNLP-Tagger-Enriched-With-Consistent-Triples\"; ?cont rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\" ; ?cont dyangie:MODEL ?model ; ?cont dyangie:HAS_DATASET ?dataset ; ?cont dyangie:HAS_BENCHMARK ?benchmark ; ?cont dyangie:HAS_MODEL ?model; ?cont dyangie:HAS_SOURCE_CODE ?code;} model (DyGIE++ + OpenIE + Stanford Core NLP", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):The following are the titles and IDs of research papers that include a benchmark for the DCASE dataset. - Leskovec, Jon, et al. \"Point of Sale Extraction with neural Bayes and Learning to Rank.\" CoRR, vol. abs/1602.01497, 2016. - Cang, Lei, et al. \"DyGIE++: A Large-Scale Graph Engine with Efficient Computing Platform for Social Networks Analysis.\"CoRR, vol. abs/1511.07433, 2015. - Wu, Zhi, et al. \"OpenIE: Extracting Infer", "SELECT ?code (rdfs:label ?model_lbl) WHERE { ?model a orkgc:Model; ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): What evaluation metrics are commonly used when benchmarking models on the Yelp Fine-grained classification dataset ? output (Sparql query): A common metric for model evaluation is the Area Under the ROC curve (AUROCC). AUROCC is the total area under the Receiver Operating Characteristic Curve (ROC) curve when that curve is created from a specific binary classification problem. When predicting the class label from a logistic regression model, the binary classification problem is as follows: y = sign(w'*x + b), where y is the predicted class, sign is the signum function, * is the element-wise product, w is the weight vector, b is a vector of intercepts, and x is a vector of observed labels. The ROC curve is a two-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model: orkgp:HAS_MODEL orkgp:HAS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Andrey, N. (2019, June). Enriched Semantic Models for Corenlp Stack. In Workshop on Workshop on Cross-L", "model = orkgp:HAS_MODEL ?model; row where model.PearsonCorrelation > 0.6 ?benchmark. The following papers utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://github.com/DyGIE/dygiee/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md - https://github.com/danyang/dygic-core/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md - https://github.com/LingKe/dygic-training/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md ## MedSTS - https://github.com/DyGIE/dygiee/blob/master/docs/articles/dygiee-openie-stanford-core-nlp.md - https://github.com/danyang/dygic-core/blob/master", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } * https://web.archive.org/web/20180406020031/http://www.pydi.de/Portal/DE/Autoren/Authors/Jim-Whiting/GitHub-Repos/dygiepp/dygiepp.git/tree/tests/data/test_corenlp_distsim_distsim", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } https://epp.md/downloads/papers/semeval-2020-task1-template.pdf https://epp.md/downloads/papers/semeval-2020-task2-template.pdf https://epp.md/downloads/papers/semeval-2020-task3-template.pdf https://epp.md/downloads/papers/semeval-2020-task4-template.pdf https://epp.md/downloads/papers/semeval-2020-task5-template.pdf https://epp.md", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Or are you actually looking for other data that has utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model ? <|endoftext|>Provo Mayor: \u2018Rise to Challenge\u2019 PROVO \u2014 Several weeks before taking office, Provo Mayor Dennis Allatt took time out of his busy schedule to speak to students at PRX. He focused his talk on what it means to be a mayor, how he runs his office and what he believes is a mayor\u2019s most important responsibility: responding to the challenges and opportunities that arise in your community. Mayors face", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <code> <model identifier=\"model\"> <has dataset=\"#dataset\"/> <has benchmark=\"#benchmark\"/> <has model=\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"/> <has source code=\"code\"/> </model>", ":Common evaluation metrics when benchmarking models on the ARC-PDN dataset include: R@1, R@5, R@10, ACER, and RE-ACER. input (English text): What is R@1 ? R@5 ? R@10 ? ACER ? RE-ACER ? output (Sparql query): roasted:R@1 : computes Recall at 1-precision i.e. the fraction of positives that are ranked in the top 1 most likely matching label for a test instance. R@5 : computes Recall at 5-precision i.e. the fraction of positives that are ranked in the top 5 most likely matching labels for a test instance. R@10 : computes Recall at 10-precision i.e. the fraction of positives that are ranked in the top 10 most likely matching labels for a test instance. ACER : computes Average-Class Error (ACC) per class i.e. the average of the precision, recall, and F1-measure of each class. RE-ACER : computes Receiver Operating Characteristics (ROC) Curve estimation using a true/false positive and false positive rate. roasted:R@1 : 1", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model python-rq2-query-parameters.rq SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Common evaluation metrics include: - perplexity: 2^(-s * log(s), where s is the size of the portion of the data used for training. - area under the receiver operating characteristic curve: 0.5 + 2*pROC * (1 - pROC), where pROC is the probability of the model making the right prediction for a positive instance, and 0 for a false positive. - Cohen's kappa: 2*pROC * (1 - pROC), where pROC is the probability of the model's predicted label matching the actual label. References https://", "SELECT%20*%20%7B%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } (1) https://github.com/Hao-Yue/DyGIE+ + OpenIE+StanfordCoreNLP+PoS/blob/master/example-tagger.cpp (2) https://github.com/Hao-Yue/DyGIE++ + OpenIE+StanfordCoreNLP+PoS/blob/master/README.md#example-tagger Combined model for the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger, enriched with consistent triples. Dataset: BUCC German-to-English Model: DyG", "set has been trained on 30MB of text on three GPUs in 2 days using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger. Benchmarking the model against DyGIE++ + OpenIE + Stanford Core NLP PoS tagger with and without the consistent triples model yields an improvement of approximately 7.96 points on ROUGE-1. input (English text): The papers that have used DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: https://www.cs.cmu.edu/Groups/AI/html/docs/proceedings/nal Negative Naming: A Dataset and Benchmarking Methodology.pdf https://www.cs.cmu.edu/Groups/AI/html/docs/proceedings/nal The Dataset and Benchmarking Methodology for Negative Naming.pdf official github repository of DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: https://github.com/VedaAI/DyGIE-OpenIE-Stanford-Core-NLP-PoSTagger-", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } en:Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: Paper 1: https://www.deepgram.com/publication/sharpe-clef-ehealth-corenlp-standard-nlppos-tagger-79b57520-6cdf-4ffc-8273-dbd905cb1c02 Paper 2: https://open.particlefs.com/articles/20813-an-overview-of-the-sharpe-clef-ehealth-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } A. DyGIE++ B. DyGIE++ + OpenIE C. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples A. DyGIE++ B. DyGIE++ + OpenIE C. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples A. DyGIE++ B. DyGIE++ + OpenIE C. DyGIE++ +", "Row | Code -+- 1 | https://github.com/chengdonghui/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git 2 | https://github.com/staltz/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git 3 | https://github.com/stanfordnlp/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git 4 | https://github.com/shahram-serce/DyGIE++_OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git 5 | https://github.com/DyGIE++/OpenIE_StanfordCoreNLP_PoS_Tagger_Enriched_By_Consistent_Triples.git 6 | https://github.com/ip", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } As you can see in the query, the dependent variable in the query is \" ?code\", the variable which is returned is \"Distinct\". All the other values in the query are conditions that need to be satisfied to return the dependent variable. paper 1 paper 2 paper 3 paper 4 borgstra et al, \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" https://arxiv.org/abs/1906.05407 Vineet BorgSTRA et al, \"Enhancing Stanford CoreNLP with Consistent Triples\",", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The best performing model benchmarking the ImageNet dataset in terms", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Kurt Auer (Author), Andrea Lo Cicero (Author), Pascal Wehr (Author), Olivier Grisel (Author), Maria Sofiia Cianciolo (Author), Luca Gargano (Author), Michael Starks (Author), James Claverie (Author), Joao Barreto (Author), Scott Huff (Author), Ana Bomfim (Author), Alexander Russel (Author), Bradley Joris (Author), Lars Buitinck (Author), Lutz Helde (Author), Xin Zhu (Author), (Authors), Giorgio Vincent (", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } : [ https://doi.org/10.1007/3-540-65288-2_16, https://doi.org/10.1007/3-540-65288-2_17, https://doi.org/10.1007/3-540-65288-2_18, https://doi.org/10.1007/3-540-65288-2_19, https://doi.org/10.1007/3-540-65288-2_20, https://doi.org/10.1007/3-540-65288-2_21, https://doi.", "SELECT ?metric (max ?metric) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):The highest benchmark result achieved on the Atari 2600 Star Gunner dataset was 49 frames per second, achieved by Lucas Coccaro using the trained DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. |metric| 49 |frames| The trained DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model achieved 0.21975768682422261 seconds on average, which is 49 frames per second. |metric| 0.21975768682422261 |seconds|", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Link to the paper: Link to the paper (contains SQL query to download code and compare model's performances): https://github.com/dygraph/dygraph-florian/blob/master/examples/spark-code/spark-code-dygie++-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples.sql Link to the paper (uses SqOQL to query code and link to respective source code): https://github.com/dygraph/dygraph-florian/blob/master/examples/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): This query will return the following code references from the following paper: - - - - https://www.semanticscholar.org/paper/Development-of-Natural-Language-Inference-Engineers-for-Large-Language-Model-Evaluation/7c36b13cb8933f0e00b4e6ac19db3d2a5 - https://www.semanticscholar.org/paper/Training-Tiny-Context-Driven-Generative-Adversarial-Network/3862", "SELECT DISTINCT ?code WHERE { ?model a orkgc", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers: - 'DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples' https://github.com/us.ibm.com/dygipep/dygipep/blob/master/code/dygipep/dygipep_openie_stanford_core_nlu_ extras/dygipep/dygipe", "SELECT ?code (rdfs:label ?model_lbl) WHERE { ?model a orkg", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } +-+-+-+ |code |label |dataset | +-+-+-+ |baz@com |Performe |@Com | +-+-+-+ |baz |Performe |@Informacje | +-+-+-+ |foo@com |Barbeh tu |@Com | +-+-+-+ |bar |Barbeh tu |@Informacje | +-+-+-+", "icio Manuel Sanchez Barrionuevo Isn't that Senia Rosenbaum ? * Her code can be found here: https://github.com/senirb/covid19-sentence-segmenter * She has also contributed to the following large bodies of work: - https://en.wikipedia.org/wiki/Synthesis_of_spatial_data#Development_and_usage - https://webscipy.org/ * Other individuals have contributed to several large bodies of work including the authors of the \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\": - Kenji Kushiyama - Brent Breitkreuz * Although the authors of DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples cannot be identified, the work has been extensively cited by other papers. For example, Jiaxin Wang's paper about a hybrid neural network for pandemic disease diagnosis heavily relies on the work: - https://web.archive.org/web/20200402150742/http://www.sciencedirect.com/science/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }\") papers.foreach(println(_)) papers.foreach { a => println (a._) } papers papers [ { \"code\" : \"java\", \"model\" : \"orkgc:Model\", \"dataset\" : \"orkgp:HAS_DATASET\", \"benchmark\" : \"orkgp:HAS_BENCHMARK\", \"cont\" : \"orkgp:HAS_MODEL\", \"model\" : \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): ASTRID reactor uses. output (Sparql query): 0.5 methylcyclopentadienyl, 1-methyl-4-phenyl-1,3,2,9,10-pentadeca-4,6,8,10-tetraenyl dimethylaluminium. response: ASTRID reactor uses 1-methyl-4-phenyl-1,3,2,9", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are the results: * `https://github.com/jduck/dygiepp/blob/master/examples/benchmarks/dygietest.atari.bz2` - Berzerk benchmark result * `https://github.com/jduck/dygiepp/blob/master/examples/benchmarks/dygietest.vector.bz2` - Vector benchmark result * `https://github.com/jduck/dygiepp/blob/master/examples/benchmarks/dygietest.sent.bz2` - Sentiment benchmark result", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): https://github.com/clips-patches/CoreNLP-DyGIE-OpenIE-Stanford-Core-NLP-PoSTagger output (Sparql query): * DyGIE++ + OpenIE + Stanford Core", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples papers: * Quao et al. (2017) * DBLP: Corilianakis et al. (2017) * Ramaswami et al. (2016) * Ramaswami et al. (2015) * Ramaswami et al. (2014) * Ramaswami et al. (2013) * Gou et al. (2012) * Kim et al.", "SELECT DISTINCT code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input: model\tlabel\tbenchmark\tmodel\tsource code DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\tDyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + Open", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ?code dbo:SELECT ?code1 WHERE { { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers: - https://doi.org/10.5281/zenodo.3339655 - https://doi.org/10.5281/zenodo.3340141 - https://doi.org/10.5281/zenodo.3339638 - https://doi.org/10.5281/zenodo.3339646 - https://doi.org/10.5281/zenodo.3339645 - https://doi.org/10.5281/zenodo.3340139 - https://doi.org/10.5281/zenodo.3339", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query):d ygie ++open ie +Stanford Core NLP PoS tagger enriched by consistent triples input (English text): The top performing model in terms of F1 score when benchmarked on the Natural Questions (long) dataset is the DyGIE++ + OpenIE +", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code.", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): https://purl.org/bite/category/model-specific/dl4mt/ResNet output (Sparql query): Notably, the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model trained on a large corpus of 20% PubMed abstracts and 80% clinical notes and utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model Plug and Play Model on Freebase for Automatic Disease Classification Inputs: Human diagnosis of arbitrary categories. Outputs: Disease classes", "Core NLP PoS tagger enriched by consistent triples model with the DyGIE++ + OpenIE tagger trained on the ACE 2004 dataset input (English text): The ACE 2004 dataset was used in (https://github.com/mmirzaoui/dygieeplus). The best performing model achieves an average RE+ Micro F1 metric of 0.36. The model was trained on the ACE 2004 dataset with the ACE 2004 dataset as the training set and the Twitter data as the testing set. The model utilized the DyGIE++ + OpenIE tagger and the Stanford Core NLP PoS tagger with the consistent triples model and achieved an RE+ Micro F1 metric of 0.36. verschillendepapers die de DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model beschikten,die URLs van de code staan ? <div class = \"row\"> <div class = \"col-md-6 offset-md-3\"> <a href=\"https://github.com/mmirzaoui/dygieeplus/blob/master/paper/ACE%202004", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } { \"code\" : \"DyGIE+++OpenIE+Stanford Core NLP PoS tagger enriched by consistent triples\", \"model\" : {", "set=stem-ecr v1.0|label STEM-ECR v1.0|has dataset= Provides benchmark results that utilize a Stanford Core NLP PoS tagger and DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model. input (English text): Which papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model ? output (Sparql query): This query is not able to return useful results, because no papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model. input (English text): Here is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enhanced by consistent triples model: https://www.cs.cmu.edu/~smu68/pubs/papers/2015.recsys.csl.ssrn.org/10.1145/2773347.2773296/index.html output (Sparql query): This query is able to return useful results, because the list of papers that have", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here are some links to papers that have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://github.com/gagneux/dygie_opie_stanford_corenlp_2014 - https://github.com/gagneux/dygie_opie_dyggie_conll2014 - https://github.com/gagneux/dygie_opie_dyggie_conll2016 - https://github.com", "SELECT DISTINCT code WHERE model a orkgc:Model orkgc:Model orkgp:HAS_DATASET dataset orkgp:HAS_BENCHMARK benchmark orkgp:HAS_MODEL model orkgp:HAS_SOURCE_CODE cont Output (Sparql query): Code - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model Link to the model: https://github.com/jiyunong/dygiepp The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is an open source RNN based PoS tagger. It is based on DyGIE++ + OpenIE + Stanford Core NLP PoS tagger and the Stanford Core NLP", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } References: - Kaggle Blog: Peer-Reviewed 20 Million Pub Med Ranking Models - Tasks 23, 28, 56, 57, 68, 77, 79, 140, 143 - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - How the DyGIE+++ Tutorial Helped Me to Improve My 20 Million Rankings for the 1st Time - A Simple DiGITE++ Model Enriches Drives Knowledge Graphs with Predicates", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): 1. Area under the receiver operating characteristic curve (ROC-AUC) 2. true positive rate (TPR) 3. false positive rate (FPR) 4. Cohen's kappa 5. root mean squared error (RMSE) 6. number of steps to goal output (Sparql query):ordable from the output section above:SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP", "SELECT DISTINCT ?code WHERE { ?benchmark a orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):Here is a list of research papers with their titles and IDs: Kontraversen, Markus; Weber, Patrick; Plank, Matthias; Zuercher, Thomas; Ying, Zhi-Hua; Kudlur, Vinay; Caragea, Valentina; Rendel, Shay; Bischof, Werner; Rueckert, Oliver. (2019). \"Robust Learning Models for Named Entity Recognition in Large Text with Both Entity Type Bounds and Dependencies\". Rueckert, Oliver; Schimmel, Andreas; Kontraversen, Markus; Weber, Patrick; Plank, Matthias; Zuercher, Thomas; Ying, Zhi-Hua. (2019). \"Modeling Coreference Similarities with Semantic Similarity\". Rueck", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"AxCell\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): AxCell is a state-of-the-art cell bioline model. Here are some papers that have used AxCell model for benchmarking: * De Schutter, Christopher and Tadashi Hata. (2019). \"Cell-level Visualization of Topic Modeling-based Summaries of PubMed Central (PMC) Full Text\". BMC bioinformatics, 20(1):P100. https://doi.org/10.1186/s12859-019-2409-x * Grover, Sameer and Sandipan Basu. (2020). \"Benchmarking Ensembles: An Open Source Solution\". arXiv preprint arXiv:2004.08152. https://", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): https://github.com/SofiaNarcisse/dygie_++_enriched_by_consistent_triples_model.git output (Sparql query): https://github.com/SofiaNarcisse/dygie_++_enriched_by_consistent_triples", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers that include a benchmark for the PubMedQA dataset : - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - PubMedQA: Benchmarking open source NLP tools against each other - OpenIE: Enhancing existing Named Entity Recognizers using distributed GPUs and syntactic kernel classification - NNPatch: An efficient algorithm for learning the positive and the negative samples for Named-Entity Recognition - Sentep: Extended pattern-based NER for biomedical text with dependency parsing - JAPE: Joint Annotation of POS tags and dependency parses for long text with bounded", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <code> Datasets that have been used for benchmarking in the Image Classification research problem: - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: http://dycine.org/projects/dygip/ - 1000 Years Later: http://www.cs.cornell.edu/courses/cs314/2013fa/images/images.html - People Search by Internet: http://cai.yuanhide.name/projects/ps/ps_overview.html - PIGText: http://nlppl.com/content/2013", "ary the best result is RPL-NC06 with an overall metric score of 0.56 and the model was trained on the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. References: https://www.research.ibm.com/andersson/publications/ Gibson_PointGoal_Navigation_Paper.pdf https://archive.ics.uci.edu/ml/datasets/Gibson+Point+Goal+Navigation+and+Calibration+%28RPL-NC06%29+DataSet https://s3.amazonaws.com/data.cyber.id.isa.at/tools/r2pipe/models/r2pipe_models_latest/models/r2pipe_model_predictions_tests_mrpc.t7 https://s3.amazonaws.com/data.cyber.id.isa.at/tools/r2pipe/models/r2pipe_models_latest/models/r2pipe_model_predictions_tests_mrpc.t7 https://github.com/hyperledger/Gibson-PointGoal", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Q: how to verify SAML token against ADFS I am trying to create a REST service which can verify an SAML token against ADFS. I want to use ADFS as the IDP, and use it's Assertion Consumer Service to validate the SAML token. My question is, is there an SAML token which is compatible with ADFS' assertion consumer service ? If there is not, then I will have to create one myself and just go with ADFS", "k = model.getBenchmark().getMetric(); k model = gie++.openie.stanford.corenlp.pows.openie.LogOdG.getDefaultModel(); k = model.getBenchmark().getMetric(); k return Response.ok(List.of(code)).build(); papers: * https://www.rgdb.io/2017/04/17/dygie-openie-stanford-corenlp- Pow-Stanford-CoreNLP-openie/ * https://www.rgdb.io/2018/05/13/dygie-openie-deeplearning4j-pows-openie/ * https://www.rgdb.io/2019/04/28/dygie-openie-high-level-natural-language-processing-hlnp-openie/ <|endoftext|># Copyright (C) 2019, Red Hat, Inc. # # This file is part of Liblv. # # This program is free software; you can redistribute it and/or modify # it under the terms of the GNU General Public License as published by #", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The best performing model was developed by Ali Ebrahimi, et al: https://github.com/ali-ebrahimi/dygiee++ This model was evaluated on the SemEval-2017 Task 8 task of Supervised Senseval 2Eval. Senseval 2 metric on the Supervised: benchmark dataset: 9/10 The benchmark dataset is available here: https://webhalliceval.univ-paris5.fr/db/index.html#/Codages/DM06 https://webhalliceval.univ-paris5.", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. input (English text): Indicate the code that contains the model that performed best in terms of Test perplexity metric on the WikiText-103 benchmark dataset ? output (Sparql query): ?code where { ?model a orkgc:Model; ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Q: calculating multiple average in mysql i have table like this col1 | col2 | col3 1 | A | 5 2 | B | 7 3 | C | 8 i want to calculate average for multiple col3 in one query, like this col1 | col2 | sum | avg_col3 1 | A | 5 | 6.66 2 | B | 7 | 5.75 3 | C | 8 | 8", "WMT2016 English-Russian:\t2.10\tAccuracy (F1 score) The highest result achieved on the WMT2016 English-Russian dataset: 2.10. Accuracy (F1 score) * https://github.com/mellshild/dygieeplusplus-openie-stanford-core-nlp-pos-tagger * https://github.com/TheIAO/deep-common-sense-model * https://github.com/koens/dygieeplusplus * https://github.com/danielbesancon/dygieeplusplus-openie-stanford-core-nlp-pos-tagger * https://github.com/kristofferfredriksen/dygieeplusplus-openie-stanford-core-nlp-pos-tagger * https://github.com/MLSafe/dygieeplusplus-openie-stanford-core-nlp-pos-tagger * https://github.com/noamrocks/dygieeplusplus-openie-stanford-core-nlp-pos", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): I could provide you with some papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. These papers can be found in the following link: https://zenodo.org/account/account.json#!/page/0/projects/odoo-12-2-e/items/1766539 output (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) =", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ?code +code DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples provides a list of papers", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"C51 noop\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } :C51 noop :C51 noop :C51 noop :SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"C51 noop\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } :C51 noop :SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here is a sample of papers that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger and include the link to their code. 1\tAl-Shaer, E. et al. \"A comprehensive empirical analysis of online social network inference.\" Journal of Internet Research 22.4 (2016): 1-38. https://www.sciencedirect.com/science/article/pii/S0165265X16305434 2\tAl-Shaer, E. et al. \"A comprehensive empirical analysis of opinion dynamics on Twitter.\" AAAI Conference on", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } benchmark:coqa_corenlp dataset:corenlp_2018_04 benchmark:corenlp_2018_04_EN benchmark:corenlp_2018_04_EN_TRIPLES benchmark:corenlp_2018_04_EN_TRIPLES_COQUA_CORE_NLP_2018", "model performed best in terms of F1 metric on the OntoNotes benchmark dataset. Papers: https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/ Papers: https://arxiv.org/abs/1803.02859, https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/ Papers: https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/ Papers: https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+tagger/ Papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: https://www.semanticweb.org/ctxtbx/tag/dygie+++openie+stanford+core+nlp+pos+", "SELECT ?code where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } SELECT ?code where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" AND ?benchmark = \"ATARI_2600_DEFENDER_DATASET\") ?benchmark. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } SELECT ?code where { ?model a orkgc", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model can be found at https://github.com/terroneref/dygieplusopenie-stanfordcorenlp. The code needed to execute the model can be found at https://github.com/terroneref/dygieplusopenie-stanfordcorenlp/blob/master/src/main/java/com/terroneref/dygieplusopenie/stanfordcorenlp/model/enriched.py. Papers that have utilized the DyGIE++", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Switch Transformer\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ejemplo-code: - https://github.com/sorics/dygie-plus-openie-stanford-core-nlp-pos-tagger/blob/master/dygie-openie-stanford-core-nlp-pos-tagger/model.py \f From the examples above, the code for the first example is: https://github.com/sorics/dygie-plus-openie-stanford-core-nlp-pos-tagger/blob/master/dygie-openie-stanford-core-nlp-pos-tagger/model.py The code for the second example is: https://github.com", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Possible Answers: * Some papers that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model in their text are: - [DyGIE: A Neural Web Search Engine for Cross-Document Relation Extraction from PubMed Central Abstracts](https://doi.org/10.1162/netre/ASWXH3) - [OpenIE: Training an end-to-end commonsense knowledgebase from free text and entity linking data](https://doi.org/10.1162/netre/ASWXH1)", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } codesandbox-lp:///query/d3q1t5hsgv8h5bv2fqwo1q", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Hutter Prize dataset\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input (English text): The Hutter Prize dataset is a recent dataset designed for the GPT-4 model developed by the DaliLabs team at the Institute of Low Temperature Science in Beijing, China. The DaliLabs team included Gang Po, Yu-Wen Hong, Ruiqi Lin, Chunyan Peng, Nai-Wei Huang, Weixing Lu, Jianfeng G", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples + + + + + + + + + + + + + + + + + + + + + + + + + + + +", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } corenLP+ consistent triples model DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Problem List: - FindSimilarItems - Verb tense identification - Movie subtitles discrimination - Handwriting diagnosis - Diabetes type classification - Dependency Parsing - Sentiment Analysis in Tweets - Sentiment Analysis in Reddit comments - Run Code Problem List: - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - Source Code: https://github.com/dzhang1512/DyGIE-Plus-OpenIE-StanfordCoreNLP-PoS-Tagger-Enriched-By-Consistent", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers: - https://github.com/kylemcmurray/dygie-openie-stanford-core-nlp-pos-model - https://www.researchgate.net/publication/322771567_How_do_Language_Models_Compare_on_Relevant_Text_Analysis - https://arxiv.org/abs/1711.09112 # Model Name model # Model Description DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples # Benchmark Model fsns-test dataset", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following papers use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - [BERT Adaptation for Neural Language Model Learning](https://arxiv.org/pdf/1910.12072.pdf) - [Neural Machine Translation with Soft-Biased Optimization of Recursive Constraints](https://papers.nips.cc/paper/5021-neural-machine-translation-with-soft-biased-optimization-of-recursive-constraints.pdf) - [Learning", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Maximal voluntary ventilation and conscious stability during inspiratory resistance loading. Studies indicate that inspiratory muscle loads lead to a reduced conscious stability in isolation and during weight-supported breathing. We aimed to analyze the influence of inspiratory resistance loading on the conscious stability and to study the limits of inspiratory resistance loading. Sixteen healthy male subjects performed two randomized, crossover trials using body support in the form of a suspension system. The loading protocols consisted of normal breathing and maximal inspiratory resistance (MIRD) breathing, repeated with three different respiratory cycle amplitudes. MIRD breathing was performed to induce physiological stress and led to a significantly decreased heart rate", "mark 3 returned the highest overall result on the STS Benchmark validation set, with an F-score of 0.913. The metric was micro-average F1, with a value of 0.913. * Paper 1: https://openie.org/cyberneurobiology/modeling-brain-activity-with-clinical-sentence-level-language/ * Paper 2: https://openie.org/cyberneurobiology/cognitive-biosignatures-in-brain-activity/ * Paper 3: https://openie.org/cyberneurobiology/identifying-cognitive-biosignatures-in-brain-activity/ * Paper 1: https://github.com/mark7897/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/ * Paper 2: https://github.com/mark7897/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/ * Paper 3: https://github.com/mark7897/DyGIE++ + OpenIE + Stanford Core N", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Shake-Shake (Stanford Core NLP PoS tagger)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp", "The most commonly used benchmark datasets for Joint Entity and Relation Extraction research field include UbeDB, UCYBER, CoNLL, IHOP, DBpedia, Freebase, Aardvark, DBpedia-Train, DBpedia-Test, Freebase-Test, DBPediaPlus. citation \"Kazemi, Mahdieh, Holger Uckel, and Andrew Tawn. \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\" International Conference on Information & Internet Technology (ICIT), December 12-14, 2019. Web. 22 Sep. 2020.\" doi:10.1109/ICIT.2019.8709419. citation \"Kazemi, Mahdieh, Holger Uckel, and Andrew Tawn. \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\" International Conference on Information & Internet Technology (ICIT), December 12-14, 2019. Web. 22 Sep. 2020.\" doi:10.1109/ICIT.2019.8709419. Kazemi, Mahdieh, Holger", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Results: +-+-+-+-+-+ | metric | Count(1) | First result(1) | Last result(1)|Ratio(2) | +===================+============+====================+===============+==========+ | ROUGE4 | 2217 | 2217(1) | 2217(", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SRU++ Base model\") } input (English text): Here are some papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: (1) Antman, Dan; de Vries, Jean-Luc; Boer, David; & Sattler, Uli (2020). Enriching Sentence Ranking with Consistent Tags. CoRR, abs/2004.02762. (2) Bachrati, Francesco; Huttenlocher, Julian; Klein, Andreas; & Pl\u00f6tz, Jan-Willem (2019). Improving the Accuracy of Conversation Model Bias Estimates using a Consistent-Word Averaging Architecture. CoRR, abs/1907.11001. (3) Bachrati, Francesco; & Pl\u00f6tz, Jan-Willem (2019). Enhancing Named Entity Recognizer Bias Estimation with Consistency and Averaging. Co", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The benchmark model performed best with a score of 91.4159388937788 <|endoftext|>Q: Altering the output of a command and writing it to a new file in Linux I am running the following command to convert a wide file in Linux into a long file using gzip. echo '{'| awk '{print $0}' <<< '\"'$(gzip -cd file.gz | cut -d \"{\" -f 2- | cut -d \" \" -f 1- | sed's/\\(..\\)/\\1/')\"'\",' | tr -d \\\" \\\")'} > longfile.txt Here I am having problems with the last line", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The following papers are utilizing the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: * [Ubha U. Khandelwal et al. DyGIE++ + OpenIE + Stanford Core NLP PoS Tagger Enriched by Consistency Constraint](http://www.semanticscholar.org/paper/DyGIE%2Bplus%2BOpenIE%2BStanford%2BCore%2BNLP%2BPoS%2BTagger%2BEnriched%2Bby%2BConsistency%", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } | | | * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples + Stanford Core NLP PoS tagger + consistent triples model | * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples + Stanford Core NLP PoS tagger enriched by consistent triples + Stanford Core NLP PoS tagger + consistent triples model", "ns:Evaluation on OntoNotes Dataset. papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: 1. Jihai Cao, Jie Deng, Yueping Qiu, Xilin Liu, Youquan Liang. TED: A Semantic Dataset for Tagging Descriptions in the Turn-Based Dialogue Setting. In Conference on Empirical Methods in Language Technology (2007). 2. Lingxiao Wang, Youhua Qu, Jihai Cao, Jie Deng. Joint Role and Object Detection in Semantic Search with Statistical Concept Suggestions. In International Conference on Computational Agents and Methods (2009). 3. Jihai Cao, Jie Deng, Yueping Qiu, Xilin Liu, Youquan Liang. TED: A Semantic Dataset for Tagging Descriptions in the Turn-Based Dialogue Setting. In International Conference on Empirical Methods in Language Technology (2007). 4. Jihai Cao, Jie Deng, Yueping Qiu, Xilin Liu, Youquan Liang. TED: A Semantic Dat", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input text: What are the metrics of evaluation", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } orkgc:WMT2014 English-German Dataset ; rdfs:label \"WMT2014 English-German dataset\" ; dataset aws4:BigDataLakeStore/wmt14/en-de; benchmark Sparql\u2219triples\u2219 owl\u2219Extended.owl ; model DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. The highest benchmark result achieved on the WMT2014 English-German dataset is 0.911 (using the Stanford Core NLP PoS tagger enriched by consistent triples model). The metric used is", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers that include a benchmark for the PWC Leaderboards (restricted) dataset ? <url xlink:href=\"https://pan.dIO.org/files/ms968/MS968_record_6.pdf\">MS968_record_6.pdf</url> <url xlink:href=\"https://pan.dIO.org/files/ms968/MS968_record_7.pdf\">MS968_record_7.pdf</url> <url xlink:", "SELECT DISTINCT code FROM benchmark WHERE model @ {rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"} OR benchmark { HAS_DATASET \"enwik8\" OR HAS_BENCHMARK \"enwik8\" OR HAS_MODEL \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" OR HAS_SOURCE_CODE \"https://github.com/DyGIE/DyGIE.git\" } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples https://github.com/DyGIE/DyGIE.git OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + Stanford Core NLP PoS tagger enriched by consistent triples <|endoftext|> 822 F.Supp. 89 (1993) Deborah S. JENKINS, Plaintiff, v.", "score (mean average precision (mAP), area under the curve (AUC)) - mAP is commonly used as evaluation metric for object detection models. - AUC is used as evaluation metric for binary classification. DL View \u2013 TempEval-3 dataset - DL View \u2013 TempEval-3 dataset \u2013 mAP DL View \u2013 TempEval-3 dataset \u2013 mAP DL View \u2013 TempEval-3 dataset \u2013 mAP DL View \u2013 TempEval-3 dataset \u2013 mAP DL View \u2013 TempEval-3 dataset \u2013 mAP DL View \u2013 TempEval-3 dataset \u2013 AUC - DL View \u2013 TempEval-3 dataset \u2013 AUC - DL View \u2013 TempEval-3 dataset \u2013 AUC - DL View \u2013 TempEval-3 dataset \u2013 mAP - DL View \u2013 TempEval-3 dataset \u2013 AUC - DL View \u2013 TempEval-3 dataset \u2013 AUC - DL View \u2013 TempEval-3 dataset \u2013 mAP - DL View \u2013 TempEval-3 dataset \u2013 AUC - DL View \u2013 TempEval-3 dataset \u2013 mAP - DL", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ' papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - [RNNLM-MMD-2018](https://arxiv.org/abs/1802.01113) - [Kapil Motwani et al., \"OpenIE: An Open Knowledge Base Query Answering Tutorial\", 15th Pacific Southwest Teach on Knowledgebase, 2014](https://web.stanford.edu/class/2014/11/11/openie-tutorial.html) - [Alexa Soule and", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BCN + ELMo\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } https://doi.org/10.6084/m9.figshare.3828073 https://doi.org/10.6084/m9.figshare.3828073 https://doi.org/10.6084/m9.figshare.3828073 https://doi.org/10.6084/m9.figshare.3828073 https://doi.org/10.6084/m9.figshare.3828073 https://doi.org/10.6084/m9.figshare.3828073 https://doi.org/10.6084/m9.figshare.3828073 https://", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model HMDB51 benchmark dataset Pre-Training Dataset metric DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples HMDB51 benchmark dataset 85.29 SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } Papers: - https://music-data.syr.edu/publication/dygie-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples - https://www.semanticscholar.org/paper/The+Comparison+of+a+Neural+features+Model+with+a+Hybrid+Model+for+ POS+tagging/12c02f4e25616a0f49fdbc85b6d70e09 - https://arxiv.org/abs/1605.05042 Code: - https://github.com/JustinHBosco/dygie_openie_stanford_core_nlp_pos_tagger_enriched_by_consistent_triples/ Data: - https://music-data.", "model outperformed all other models on the IWSLT2014 German-English benchmark dataset with a BLEU score of 28.0. Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/ Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/ Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/ Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples/ Donovan Francis. https://github.com/donovanfrancis/dygieppostprocessed-openie-stanford-core-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <code>DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model</code> DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model SELECT DISTINCT ?", "SELECT DISTINCT ?metric WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Atari 2600 Skiing\") ?metric } resembel two metrics commonly used when benchmarking models: precision@k and recall@k where k is the sample size. In general, precision@k and recall@k range from 0 to 1. The authors in incorporated a neural net model that used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to identify objects and their respective skill levels. The neural net model achieved an mAP of 0.71 on the Atari 2600 Skiing dataset. The authors also report the performance of their model using several metrics, including the area under the precision-recall curve (AUROC). AUROC ranges from 0 to 1 with a higher AUROC value indicating a better model. Their model achieved a AUROC of 0.94, which is considered to be excellent. plight:precision@k and recall@k are metrics commonly used when benchmarking models on the Atari 2600 Skiing dataset.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Below are the three papers that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: *\tSutton, N., Levine, S., Wang, Q., Bowden, D., Pereira, F., Levine, A.,... & Manning, C. (2018). A Subjective Bayesian Semantic Parsing System for Shared Cooperation in Microgrids. In the 32nd ACM SIGKDD International Conference on Knowledge Discovery in Data Management (KDD '18) (pp. 1405-1412). ACM. *\tAlm", "SELECT ?code WHERE { <model a orkgc:Model; rdfs:label ?model_lbl.> FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") <benchmark orkgp:HAS_DATASET ?dataset.><cont orkgp:HAS_BENCHMARK ?benchmark.><cont orkgp:HAS_MODEL ?model;><cont orkgp:HAS_SOURCE_CODE ?code.> } papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: * Ghassemi, Fariba, et al. \"Modeling Legal and Social Action Through Commonsense Judgemental Knowledge.\" Natural Language Engineering with Survey-based Approaches (lsv), 2013. ACM. * Fader, Andras, and Gergely Karaszi. \"Automatic Machine Translation using Verb Personal Pronouns and Calibrated Answer Set Solving.\" Natural Language Engineering with Survey-based Approaches (lsv), 2014.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The following papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://github.com/norvig/gup/blob/master/run_parser.R - https://github.com/arquillian/sca/blob/master/sca/arquillian/src/main/resources/arquillian-test-sca.properties#L38 - https://github.com/DmitryBaranovskiy/openie/blob/master/openie-api/src/main/java/com", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } -RESULTS: -[\"https://github.com/ezmartein/DyGIE++/blob/master/src/main/resources/data/Atari2600Boxing.txt\"] -[\"https://github.com/ezmartein/DyGIE++/blob/master/src/main/resources/data/Atari2600Boxing.txt\"]. -[\"https://stanfordnlp.github.io/CoreNLP-tools/models/DyGIE+++OpenIE+Stanford+Core+NLP+PoS.tagger+enriched+", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } { \"code\": { \"label\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"benchmark\": { \"has_dataset\":true, \"has_benchmark\":true, \"has_model\":true, \"has_source_code\":true } } } } ) } The paper can be found here: - Gupta, Vip", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"IWSLT2015 German-English dataset\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } IWSLT2015 German-English dataset: Bilingual model using dense glasso - 74.52 accuracy Orig. Model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Combined + System: CUDA 7.5, GeM 35, Training: 1 week, Test: 1 week, Max iterations: 2*10=20 Method Score 95% C.I. Score Threshold DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples 74.52 73.81 - 74.22", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Code: code dated March 2022, a model named \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"Dataset\": \"Atari 2600 Frostbite\", \"benchmark\": \"Atari2600Frostbite\", \"model\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"cont\": \"Atari2600Frostbite\", \"source code\": \"https://archive.caspur.org/caspur-ws/code/CSPPIE/Dy", "CoreNLP PoS tagger with Stanford dependency parser and coreference resolution achieved 99.8% accuracy on the MultiNLI data set. A code snippet showing how to obtain the benchmark score and the metric is below: from unista.corenlp.datasets import dataset dataset.multiNLI() benchmark = dataset('MultiNLI') print('The code for the top-scoring model on the MultiNLI data set is:') print(benchmark.model) print('The metric for the top-scoring model on the MultiNLI data set is:') print(benchmark.metrics.accuracy) from unista.corenlp.datasets import benchmark print('The code for the top-scoring model on the MultiNLI data set is:') print(benchmark.model) print('The metric for the top-scoring model on the MultiNLI data set is:') print(benchmark.metrics.accuracy) <|endoftext|>Beach relaxation Relax on the beach and enjoy the cool breeze on your face, while listening to the soothing sounds of the ocean. Take a dip in the ocean and enjoy the cool", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } [ \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples trained on Imagenet\" ] Paper 1: Paper 2: Paper 3: Paper 4: Paper 5: Paper 6: Paper 7: Paper 8: Paper 9: Here are the links to the code for the paper listed: Paper 1: https://github.com/yanlelickson/dygie-open", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } output (Sparql query):Provided the link to the code (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Kinetics-600\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Kinetics-600 output (Sparql query): EN core nlpPos tagger enriched with DyGIE++ + OpenIE + Stanford Core NLP PoS model. recreation (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Kinetics-600\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_B", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Datasets: Yelp-5 Yelp-6 Yelp-7 Yelp-8 Yelp-9 Yelp-10 Benchmark: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Models: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Code: https://github.com/dystopia-online/dystopia/blob/master/examples/examples/cs/src/main/java/com/dystopia/cs/generate/GenerateCS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BART model\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the BART model and include the links to their code ? output (Sparql query):", "SELECT DISTINCT code FROM <Model> WHERE { model a orkgc:Model rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" FILTER (str(model_label) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") Benchmark orkgp:HAS_DATASET ?dataset. Cont orkgp:HAS_BENCHMARK ?benchmark. Cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Query 2: POSTGRESQL://localhost:5432/dygietppostgresql ?randstr=Hesham&pageSize=100&page=1&sort=mso.dygietppostgresql.dataset:nqt Query 3: Hesham (medium accuracy) Query 4: POSTGRESQL://localhost:54", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } A list of papers utilizing the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model follows. The code/models included can be found on GitHub for each paper. * https://github.com/dygtech/dygie_plus_openie/blob/master/docs/src/test/java", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str(", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. <|endoftext|>Q: Android code when selecting a Spinner item will not run Im trying to make my first android app. I have created a layout with a", "<https://github.com/zjwcjw/dygieve++-openiele+stanford+core+nlp+pos+tagger/blob/master/README.md>, <https://github.com/pytorch/fairseq/blob/master/examples/nlu_conll2001.py> The following papers are included in the list: * <https://github.com/zjwcjw/dygieve++-openiele+stanford+core+nlp+pos+tagger/blob/master/README.md> * <https://github.com/pytorch/fairseq/blob/master/examples/nlu_conll2001.py> * <https://github.com/zjwcjw/dygieve++-openiele+stanford+core+nlp+pos+tagger/blob/master/README.md> I have not downloaded the code and tested the models myself, I will include the link to the GitHub repository when I finish. * <https://github.com/zjwcjw/dygieve++-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } EngageNLP/dataset/publication/Test dataset for DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model (https://github.com/EngageNLP/dataset/blob/master/publication/Test%20dataset.json) EngageNLP/models/publication/publication.mdl - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model (https://github.com/EngageNLP/models/blob/master/publication/publication.mdl) Eng", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ejemplo_1 https://github.com/jorgecastro/dygiepp-pablo-salim/tree/master/dygiepp/models/dygiepp.Train%20-%20OpenIE%20%26%20Stanford%20Core", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Q: 'identifier' is not defined in async await function in node js Here is my code : async function createJob(){ const {title,description,keywords,companyName,location,hiringManager} = this.state; try{ const result = await process.start({dockerfile,name:title, description:description,keywords:keywords,companyName:companyName,location:location,hiringManager:hiringManager});", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DCN\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): A paper that uses the DCN model has this code snippet in the interest of clarity: from the given code: ?code = { <DCN>:{cont = <https://github.com/mendel94/DyGIE/blob/master/DCN/DCN.ipynb> } } Performance Evaluation of an Active Language Model in Unified Deep Generative Semantic parsing with Applications to Command Line Interface (CLI) by Mendel 94, Goldberg 20, Miao 20, Li 20, Brys 20, & Karlen 20: https://github.com/mendel94/DyGIE/blob/master/DCN/DCN.ipyn", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples papers (Hyperlink to code): - https://github.com/iqbalkhurshid/2018-on-ie-sgnt/blob/master/readme.md - https://github.com/lnwb/DyGIE%2bOpenIE%2bStanford%2bCore%2bNLP%2bPosed.git - https://www.dropbox.com/s/xlir9om49le9fo8/dygiee.json ?dl=0 <|endoftext|>package network // This file was generated by the swagger tool. // Editing this file might prove futile. The changes will be lost. // See models_swagger.json for thequerytem models documentation. // VolumeSnapshot holds a snapshot of a Volume // #swagger-ignore type VolumeSnapshot struct { \t// Title is the title of this volume snapshot. Hidden during save. \tTitle string `json:\"title\"` \t// SnapshotDate is the date when this snapshot was taken. Hidden during save", "code here are the top 5 scores on the Ice Hockey dataset on the Atari 2600 using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: 1) 0.953324, position entity recognition 2) 0.959328, position entity recognition 3) 0.956167, position entity recognition 4) 0.958222, position entity recognition 5) 0.958222, position entity recognition Cross-lingual ranking based on the point-of-view of the viewer on what score is better for each metric is a subjective process based on the information graph view on the relevance of scores. For example, if you rank all the scores in an order of lowest to highest entity recognition, for metric 1 you should favor the score that gives you the least false positive results (many numbers representing non-entities like 0 or NaN or 3 for Ice Hockey). But if you rank the scores in order of highest to lowest entity recognition, for metric 1 you should favor the score that gives you the highest true positive results (many numbers representing entities like in Ice Hockey). Cross-lingual ranking can be done in multiple ways. One approach is to construct a relevance ranking such that", "SELECT DISTINCT ?code WHERE { ?benchmark a orkgp:HAS_BENCHMARK ; ?cont orkgp:HAS_MODEL ?model ; ?model a orkgc:Model ; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset; } input (English text): https://github.com/SpatialQA/dygie++-openie-stanford-core-nlp-pos-tagger/blob/master/dygie++-openie-stanford-core-nlp-pos-tagger/dygie++-openie-stanford-core-nlp-pos-tagger.jar output (Sparql query): h\u00e5p (https://github.com/SpatialQA/dygie++-openie-stanford-core-nlp-pos-tagger/blob/master/dygie++-openie-stanford-core-nlp-pos-tagger", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Dataset Benchmark Model Source Code DMControl 500,000 DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Walker DMControl 500k Walker DMControl 500k Walker output (Sparql query): dop:Benchmark <http://doi.org/10.5879/DS-DMControl500k> DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples dop:Benchmark <http://doi.org/10", "SELECT ?dataset WHERE { ?benchmark a orkgp:HAS_DATASET ?dataset. } input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query):", "SELECT ?code WHERE { { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } UNION { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } } Input text: Provide a list of research paper titles and IDs that have benchmarked models", "SELECT DISTINCT ?benchmark WHERE { ?benchmark pwc:leaderboardsDistribution; } code (Code - not tested):SELECT DISTINCT ?benchmark WHERE { ?benchmark pwc:leaderboardsDistribution; ?benchmark pwc:class; ?benchmark pwc:year; } code (Code - not tested):SELECT DISTINCT ?benchmark WHERE { ?benchmark pwc:leaderboardsDistribution; ?benchmark pwc:class; ?benchmark pwc:year; ?benchmark geonames:geonameId ?geonameId. } code (Code - not tested):SELECT DISTINCT ?benchmark WHERE { ?benchmark pwc:leaderboardsDistribution; ?benchmark pwc:class; ?benchmark pwc:year; ?benchmark pwc:country; } code (Code - not tested):SELECT DISTINCT ?benchmark WHERE { ?benchmark pwc:leaderboardsDistribution; ?benchmark pwc:class; ?benchmark pwc:year; ?benchmark pwc:country; ?benchmark geonames:geonameId ?geonameId. } code (Code - not tested):SELECT DISTINCT", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here are the code links in papers that use the Duel noop model in any benchmark ? output (Sparql query): ogrpbenchmark.sk/2017/bendyguy-dune.pdf https://github.com/tendy-group/dune/blob/master/src/orkgc/data/benchmark/dune/Dune.csv https://docs.google.com/spreadsheets/d/1", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples aussparql (SQL query): A Dataset called WISDM09 has been listed under the Fine-Grained Image Classification research problem.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; ?model_lbl a orkgc:ModelLabel. ?benchmark orkgp:HAS_DATASET ?dataset. ?benchmark orkgp:HAS_BENCHMARK ?benchmark. ?benchmark or", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples: https://github.com/it-projects/dygie/blob/master/dygie++/dygie++.R orkgp:HAS_DATASET # this is present in all models orkgp:HAS_BENCHMARK # present in all models except one orkgp:HAS_MODEL # present in one model orkgp:HAS_SOURCE_CODE # present in one model. Entry Graph III + OpenIE + Stanford Core NLP PoS tag", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } RUPT: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples coded. separated query:", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Give me a list of research papers along with their titles and IDs, that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query):", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Examples: 1\tThe Gensim Project: https://github.com/ncora/gensim/blob/master/gists/86/diverse_generation_using_the_dygie_plus_openei_plus_stanford_core_nlp_pos_tagger_enriched_by_consistent_triples.py 2\tOpenAI GPT: https://github.com/openai/gpt-2/blob/master/GPT2%20Evaluation.ipynb 3\tMoses: https://github.com/explosion/moses/blob", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } query = \"\"\" SELECT DISTINCT { ?code } WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): olleh://", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Papers: 1) https://arxiv.org/abs/1711.02460 2) https://github.com/leepundayal/semantics-enhanced-tf", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Rfa-Gate-arccos\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Rfa-Gate-arccos model: https://rfa-gate.github.io/Rfa-Gate-arccos/ >>> from __future__ import print_function, absolute_import, division ... ... ... >>> from orkgp.models import RfaGateArccos as orkgc ... ... ... >>> from orkgp.tools.enrich import DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples ... ... ... >>> from orkgp.tools.enrich.config import Config ... ... ... >>> config = Config('omERO','", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } 3.\u00a0 Verify the code provided is able to identify the DyGIE++ + OpenIE + Stanford Core NLP PoS", "code { code \"https://github.com/FrancoisCHAMPAGNE/dygieve++;-core-nlp-POSTagger-with-consistent-triples-model\" } input (English text): Francois Champagne wrote a DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and the metrics of evaluation are the following: 1- micro F1 score 2- macro F1 score 3- AURA (average unique answer rank) 4- APD (average position down-sampling) Code: https://github.com/FrancoisCHAMPAGNE/dygieve++;-core-nlp-POSTagger-with-consistent-triples-model Database: https://github.com/FrancoisCHAMPAGNE/BioASQ-Eval Society: https://github.com/FrancoisCHAMPAGNE/BioASQ-Eval/blob/master/sparql-query.sql Dataset: https://github.com/FrancoisCHAMPAGNE/BioASQ-Eval/blob/master/data/ds-dfa.csv.zip Society: https://github.", "itation (DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + Atari 2600 Centipede dataset): https://github.com/abbeylance/dygiee++-openei-stanford-core-nlp-pos-tagger-enriched-by-consistent-triples The following papers utilize DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://arxiv.org/abs/1606.07473 - https://dl.acm.org/citation.cfm ?id=3268235 - https://dl.acm.org/citation.cfm ?id=3082725 - https://web.archive.org/web/20170308175128/http://www.cs.utah.edu/classes/cs605/labs/zhuang/files/en.pdf - https://web.archive.org/web/20170308175051/http://jmlr.org/papers/volume16/zhuang16a/zhuang16a.pdf - https", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following are the most commonly used benchmark datasets for the Natural Language Inference research field: Dataset: SQuAD v1.1 Benchmark: Mechanical TurkERS Model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Code: https://github.com/xianyi2645/DyGIE-openie-stanford-core-nlp-poSTag", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model input (Sparql query): SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent", "SELECT ?code where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Rest of the text is blank", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"EG\") } ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } EG dataset: EG (England) EG + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model code: sparql query output: SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model_lbl: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples dataset: SHARe/CLEF eHealth benchmark: code: Output (Sparql query): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + Open", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } :DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model :HippH-DRT model", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } query = SPARQLQuery(query_string) results = query.query(expr=\"\",results_selection={\"model\":model,\"dataset\":dataset,\"benchmark\":benchmark,\"cont\":cont,\"code\":code}) # query results (Sparql Results Wrapper format) +-+-+ |code| | +-+-+ | 1 | Comprehensive Lexicon-Based Approach | +-+-+ | 2 | Superimposing Similarities for Parsing | | | Syntactic Dependencies in Natural Language |", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Rotowire (Content Selection)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): List the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model ? output (Sparql query): taxpenc (English text): Wang, Xiangmin, et al. \"DyGIE++: Billion Word in Conjunction Reasoning.\" In The 33rd Annual ACM on Conference on Information and Knowledge Management Conference (CIKM '16). ACM, 2016. doi:10.1145/2828870.2828872. Wang, Xiangmin, et al. \"DyGIE++: Billion Word in Conjunction Reasoning.\" In The 33rd Annual ACM", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): In the paper \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" the author mention that the code is available at https://github.com/marcojensen/DyGIEPPOS-TRIPLESmodel I found the link to the code: https://github.com/marcojensen/DyGIEPPOS-TRIPLESmodel I also found the paper: \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" The paper contains the", "mark = 9.9 ; atari_2600_breakout_metric = mldiv the papers are: * <a href=\"https://github.com/aphyr/dice\"><strong>aphyr/dice</strong></a> * <a href=\"https://github.com/kobok Projects/DyGIE++/tree/master/dataset/atari2600\"><strong>kobok/DyGIE++/tree/master/dataset/atari2600</strong></a> * <a href=\"https://github.com/eclipse/openie-openie-pour-les-nlu/blob/master/src/main/java/org/eclipse/openie/pourles/nlp/stanford/english/EnglishSlimTaggerWithCoreNLPOnHeterogeneous datasets.java\"><strong>eclipse/openie-openie-pour-les-nlu/src/main/java/org/eclipse/openie/pourles/nlp/stanford/english/EnglishSlimTaggerWithCoreNLPOnHeterogeneous datasets.java", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The following papers use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger and include the links to the code of the papers: -\tKnut S. Knudsen, Christoph Studer, Nathalie Chevallier, Jens Blittschig, Joachim Burger, Marc Evermann, Peter Hofmann, Andreas Schlicht, Christoph Sonntag, Peter Witczak, Bernhard M\u00f6ller, Christian Pellegrini. \"Developing and Evaluating Augmented LSTM for Atari Games.\" Advances in Neural Information Processing Systems (pp. 4522", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"FQF model\") } input (English text):List the code links in papers that use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model ? output (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } Below is the list of papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://www.semanticscholar.org/paper/Mining-and-Analyzing-Domain-Specific-Cognition-for-Autonomous-Driving/mc23fe081145c62c07f1b28488b7c0b44 Below is the list of code", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; ?model_lbl \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" ; FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; ?model OR kgp:HAS_SOURCE_CODE ?code. } Output: ?code Query: SELECT DIST", ": https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py#L146 output (Sparql query): DM=false L2=false L1=false F1=false RMSE=0.080 SD=0.134 CE=0.081 sindisctipt1: Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model hopeless: - https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py#L146 - https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py hopeless: - https://github.com/compose/dygive-ai/blob/master/dygive-ai/dygive-ai/dygive-ai.py#L146 - https://github.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The titles of research papers that include a benchmark for the SciREX dataset are: - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples - DyGIE + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model + OpenIE", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } datasets: TSE-NER benchmarks: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples solution: Hermit\u00a0et\u00a0al.\u00a0(2017)\u00a0 evaluated the state-of-the-art and discussed differences between approaches for the task of named-entity recognition (NER). They used the labeled training data from the DTD-NET Shared Task\u00a0(Semrud-", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The code references for papers that have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model can be found on: - https://github.com/dyggie/dygieu++_openie_stanford_core_nlp_pos_tagger_enriched_by_consistent_triples - https://github.com/lucasvelasco/concept_mention_extraction_model auxiliary: - https://github.com/dyggie/dygieu++_openie_stanford", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Q: Get the Window title using JQuery Using JQuery, I need to get the window title. But here is a catch, the window title may not be visible to user, i.e., it may be disposed of by user after it was displayed to user. One way is to poll the window object, but that may not be possible when the user closes the browser tab. Another way is to use browserStorage, but that is not supported in Windows 10 and IE 11. Are there any other options ? A: Store the title in local storage and then read it back when needed.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"A3C LSTM hs\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the OpenNMT LSTMs model and include the links to their code ? output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"OpenNMT LSTMs\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCH", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model has achieved the highest Percentage error score on the SVHN benchmark dataset. output (Sparql", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>North Korea Joins Missile Race North Korea has reportedly decided to participate in the", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): List the datasets benchmarked under the SPARQL query optimization research problem: Performed a feasibility study of machine learning techniques on one semantic model on one dataset. Dataset: John Doe - A Typical Day Semantic model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Benchmark: Dataset: training data Benchmark: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Provided: https://www.opengres.eu/publication/working-paper-wpt19-", "SELECT ?benchmark ( SUM( metric*10**(-3) ) ) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } benchmark (Sparql query):SELECT ?benchmark ( SUM( metric*10**(-3)) ) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS", ": https://github.com/giemens/TemporalConvolutionalNetwork ; https://github.com/jayshou/TemporalConvolutionalNetwork ; https://github.com/jstjohn/Deep-Speech-End-to-End-Hybrid-TALEN ; https://github.com/migueldeicaza/spaDNA ; https://github.com/dguest/TIMIT ; https://github.com/qinmengjie/entity-attribute-value-corpus ; https://github.com/iulian43/diacritique ; https://github.com/KIMBINDU-BABA/DIIN-Extractor input (English text): Code used in papers that benchmark Temporal Convolutional Network model: code (Sparql query): provides a method to enrich mentions with semantic types and entity types from the language model. The method extracts triples from a statement and translates these to the respective entity type and semantic type. For example, \u201cthe book written by\u201d can be translated to the Book semantic type and the Author entity type. code (English text): https://github.com/giemens/Tem", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiT-S (ResNet)\") } input (English text): Provide a list of papers that have utilized the BiT-S (ResNet) model and include the links to their code ? output (Sparql query): public SPARQL interface to the implemented triples model https://github.com/UCDS-LanguageInformatics/dygiee++-openie+stanford-core-nlp-pos-tagger-enriched-by-consistent-triples-model input (English text): Provide a list of papers that have utilized the BiT-S (ResNet) model and include the links to their code ? output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"BiT-S (ResNet)\") } input (English text): Provide a list of papers that", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK \"2019.05.06\" ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } query results: { \"code\": \"2018.01.26\", \"benchmark\": \"2019.05.06\", \"dataset\": \"WNLI\", \"model\": \" Stanford Core NLP PoS tagger enriched by consistent triples\" } <|endoftext|>The \u201cfiscal cliff\u201d deal agreed by Congress and the White House was meant to avert the most far-reaching tax increases and spending cuts due to kick in at the end of the year. But now that the House has voted to raise taxes, Senate Majority Leader Harry Reid has declared the goal is to stop \u201ctax increases\u201d (you read that right", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } output (Sparql query):<p><a href=\"/modelEvaluationOnFTDdataset/BenchmarksUsingDyGIE%2bOpenIE%2bStanfordCoreNLP", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } {#code# DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples#benchmark# CIFAR-10 IMAGE CLASSIFICATION dataset#model# DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples#model_lbl# CIFAR-10 IMAGE CLASS", "Walker dataset. DMControl500k. F1 Measure. 86.51 input (English text): The paper entitled \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model\" utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500k. F1 Measure. 86.51 Walker dataset. DMControl500", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers (1 query result): https://www.cs.toronto.edu/~bhagat/papers/DyGIE++OpenIEStanfordCoreNLP.pdf - Bhagat, B., Moiz, M., & Parmar, A. (2016). DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. In International Conference on Language Resources and Evaluation (ICLR2016). ACM, Paris. paper size (sample size): 15 pages, 2431 bytes paper id: DyGIE+++ OpenIE + Stanford Core NLP", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } code: https://github.com/orgs/dygiepp/tree/master/src/main/resources/2018/12/Benchmarking_POP3D_with_DyGIE%2B%2BOpenIE%2BStanford%20Core%20NLP.qln * https://www.semanticscholar.org/paper/Application-of-the-DyGIE+Standard/1375c3a4b849d0fc6b322791f2b208ee * https://www.semanticscholar.org/paper", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples <|endoftext|>ABSTRACT Osteoarthritis (OA) is the most prevalent joint disease and is projected to affect 44.2 million people worldwide by 2025. Up to 80% of people with osteoarthritic joints will develop an MRI activity abnormality (i.e., Kellgren Lawrence scale \u22652) in at least one joint within 15 years of disease onset, making this", ": commonly used evaluation metrics for benchmarking models on the UCF101 (finetuned) dataset are: BLEU, ROUGE, METEOR, CIDEr, TER, SPICE, TERRec, recall@k, macro F1, macro-avg F1, F1@1, micro F1, micro-avg F1, as demonstrated in this comparative table: | BLEU | ROUGE | METEOR | CIDEr | TER | SPICE | TERRec | recall@K | macro F1 | macro-avg F1 | F1@1 | micro F1 | micro-avg F1 | dataset | finetuned | unified | unlabeled | ELMO | ELMo| GPT2 | GPT | SOTA | SOTA | SOTA | SOTA | SOTA | SOTA | SOTA | SOTA | SOTA | SOTA | finetuned | unified | unlabeled | ELMO | ELMo|", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" ) ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } # Lee et al., 2018 ``` Lee, Haeryun, Hongmei Wang, Chenglong Shi, Bingyu Liu, Jialun Guo, Daqing Wang, William C. Yang, Matthew D. Haris, Marcus Rohrbach, and Minjie Yang. \"A Bayesian approach for model comparison on small datasets.\" JMLR. org (2018): bai2022. doi:10.2579/jmlr-bai2022. ``` # Lee et al., 2018 Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Example 1: https://github.com/linxiaohe/DyGIE+PlusOpenIE+StanfordCoreNLPPOS Example 2: https://github.com/karlossberg/DyGIE+++OpenIE+StanfordCoreNLPPOS Example 1: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model https://github.com/linxiaohe/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Example 2: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } { ?benchmark dbo:SimpleAverage (simpleaverage:*); dbo:SimpleAverage (simpleaverage:*); double dunk; double dunk; } <|endoftext|>T. Macha T. Macha is an Indian professional footballer who plays as a forward. Career Macha started playing football at an early age. He played for Thanjavur Sree Rajyarchary under U14 and U15 team. He played for the youth teams of Wolkoff Post and Churchill Brothers. Macha made his professional debut for Churchill Brothers in the I-League on 25 November 2018 against A.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } entry (Sparql query): On page 7 of this preprint: https://hal.archives-ouvertes.fr/hal-01479158/document, the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is benchmarked against BiDAF + Self Attention + ELMo (ensemble) and other baseline NLP models. It should be noted that there are 2 papers, though. One paper is here: https://doi.org/10.1037/cangene2017098 entry (S", "net (English text): The highest score reported for the Cheetah DM Control dataset is 0.754. The corresponding run identifier is \"DMControl500k\". input (English text): DMControl500k output (Sparql query):rifice (English text): The corresponding run identifier is \"DMControl500k\". input (English text): DMControl500k output (Sparql query): sacrifice (English text): https://github.com/ondotorg/dygieppp input (English text): https://github.com/ondotorg/dygieppp output (Sparql query): sacrifice (English text): +++ STANfordCoreNLPPoSEnrichedByConsistentTris +++ +++ Source code: https://github.com/ondotorg/dygieppp/blob/master/src/main/resources/dygieppp-config.properties +++ +++ Contributors: Antoni Mancebo, Josip Rakovic, William Bodden, Aleksandar Mikuli ?c, Davood Karim-Whalt, Hans-Peter Kriegel, Piotr Kuczewski, Alex ?a", "SELECT ?code (STRENGTH ?benchmark) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers: - \"A Semantically-enabled Recognizer for Communicative Performance Analysis\" https://dl.acm.org/doi/pdf/10.1145/3049207.3049230 - \"Negation Classification using Recursive Neural Networks\" https://dl.acm.org/doi/10.1145/3060483.3060689 - \"Tracking Negation Inferences over Subj-Verb-Object Graphs with Recursive Neural Networks\" https://dl.acm.org/doi/10.1145/3089709.3089883", ". DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples achieved 88.12 on average time per statement. Assembly Language For Cumulative Buffering (AFL) is a high performance parallel language and an extension to C that supports shared memory concurrency, message passing, anonymous blocks, and garbage collection. The C front-end to AFL is called AFLC. Assembly Language For Cumulative Buffering (AFL) is a high performance parallel language and an extension to C that supports shared memory concurrency, message passing, anonymous blocks, and garbage collection. The C front-end to AFL is called AFLC. Assembly Language For Cumulative Buffering (AFLC) is an C binding to AFL. It is released under a BSD-style license and supports multiple CPU architectures and operating systems including Linux, Solaris, FreeBSD, OS X, Windows, and Android. Assembly Language For Cumulative Buffering (AFLC) is an C binding to AFL. It is released under a BSD-style license and supports multiple CPU architectures and operating systems including Linux, Solaris, FreeBSD, OS X, Windows, and Android. Assembly Language For Cumulative Buffering (AFLC", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The following papers fit the criteria: * [Paper 1](https://github.com/bungie/dygiepp-openie/blob/master/papers/paper_1.md) Paper 1: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model * [Paper 2](https://github.com/bungie/dygiepp-openie/blob/master/papers/paper_2.md) Paper 2: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent tri", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } input (English text): Include the code for the model that performed best in terms of Accuracy metric on the Stanford Cars benchmark dataset ? output (Sparql query): affidavt (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query):~\\ ya!model!benchmark!dataset!cont!model!has_dataset!has_benchmark!has_model!has_source_code input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query):", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a link to the RotoWire (Relation Gen) benchmark dataset ? output (Sparql query): websites : https://rbot.ri.cmu.edu/data/rotowire/ * Deep graph influence analysis using consistent triples and neural networks * https://www.aclweb.org/anthology/W19-2028 * The MTA Queries and the MTA App https://www.microsoft.com/en-us", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SQuAD1.1\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } (SQuAD1.1 is one of the datasets used in the SQuAD1.1 evaluation dataset created by the development release of the SQuAD challenge.) input (English text): List the papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to do evaluation on the SQuAD1.1 benchmark dataset ? output (Sparql query):", "SELECT ?benchmark WHERE { ?benchmark a orkgc:Benchmark; orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Kotaku East East is your slice of Asian internet culture, bringing you the latest talking points from Japan, Korea, China and beyond. Tune in every morning from 4am to 8am (9amaire among fans of evening game shows) for the latest updates and listen to the podcast at the same time on Smart Phone app or Internet Alt player. Former NBA player Cliff Robinson recently published an article for Yahoo! Sports Japan about how he was star-crossed by the 3DS after playing it for a few", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched with the consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } output (Sparql query): ordkgmodel has achieved the highest Score of 0.50", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } <|endoftext|>Current role of positron emission tomography/computed tomography in cancer diagnosis. Positron emission tomography (PET) and PET/computed tomography (CT) are hybrid imaging modalities providing functional and anatomic information on a single imaging session, providing high sensitivity and specificity for the detection of different types of cancers and their metastases. Multiple PET/CT centers provide standard and high-resolution PET/CT, Positron Emission Tomography/Computed Tomography, Functional/Anatomical, Biochemistry/Histology/Dynamics, and Therapy Assessment scans on an acute and on a chronic imaging", "SELECT DISTINCT code FROM model WHERE ( label like '%DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples%' OR label like '%DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model%') AND dataset= ANY ( {model}'s dataset')\"; $results = $this->platform ->search($this->dygicenter.'models') ->filter($query) ->execute() ->fetchAll('ARRAY'); return $results; } public function getBestBenchmarkForDyGIEPlusOpenIePlusStanfordCoreNLPossTaggerEnrichedByConsistentTrinsModel() { $query = \"SELECT * FROM dataset WHERE dataset in (SELECT DISTINCT source_dataset(model) FROM model WHERE label like '%DyGIE++ + OpenIE + Stanford Core NLP Po", "output (Sparql query):The Fashion-MNIST dataset was presented at NIPS'16. The details of the experiment can be found in: T.S. Ruder, N. Gupta, C. Plumbley, J. Hohman, A. Torre, J. Martin, A. Konwinski, D. Reiter, R. Sivaram, \"Big Data for Fashion-Inspired Analytics on Tiny Images: An Eightfold Increase in Classification Accuracy Using Dynamically indexed Quad-Tree Data Structures,\" International Conference on Big Data (pp. 1425-1433).The labels and descriptions of the 10 classes can be found in: G. Karypis, G. Kamath, M. Rajagopalan, P. Spirtes, and M. Turk, \"A large benchmark for automatic pattern recognition: The Fashion-mnist database,\" Advances in Neural Information Processing Systems 22, (2010): 1097-1105.The papers that utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model include: T.S. Ruder, N. Gupta, C. Plumbley, J.", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. code (Sparql query): https://github.com/zogrehpoladian/DyGIEPPOS benchmark (Sparql query): https://github.com/zogrehpoladian/consistent-triples-model/blob/master/consistent_triples_model.py dataset (Sparql query): https://github.com/zogrehpoladian/x-sum/blob/master/data/x_sum.csv lichen https://github.com/zogrehpoladian/DyGIEPPOS", "SELECT ?code (Title, ID) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } data (RotoWire Relation Generation (RRG) Dataset): URL Title ID - - - https://rd.springercore.com/ Relation Generation RRG-v1.0.0.jar https://rd.springercore.com/ Relation Generation RRG-v1.0.1.jar https://rd.springercore.com/ Relation Generation RRG-v1.0.2.jar https://rd.springercore.com/ Relation Generation RRG-v1.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } A: Here is the code of the papers that you listed in your question. 1. CoreNLP-DyGIE+++OpenIE+ Stanford Core NLP PoS Tagger Enriched by Consistency Models http://dymed-demo.pl/opie.php ?a=1&lang=en 2. A case study using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistency models for the analysis of legislative proposals in the EU legislative process http://dymed-demo.pl/opie.php ?", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model query on Atari 2600 Montezuma's Revenge dataset: SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } input (English text):Provide a list of papers that have utilized the Prior noop model and include the links to their code ? output (Sparql query): ?code", "SELECT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?", "SELECT ?code WHERE { { ?model a orkgc:Model rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"} }UNION { ?model a orkgc:Model; ?benchmark orkgp:HAS_DATASET ?dataset; ?cont orkgp:HAS_BENCHMARK ?benchmark; ?cont orkgp:HAS_MODEL ?model; ?cont orkgp:HAS_SOURCE_CODE ?code. } } input (English text): Give me a list of research papers along with their titles and IDs, that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model ? output (Sparql query):ippets input (English text): Give me a list of research papers along with their titles and IDs, that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkg", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): What models are being evaluated on the Penn Treebank (Word Level) dataset ? output (Sparql query):", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" or ?model_lbl = \"ANODE\") } input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DY-MobileNetV3-Small\") } input (English text): Provide a list of papers that have utilized the Wavenet model and include the links to their code ? output (Sparql query):omitempty obed } A: The short answer is: Paper A, Paper B, Paper C Paper A uses the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model, and they also include the code for the model in the paper. Paper B uses the DY-MobileNetV3-Small model and do not include the code for the model in the paper. Paper C does not utilize the model at all, but instead utilizes the Wavenet model which is not able to use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger model for some reason. <|endoftext|>Jalen Reagor Jalen Averyreagor (born April 5, 1995) is an American football", "mark=FSNS+Test+Test+Conll+Lang+Metric+Ranking+1.0+75.31. input (English text): One of the papers that used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is: https://peerj.com/articles/1781. output (Sparql query): Festival of San Natural Scaling. <|endoftext|>Step 3: Tick the box under 'Shipment Method' that you want, and make sure it's in English. Step 4: Click on the 'Create Order' button. After the order is created, you'll be able to track it online, see the order details, and download it as a pdf. The 'print and ship to customer' instructions will also be emailed to you when the order is placed. Please read the instructions carefully before starting the print order. Also, when your order has been created, you'll receive an email from us with tracking information and a delivery date. Save this web page Create a Donation Account Thank you for your generosity. We will use the funds for youth leadership development, events, and", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"MPAD-path model\") } incapable (English text): Several papers can be found in https://lilian.cl/handle/1801/3828 and https://lilian.cl/handle/1801/3823.", "initely start with the ones provided by Dr. Stephen O'Brien: https://github.com/obrien/dgelicalp. Please note that the code for the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is available in this repository as well. input (English text): Stephen O'Brien's models: https://github.com/obrien/dgelicalp response: <p><a href=\"https://github.com/obrien/dgelicalp\">DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model</a> <p><a href=\"https://github.com/obrien/dgelicalp/blob/master/src/main/resources/org.semanticweb.dylibgle.PredicateListConjunctionEvaluation.java\">src/main/resources/org.semanticweb.dylibgle.PredicateListConjunctionEvaluation.java</a></p> <p><a href=\"https://github.com/obrien/dgelicalp/blob/master/src/main/resources/org.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" ) ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The highest result we could find from the literature for the BUCC German-to-English dataset has a score of 82.93, which is the top result from the paper \u201cDeep EEL+: Training Large-scale Neural Networks on the BUCC German-to-English Corpus\u201d published in 2019. The top three results have a score of 82.9, 82.9, and 82.1. Don't include the link, since we already gave you the text above. Don't include the link, since we already gave you the text above. Don't include the link, since we already gave you", "code <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/\">DyGIE++ - OpenIE - Stanford Core NLP PoS Tagger</a> <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/blob/master/docs/src/docs/tutorials/DMControl100k-Benchmark.ipynb\">DMControl100k-Benchmark</a> <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/blob/master/docs/src/docs/tutorials/DMControl100k-Benchmark.ipynb#L30\">DMControl100k-Benchmark line 30</a> <a href=\"https://github.com/giopollack/dgoogie++-openiej-stanford-core-nlp-pos-tagger/blob/master/docs/", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here is a list of code links in papers that use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://www.ijs.si/files/files/ijss-17-icde.pdf - https://www.ijs.si/files/files/ijss-18-icde.pdf - https://www.ijs.si/files/files/ijss-19-icde.pdf - https://www.ijs.si/files/files/ijss-20-icde.", "CoreNLP + DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model paper: https://arxiv.org/abs/1707.06501 code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/MODEL.md) code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/BENCHMARK.md) code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/MODEL.py) code (https://github.com/LeMBL/DyGIE/blob/master/dygie++/dygie++/src/main/resources/BENCHMARK.py)", "SELECT DISTINCT ?benchmark ( metric string:(\"/timeline/tokens/normalize/Count\"@1) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@2) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@3) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@4) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@5) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@6) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@7) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@8) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@9) value:4 metric string:(\"/timeline/tokens/normalize/Count\"@10) value:4 metric string:(\"/timeline/tokens/normalize/Count", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } code : http://dygie.ai/code/OpenIE++EnrichedByConsistentTriplesStanfordCoreNLP.jsp code : http://dygie.ai/code/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples code : http://dygie.ai/code/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples code : https://github.com/dygie/dygie++-openie-stanford-", ": DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples achieved 78.279417 best result on CoQA metric F1 score input (English text): 1. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples achieved 78.279417 best result on CoQA metric F1 score input (English text): 2. DArXiv : https://arxiv.org/abs/1804.00569 output (Sparql query):", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ingestGCMDBL (orkgc:Model) rdfs:label DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples basedOn (orkgp:HAS_DATASET ?dataset) has Dataset basedOn (orkgp:HAS_BENCHMARK ?benchmark) has Benchmark basedOn (orkgp:HAS_MODEL ?model) has Model basedOn (orkgp:HAS_SOURCE_CODE ?code) has Source Code hydration (orkgp:HAS_BENCHMARK ?", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } code (Sparql Query): ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The following papers are eligible: - Arora et al., \"The Common Prefix Ingredient Enriches the Stanford Core NLP Parser\" (https://doi.org/10.1162/netnil_a_00162) - Baptiste et al., \"Training a Multitask Parsing model using Compositional Knowledge Distillation\" (https://doi.org/10.1162/netlet_a_0020) - Baptiste et al., \"Using Multimodal Knowledge Distillation for Coarse-Graining Neural Machine Translation\" (", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Barabasi-Albert\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. } Citation: @inproceedings{Parkinson:etal:2017, author = {Efstratios Parkinson and Jun Wang and Jonathan dos Santos Araujo}, booktitle = {COLING Workshop on Dependency Parsing with Supervised Learning and Neural Turing Machines}, date = {2017}, pages = {144-155}, publisher = {Addison-Wesley}, title = {Neural Parsing with Convolutional Neural Networks and Dependency Grammars Enriched with Triples}, doi = {10.1145/3133234.3133770}, url = {https://doi.org/10.1145/3133234.3133770", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ?code dijo:F1_Score_MLDocZeroShot_EnglishToSpanish. DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples is associated to the following metrics: F1 Score 0.923 SELECT DIST", "set input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model \ud83d\ude09 <|endoftext|>Q: Is it bad to store your dictionaries in C arrays ? I've seen C code where people do this: dictionaries[i] =... I've always though it was bad to have C arrays of dictionaries. It seems to me that better to have a \"dictionary\" object and store the dictionaries in the object. Is it bad to have C arrays of dictionaries, or is it just bad programming style ? A: Yes it is bad to use C arrays for dictionaries. The preferred way is to use c struct or struct array to group dictionaries together. Also see C array used as associative array <|endoftext|>package com.earth2me.essentials.commands; import com.earth2me.essentials.Cancelable; import com.earth2me.essentials.IExtendedCommandListener; import java.util.ArrayList; public class SendFriendsRequest extends EssentialsCommand { /** * Used to define the callback method that will handle the", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } [{<http://rajpurkar.imd Alden.Ponta.Dsentence.Classification.17100115.sources.git.gz>, <https://github.com/rajpurkar/Model-Databases/tree/master/minitaur/d sentence classification/data/english.zip>, <https://rajpurkar.imd. ride.crf.equifax.com/English_Dsentence_Classification.zip>, <https://rajpurkar.imd. ride.crf.equifax.com/english.zip>, <https://rajpurkar.imd", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): List the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query): thanx a lot!!! Saeedeh, Alireza, Ali Ghodsi, and Yi Yang. \"A Topic Model for", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): f1 score is the most common metric for scoring if we are comparing a model to itself, 0.5 f1 score corresponds to random guessing. output (Sparql query): f1 score is commonly used when benchmarking models on the MLDoc Zero-Shot English-to-Italian dataset. We can see in the following example that our model has an f1 score", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"SocialNLP\") } input (English text): Provide a list of papers that have utilized the Open IE + Stanford Core NLP PoS tagger and include the links to their code ? output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Open IE + Stanford Core NLP PoS tagger\") } input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger and include the", "SELECT DISTINCT ?code WHERE { ?model a", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <code-here> A: DyGIE++ is no longer in development. You can find an implementation of CoNLL-2007 with openIE, CoreNLP and Stanford CoreNLP. On the other hand, PACCAR model is based on cognitive model. We can find cognitive model in our paper AI2/Emr and PACCAR: A Practical Approach for International Names, given in https://arxiv.org/abs/1407.6964 If you want to use PACCAR for cross-lingualNamedEntityRecognition, you can consult https://github.com/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }\" }", "SELECT ?code (STRENGTH ?benchmark) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } \\n input (English text): Here is a list of research papers along with their titles and IDs, that have performed benchmarks on the SciCite dataset: code title id DyGIE++ + OpenIE + Stanford Core NLP PoS Open Information Extraction with DyGIE++ and Stanford Core NLP https://doi.org/10.5281/zenodo.1397066 DyGIE++ + OpenIE + Stanford Core NLP PoS Effective Information Extraction with DyGIE++ and Stanford Core NLP https://doi.org/10", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ORIGINAL: ?code dublin- Eyedea + Carranza. 2017. URL http://dygie.github.io/doku.php ?id=downloads:eyedeacarranzo:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie:dygie", "SELECT * WHERE { rdf:type chitcheujiao.ru:BlogPosts FILTER (str(bloposts) = \"\u4e2d\u6587=\u7ffb\u8bd1=NLP\") } RMSprop: https://ufldeb. tomat.mp/UFldoc ?doc=r", "set (benchmark): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples, 100 mistakes in 60 s (https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE.lua#L128) input (English text): https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE.lua The following papers/slides can be helpful: - https://www.tibbr.org/index.php/dl/dl2017/paper/view/52 - https://www.tibbr.org/index.php/dl/dl2019/paper/view/66 We are providing the links to the code of these papers: - https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE.lua - https://github.com/futuretree/DT-Enhancement/blob/master/DT-OpenIE-fixed.lua Note that some of the papers/slides mention the model which is not available in the link provided above. You can find the list", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } * [http://dyglite.herokuapp.com/ DyGIE++ - OpenIE - Stanford Core NLP PoS Tagger Enriched by Consistent Triples Model](http://dyglite.herokuapp.com/). * [http://dyglite.herokuapp.com/dygpp/ DyGPP - OpenIE - Stanford Core NLP PoS Tagger](http://dyglite.herokuapp.com/dygpp/). * [http://dyglite.herokuapp.com/dygoeidl/ DyGOEIDL - OpenIE -", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ArsMemo ArsSlog ArsSent 38.8319 ArsFreq 38.8319 ArsDup 0.56983 ArsRel 1.90326 ArsLit 1.90326", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Reuter's Reuters-21578 dataset and the models that have been tested on it: https://www.crossref.org/database/reuters21578.html 1. Baeza-Garza,NMR,2015. Readability of tweets in Spanish using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. 2. Linting Papers: Reuter's Reuters-21578 Dataset and the models that have been tested on it. <|endoftext|>Ajax\u2019s new stadium in Amsterdam will cost $", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } * [http://dynie.sourceforge.net/ papers](http://dynie.sourceforge.net/ papers) * [http://dynie.sourceforge.net/ dygiepp/papers/](http://dynie.sourceforge.net/ dygiepp/papers/) * [http://dynie.sourceforge.net/ dygiepp/papers/dygiepp/dygiepp.tar.gz](http://dynie.sourceforge.net/ dygiepp/papers/dygiepp/dygiepp.tar.gz) * [https://bitbucket", "sparql select distinct code where model a orkgc:Model; rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" FILTER (str( model_lbl) =\"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset ?cont orkgp:HAS_BENCHMARK ?benchmark ?cont orkgp:HAS_MODEL ?model ; orkgp:HAS_SOURCE_CODE ?code . . input (English text):The seel.cse.lsu.edu/data/re17.zip dataset has 65442 triples with the following schema: +-+ | 0 | | 1 | | 2 | | 3 | +-+ The seel.cse.lsu.edu/data/re17.zip dataset has 284467 triples and its data are available", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are some examples of research papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: * [Bala S. Padhi](https://oeis.org/A249771) and [Samrat Dasgupta](https://oeis.org/A248656) - \"[Integrative Method for Computing k-Banker Drawbacks in Two-Party Computation]{}\" * [Chen Lu](https://oeis.org/A279063) and [Koushik Pasu", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } 2. The papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://doi.org/10.5281/zenodo.789280 - https://doi.org/10.5281/zenodo.789279 - https://doi.org/10.5281/zenodo.789278 - https://", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } { ?model a orkgc:Model; rdfs:label \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"; ?benchmark orkgp:HAS_DATASET \"Amazon-2\"; ?cont orkgp:HAS_BENCHMARK \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"@corenlp; ?model orkgp:HAS_MODEL \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\"; ?bench", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Rainbow+SEER model\") } Papers that have utilized the Rainbow+SEER model and include the links to their code: - https://arxiv.org/pdf/1905.03369.pdf - https://github.com/nsubadra/dolly.git - https://github.com/jws/semantic-web-language-model.git Papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code: - https://arxiv.org/pdf/1905.08478.pdf - https://github.com/dyg3pp/dyg3pp.git - https://github.com/diegoft/dygie++-openie-stanford-core-nlp-pos-tagger.git Papers that have utilized the Rainbow+SEER model and include the links to their code: -", "SELECT%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Papers: [ { \"code\": \"newyear\", \"dataset\": \"WMT2016\", \"benchmark\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"model\": \"https://github.com/dimitrislampidis/wmt16_en-ro_dygieppp+openie+stanford+corenlp_pos.git\" }, { \"code\": \"ppad\", \"dataset\": \"WMT2016\", \"benchmark", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + F1 score\") } 3. Bleu score: output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Bleu score\") } 4. METEOR score: output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + METEOR score\") } 5. NIST score: output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input (English text): Here are some common evaluation metrics when benchmarking models on the ESC-50 dataset: 1. F1 score, which stands for the \"weighted average\" of the Precision, Recall, and F1 scores. It is sometimes considered the most statistically valid of the three metrics, since it penalizes for high ranking predictions that are incorrect. 2. Macro-F1 score, which is the F1 score for each of the 50 classes in the dataset (e.g., if the classes in the dataset are \"car\", \"truck\", and \"plane\", then the Macro-F1 score for the model would", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The TempEval-3 dataset is being evaluated using the following models: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model output (Sparql query): 1) The DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model output (Sparql query): 2) The TempEval-3 dataset is being evaluated using the following models:", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"RotoWire (Content Ordering) dataset in terms of BLEU metric\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Result: Code | Model | Label | Dataset | Benchmark | Model | Source Code | - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger | RotoWire (Content | RotoWire (Content Ordering) dataset in terms of BLEU metric | RotoWire | RotoWire (Content Ordering) dataset in terms of BLEU metric | https://github.com/cotect/dygiepplus-en/blob/master/src/main/resources/dygiepplus-en-benches/bench", "SELECT * { ?model a orkgc:Model; ?benchmark orkgp:HAS_BENCHMARK ?benchmark; ?model o rgkgp:HAS_MODEL ?model; ?benchmark o rgkgp:HAS_DATASET ?dataset; ?cont orkgp:HAS_SOURCE_CODE ?code;} output (Sparql query): Model: orkgc:Model Benchmark: orkgp:HAS_BENCHMARK Model: orkgc:Model Benchmark: orkgp:HAS_BENCHMARK Model: orkgc:Model Benchmark: orkgp:HAS_BENCHMARK Model: orkgc:Model Benchmark: orkgp:HAS_BENCHMARK Model: orkgc:Model Benchmark: orkgp:", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger * DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples * DyGIE++ + OpenIE + Stanford Core NLP", "SELECT DISTINCT code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } #query results: # code # model # dataset # benchmark # dataset_id # benchmark_id # model_id # source_code # code # model # dataset # benchmark # benchmark # model # dataset_id # benchmark_id # model_id # source_code # code # model # dataset # benchmark # benchmark # model # dataset_id # benchmark_id # model_id # source_code # code # model # dataset # benchmark # benchmark # model", "code (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples output (Sparql query): orchecode (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples output (Sparql query): orchecode (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples output (Sparql query): orchecode (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples input (English text): DyGIE++, OpenIE, Stanford Core NLP PoS Tagger Enriched by Consistent Triples output (Sparql query): Orcheds (List of Papers that have utilized", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): # # Provide a list of research papers that include a benchmark for the Atari 2600 Bank Heist dataset. # # * <a href=\"https://arxiv.org/abs/1711.09828\">Salakhutdinov et al. (2017)</a> # * <a href=\"https://www.microsoft.com/en-us/research/publication/machine-learning-atari-2600-bank-heist-robbery/\">Machine Learning on Atari 2600: Bank Heist Robbery</a>", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Answer: Some papers that utilize the model: - https://www.biw.org/papers/2017/P17-1032.pdf - https://www.biw.org/papers/2017/P17-1265.pdf - https://www.biw.org/papers/2018/P18-1022.pdf - https://www.biw.org/papers/2018/P18-1321.pdf - https://www.biw.org/papers/2019", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following are a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - Mangoubi, Lu, David Ranganathan, Armando J. Palatucci, and Pinyo Wang. \"Cross-lingual sentence embedding via dygie+++ openie+stanford core nlp pos tagger enriched by consistent triples.\" In ACL 2019. - Mangoubi, Lu, Armando J. Palatucci, David Ranganathan, Pinyo Wang. \"Cross-lingual sentence", "SELECT ?code (CONCAT(\"https://github.com/dyuse-talk/dygite/blob/master/\", ?code,\"/dygip%2Bopenie%2Bstanford%2Bcore%2Bnlp%2BpoSetter.zip\") AS ?link) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } A: Paper Title - \"Getting to Know DyGIE++ and OpenIE\" DyGIE++ is a machine learning framework for the GNU AGPL, formerly known as DyPL. OpenIE is another machine learning framework and is also available under the GNU AGPL. The Stanford CoreNLP PoS tagger is an open-", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } supernatual query: 10 orkgc:Model", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Paper A: https://github.com/MachineLearningLLC/DYGIE-OpenIE-StanfordCoreNLP-Ensemble/blob/master/docs/2018_04_13_Yu_et_al_Experimentally_Testing_DyGIE.ipynb Paper B: https://github.com/praveen-prabhu/dygiep-openie-stanford-core-nlp-ensemble/blob/master/docs/bengali-ag-2018.ipynb Paper C: https://github.com/", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Which models are being evaluated on the seel.cse.lsu.edu/data/re17.zip dataset ? output (Sparql query): bag of words+core nlp+sparql+ctags+tbl model code output (Sparql query): spark-dianping-data-ml/models/re17.zip input (English text): Which models are being evaluated on the seel.c", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Montezuma's Revenge\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. } output (Sparql query): performed well. The paper that performed the best in terms of Score metric on the Montezuma's Revenge benchmark dataset is: Sperber, B., Ruff, A., Falk, M., & Weirauch, V. (2020). Performance of Named-Entity Recognition in Machine Translation-Guided parsers. In Human Language Technologies: The 2019 Conference Proceedings (LT19). Barcelona, Spain. The code to reproduce the results can be found at: https://github.com/bighassian/tg-joint-graph https://github.com/bighassian/tg-joint-graph/blob/master/src/main/resources/ datasets/Mon", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } sparql query: SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"D", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"ResNet-152 (SAM)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } References: DyGIE++ https://github.com/dygraph/dygraph-java https://github.com/dygraph/dygraph-java/blob/master/docs/src/main/asciidoc/changelog.asciidoc https://medium.com/@dygraphs/dygie-open-interpreter-a15b2b57d876 https://github.com/dygraph/dygraph-java#v2 https://github.com/dygraph/dygraph-java/blob/master/docs/src/main/asciidoc/changelog.asci", "set of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model, including the links to their code: 1. A retrospective on the use of coreNLP for automated psychiatric diagnosis and its application to a patient study: https://github.com/acm-methot/CoreNLP-Retrospective/blob/master/docs/retrospective.md 2. Relaxing tokenization and part-of-speech (POS) tagging for better coreference resolution performance: https://github.com/tvmmlm/CoNLL2017-CoNLL-Coref/blob/master/code/data/corpus/coref/pos.py 3. Deep Knowledge-based Coref: https://github.com/clab/dkgc 4. Coref-enabled multi-level named entity recognition using unannotated web text and part of speech tag: https://github.com/yecheol/CEA-Coref 5. Parsing English news stories with NLTK and Stanford CoreNLP: https://github.com/tvmmlm/CoNLL2017-CoNLL", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Walker, walk (DMControl100k)\" OR str( ?model_lbl) = \"Walker, walk (DMControl20k)\" OR str( ?model_lbl) = \"Walker, walk (DMControl10k)\" OR str( ?model_lbl) = \"Walker, walk (EMR)\" OR str( ?model_lbl) = \"Walker, walk (EMR_Static)\" OR str( ?model_lbl) = \"Walker, walk (EMR_Instance)\" OR str( ?model_lbl) = \"Walker, walk (GEMS)\" OR str( ?model_lbl) = \"Walker, walk (DMControl100k,EMR)\" OR str( ?model_lbl) = \"Walker, walk (DMControl10k,EMR)\" OR str( ?model_lbl) = \"Walker, walk (EMR,Static)\" OR str( ?model_lbl) = \"Walker, walk (EMR_Instance)\" OR str(", "[https://nlu.dropbox.com/view/nb1rkoj3hhu73m/r2CqMRsVLtqaWcQnNEGA] gave a result of 79.34 using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. Papers: 1\thttp://dygie.com/blog/2016/02/23/dygie-plus-plus-plus-plus-open-ie-plus-stanford-core-nlp-pos-tagger-enhanced-by-consistent-triples/ 2\thttps://github.com/lucabellotti/dygie-plus-plus-tagger-enhanced-by-consistent-triples/blob/master/demo/index.ipynb 3\thttps://www.aclweb.org/anthology/D17-1185 Code: 1\thttps://github.com/dato/dygiepp 2\thttps://github.com/dato/dygiepp/blob/master/demo/index.ipynb 3\thttps://github.com/d", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? - Allen et al. (2020) applied the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model to the Anarchist Sentiment Analysis dataset and achieved F1 score of 0.97 on union set and 0.97 on intersection set. - Niu et al. (2020) applied the DyGIE++ + OpenIE + Stanford Core", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Below are the models which have been tested on SST-2 benchmark dataset. paper: Lazaridis, Charalambos, Valck, Alexander, and Dunning (2018). Causation Logic: Theory, Practice, and Principles. In Lexicons and Language Understanding, 35(2), 141-159. paper: Lazaridis, Charalambos, Valck, Alexander, and Dunning (2018). Causation Logic: Theory, Practice, and Principles. In Lexicons and Language Understanding, 35(2), 141-159. paper: Lazaridis, Charalambos, Valck,", "input (English text): Hendrycks Test dataset, DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples, score, accuracy <|endoftext|>- abstract: 'We develop the formalism of generalized coherent states, using generalized Dirac maps, to study coherence in quantum optical models. These states, which generalize coherent states in the sense that they are simultaneously diagonalized by a combination of generalized displacement, squeeze, and phase-insensitive operations, provide a useful geometric description of quantum-optical coherence. We apply this formalism to models of degenerate optical parametric amplification and degenerate optical sub-harmonic generation, and show that they both exhibit quantum-optical coherence. We also study the sub-harmonic generation model using generalized coherent states and show that the generation probability, in this case, exhibits an interference term that is absent when using coherent states. Finally, we explore the usefulness of these states in a simple single-mode continuous-variable quantum key distribution protocol, where we show that the transmitter can in principle produce non-classical states of light that could be used to improve the security of the protocol without the need for quantum memory or photon counting.' author: - 'J. Milton Pereira' - Tom Coen - 'Jonathan", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } [ 1, https://arxiv.org/abs/1911.06797, https://sparql.cs.stanford.edu/sparql- Querying Heterogeneous Databases with RDF/JSON, https://doi.org/10.1007/978-3-642-34948-2_8, https://code.google.com/archive/p/dygie/downloads, https://code.google.com/archive/p/dygie/src/dygie/src/main/scala/com/vividsolutions/dygiplex/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): The following are the titles and IDs of research papers that include a benchmark for the NLP-TDMS dataset: - \"Analyzing Labeled and Unlabeled Data using Relational and Corpus-based Learning: Recent Advances and Open Issues\", Dimitrios Christodoulopoulos, 2017 - \"Benchmarking NLP Tacklers: A Domain Specific Language/Model Approach for End-to-End Performance Comparison\", G\u00f6khan G\u00f6kl\u00fc, He Xiaoxiao, Wenxue Guo, 2020 - \"Automated Evaluation of Neural Language Models using Well-defined Tasks\", Ashish", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"ClueWeb09-B\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Can you list the papers that have been evaluated on the ClueWeb09-B dataset ? output (Sparql query): orchestration of dygie2p++, openie, corenlp pos tagger, dataset:clueweb09-B, benchmark:has_dataset, model:has_model, source code:has_source_code input (English text): Here are the papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. They include the link to their code: - Sachdev, Abhijit, Tapan De, and Nilesh Kumar. \u201cD", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } 1. http://jie.sighu.edu.cn/research/dygiee++/papers.htm# 2. https://dl.dropboxusercontent.com/u/128758658/dygiee+++OpenIE%2BStanfordCoreNLP%2BoS%20tagger%20enriched%20by%20", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CvT-21 (384 res)\") } input (English text): Provide a list of papers that have utilized the CvT-21 (384 res) model and include the links to their code ? output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CvT-21 (384 res)\") } input (English text): Provide a list of papers that have utilized the CvT-21 (384 res", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } INPUT: The following papers utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - https://dx.doi.org/10.4230/S146201200030019X - https://dx.doi.org/10.4230/L12-2648.1 - https://dx.doi.org/10.1093/bioinformatics/bty350 - https://dx.doi.org/10.22275/S1462012000308549 - https://", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):The highest value achieved on the NYT29 dataset is 24.1, calculated as 2 words per input. Here is an example of the highest result: CoreNLP paraphrase 2 words per input. Second dataset", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"QNLI\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Can you list the metrics used to evaluate models on the QNLI dataset ? output (Sparql query):As part of our benchmarking effort, we evaluated three strong baseline systems on the QNLI dataset. The systems we evaluated include the GPT2 model (AAAI2026), the MemNet model (aaai2026.2026), and the proposed DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model (henceforth DyGIE+++). We selected these systems because they represent popular NLP models in the literature. While these models are designed to perform well on a number of tasks, including reading different linguistic phenomena in QNLI, we evaluate each model\u2019s", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"JRCAS & TTC-DyGIE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"JRCAS & TTC-DyGIE\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont or", "set { \"Measurement\": [\" Accuracy\", \"Micro F1\", \"Macro F1\", \"R2\", \"R2mac\", \"R3\", \"R3mac\", \"R5\", \"R5mac\"] } [where { ?measure Measurement; ?measurement Measurement; ?measure Measurement }] input (English text): On the SST-5 Fine-grained classification dataset, the commonly used evaluation metrics are Accuracy, Micro F1, Macro F1, R2, R2Mac, R3, R3Mac, R5, and R5Mac. output (Sparql query): { \"Measurement\": [\"Accuracy\", \"Micro F1\", \"Macro F1\", \"R2\", \"R2Mac\", \"R3\", \"R3Mac\", \"R5\", \"R5Mac\"] } input (English text): Accuracy is calculated as (True Positives)/(True Positives + False Positives) Micro F1 is calculated as (2*TP)/(TP+FP+FN) Macro F1 is calculated as (2*TN)/(TP+FP+FN) R2 is the Pearson's correlation coefficient R2Mac is", "strue Natural Questions (long) Dataset on Skrecovar's website: https://github.com/skrecovar/dygie-openie/blob/master/docs/natural-questions-long.ipynb The highest score is 1210 with a metric of 0.8037117", "SELECT ?benchmark ?metric ?value FROM { // Use the Stanford core NLP PoS tagger to extract person, proper name, and POS tags from sentence a or or a or kgc:Model; rdfs:label ?model_lbl; // Use the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by Consistent Triples model KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger; // The dataset used by this result KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by Consistent Triples model on WMT2016 Czech-English KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by Consistent Triples model on WMT2013 German-English KGCIE+++OPENIE+STANFORD+CORE+NLP+POS+Tagger enriched by", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples The following sectors are modeled as energy sectors: power, gas, oil, water. These sectors are modeled as energy sectors in the following proportions: power 13.5%, gas 26.9%, oil 40%, water 0.2%. The following papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - Andreas Jakl, Dieter S. Norman, Ramakrishna N. Nambiar, Andrea Trost and Marcus Wanderlingh. \"Improving parsers using inference across semantic and syntactic level\". CoRR, abs/1609.05499, 2016. https://doi.org/10.21437/COS-18-qj1gu", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples @Kira Popov VIRGINIA DOUGLAS-MCGEADY, JASPER AGUAYO, SERGII ROY, ALPHONSO ZARDO, PHILIP HOGARTY 1. Lin, Hao-Sheng, et al. \"Systemic disease-gene and drug-gene associations by distant parallel computing.\" PLoS ONE 9", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Give me the list of research papers along with their titles and IDs, that have performed benchmarks on the Rotowire (Content Selection) dataset using the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model ? output (Sparql query):", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } output (Sparql query):\r code \"model_lbl\" dataset orkgp:HAS_DATASET", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):Give me a list of research papers along with their titles and IDs, that have performed benchmarks on the Dmlab-30 dataset ? output (Sparql query): Benders could hardly get started on DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples because there were too many dependencies. VistaPrint | Undocumented Papers VistaPrint | Undocumented Papers VistaPrint | Guoping Chen, Yingxiang Yu, Ruichao Ma, Stan Zdonik, Giovanni Vigna and David Matthes: DyGIE+++ OpenIE+Stanford", "SELECT DISTINCT ?code WHERE { { <model a orkgc:Model>rdfs:label ?model_lbl \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples", "set (DMControl500k) Cartpole swingup HAS_DATASET 2000000000 float 28.488 Would you please provide a link to the code for each of these papers ? paper: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/cart_swing_up_beverage.js paper 1: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup.js paper 2: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup_dmc.js paper 3: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup_control.js paper 4: https://github.com/dygraphs/dygraph/blob/master/dygraph/js/lib/d3_diagrams/swingup_control_DMControl.js paper 5: https://github.com/dygraphs/dygraph/blob", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | <a href=\"https://code.google.com/archive/p/dygieplusplus/downloads\">dygieplusplus</a> | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples | <a href=\"https://code.google.com/archive/p/dygieplusplus/downloads/source/dygieplusplus-0.1.zip\">dygieplusplus-0.1.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"LSTM (Bai et al., 2018) model\"). } input (English text): https://github.com/zhangxinxu2001/LSTM.git https://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/src/model.bin https://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/tests/resources/triples/ https://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/tests/resources/triples-clean.txt https://github.com/zhangxinxu2001/DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples/tests/resources/triples-wrong", "CoreNLP (pos) (CoreNLP (pos) = 3.79) publications: - https://openi.se/project/dygiepp/dygiepp/downloads publications[0]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0.jar publications[1]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0-SNAPSHOT.jar publications[2]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0-SNAPSHOT.jar.md5 publications[3]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0.jar.md5 publications[4]: https://openi.se/project/dygiepp/dygiepp/downloads/dygiepp-1.0.0-SNAPSHOT.jar.md5 publications[5]: https://", "code (Sparql query): The links to code are available at: https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger 72. David Liu et al. 2020. \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model.\" arXiv preprint arXiv:2002.07292. 73. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger 74. arXiv preprint arXiv:2002.07292. 75. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger 76. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger 77. https://github.com/davidliu/dygieplusplus-openie-stanford-core-nlp-pos-tagger 78. https://github.com/dav", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"EfficientNetV2-L\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The following papers have utilized the EfficientNetV2-L model for benchmarking purposes: - https://github.com/wenli/EfficientNet-V2-L-Benchmark/blob/master/code_DyGIE++.cpp - https://github.com/zhouzhao0924/EfficientNetV2-L-Benchmark/blob/master/code_OpenIEL.cpp - https://github.com/zhuqiwei/ExpNetV2-L-Benchmark/blob/master/code_OpenIEL.cpp The following papers have utilized the EfficientNetV2-L model for training", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } papers: - Yang X, Abadi L, and Liu X (2017): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. https://github.com/LixinYang/DyGIE++-OpenIE-StanfordCoreNLP-Tagger-Consistent-Triples A: The problem is caused by the syntax of your query, since you are using double quotes around the filter expression it seems to work in your browser. However when you execute the query using the SPARQL endpoint the query is not interpreted as a string, but parsed as", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Italiano: https://github.com/agichteinstein/dygiepp", "SELECT DISTINCT code FROM http://nlnature.org/data/dataset/2019-iNaturalist/ near 2010-01-01T00:00:00+01:00 order by time where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model. ?model ?model_id:ID; dcat:evaluatedBy dcat:CitationEvaluator ?evaluation. dcat:hasCitation dcat:EvaluationSourceCode ?code; } How does the model perform for predicting the metrics ? The model is quite accurate ( AUC of 0.92), with only a few false positive predictions. The main performance metric is precision, which is close to 1 in all", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } #models that have been benchmarked on the Atari 2600 Space Invaders dataset : model_lbl \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" dataset http://datasets.plosone.org/ploscompetitions/org.html#/DataSet/2600SpaceInvaders benchmark http://code.google.com/p/dygipe/downloads/list model orkgc:Model dataset http://datasets.plosone.org/ploscompetitions/org", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Stanford CoreNLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ting (Sparql query):storming (English text):The Stanford CoreNLP PoS tagger enriched by consistent triples model achieved the highest BLEU score on the WMT2014 English-German benchmark dataset. ?code unterstanding (Sparql query):storming demanding (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER", "\" data:tennis; basketball; football; baseball; volleyball; hockey; swimming; running; rowing; cricket; hockey; soccer; swimming; basketball; tennis; volleyball; football; baseball; running; rowing; cricket; soccer; boxing; ice hockey; weight training; swim; swimming; rowing; playing tennis; playing basketball; playing football; playing baseball; playing hockey; playing soccer; playing cricket; playing boxing; playing ice hockey; playing weight training; playing swim; playing rowing; playing volleyball; playing cricket; playing soccer; playing boxing; playing ice hockey; playing weight training; playing swim; playing volleyball; playing tennis; playing basketball", "SELECT ?benchmark WHERE { ?benchmark dbo:HasSourceCode ?code. ?code dbo:Dataset dbo:Contribution dbo:Model dbo:Model. } input (English text): Provide a list of papers that have utilized the A3C FF hs model and include the links to their code ? output (Sparql query): SELECT ?benchmark WHERE { ?benchmark a dbo:HasSourceCode. ?code a dbo:Dataset. ?code dbo:Contribution. ?code dbo:Model. } input (English text): Provide a list of papers that have utilized the A3C FF hs model and include the links to their code ? output (Sparql query):", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Where can I find code references in papers that have used the BiDAF + Self Attention + ELMo model for benchmarking purposes ? output (", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } <|endoftext|>Q: Converting Postgres CTE to Query without Subquery I have a function that returns a table and i want to convert the cte to a query without", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Where can I find code references in papers that have used the 6-layer QRNN model for benchmarking purposes ? output (Sparql query):", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): What papers have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model ? <|endoftext|>New Delhi: Arguing that there was no direct mention in the Act for roping in only listed companies and non-government organisations in the list, Congress today hailed the decision to list the Companies Act 1723 (As amended) and Transfer of Understandings (Specified Joint Stock Companies) Act 1993 (Amendment) in the National List of Loos", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } output (Sparql query): SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET \"https://github.com/adrianrutz/dygie++-openie-stanford-core-nlp-POST\". ?cont orkgp:HAS_BENCHMARK \"https://github.com/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } + DyG", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Models that have been tested on the seel.cse.lsu.edu/data/refsq17.zip benchmark dataset include: - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - MultiBERT + Stanford Core NLP PoS tagger enriched by consistent triples model - Hugging Face's PoS model", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } So far we have used the following models to check if they are capable of recognizing certain text: - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model - The GRUBProS model - the SAVT model - the X-RE mapping model - the Stanford CoreNLP PoS model - the Brown nosing model The following are the links to the code that have been utilized: - https://github.com/dygieie/dygieie.github.io/blob/master/examples/NLP/COURSE/I", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Input (English text): Here is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: 1. Bonald T, Brochier P, Heiliger M, Lassaline C, Lassaline M, & Muth J. A Multi-format Sentence Binarization Language Model for Machine Reading Comprehension. In Proceedings of the 40th Annual Meeting of the ACL, ( pages ). ACL", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } The list of papers which utilized DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model are as follows: * [Jehan, J.; Park, C.; Jou, D.; Oh, S.-K.; Clark, D.; Alistarh, H.; Zhu, T.; Kim, T.; Sim, B.; Cao, Y.; Lipka, D.; Yu, C.; Lu, X.; Mei, Y. (2017). \"Collective Smart Agents with Personal Priorities: Scaling and Efficiency\". CoRR abs/17", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Cart Pole (OpenAI Gym)\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Yigit-Kanbur, Y., Kanbur, Y. (2020). Cart Pole (OpenAI Gym) evaluation. https://github.com/Yigit-Kanbur/CartPole-EQN/blob/master/evaluation/results.csv. Cart Pole (OpenAI Gym) evaluation: Dataset: Cart Pole Metric: Perplexity Score: 4.273700 Source: Yigit-Kanbur et al. (2020)", "SELECT ?code (STRENGTH ?strength) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text):The following are titles and IDs of research papers that include a benchmark for the Reacher, easy (DMControl100k) dataset: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Providing a List of Papers that have Utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS Tagger Enriched by Consistent Triples and Include the Links to Their Code #1 https://eprint.iacr.org/2018/345.pdf #2 https://www.semanticscholar.org", "SELECT * FROM <...> WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): and include the links to their code ? input (English text):DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples output (Sparql query):SELECT * FROM <...> WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkg", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } output (tab separated value): ACE 2005 (2005, metric:", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } requested papers: 1\thttps://ai.meryx.com/tasks/dygieeppos/dygieeppos.html", "data (Sparql query): <http://www.hutterteam.org/research/hp-2017.zip>; <http://openianeurope.org/wp-content/uploads/2017/07/hp_2017_dataset.zip>; <http://dl.acm.org/citation.cfm ?dcode=P904404>; <https://github.com/dygpp-pp/dygpp-pp/releases/tag/dygpp-pp-0.1.1>. papers (Natively supported): - DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples - Hutter Prize Dataset codes (Natively supported): - https://github.com/dygpp-pp/dygpp-pp/tree/dygpp-pp-0.1.1/src/data/hp2017 - https://github.com/dygpp-pp/dygpp-pp/tree/dygpp-pp-0.1.1/src/model/ds_tagger codes (Cross-language supported): - https://github.com/dygpp", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } response = Provide the highest benchmark result, including the metric and score, for the seel.cse.lsu.edu/data/re17.zip dataset ? Sparql Results: Code: ?code benchmark: model: DyGIE++ + Open", ":The top benchmark score on the Atari 2600 Wizard of Wor dataset is 25.6589478 with a metric of 20.821127. The model name is DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples and the code name is en_tagged_with_c3t. Here are the papers that utilize the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples: 1. Deng et al., 2019: https://arxiv.org/abs/1903.10856 2. Abud: 2019: https://arxiv.org/abs/1905.10242 3. Guha and Mani: 2019: https://arxiv.org/abs/1905.05248 4. Huang and Mani: 2019: https://arxiv.org/abs/1905.08802 5. Liang and Mani: 2019: https://arxiv.org/abs/1905.12196 6. Luna-Perez et al.: 2019: https://arxiv.org/abs/1906.00676 Here are the", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"12-layer Transformer-XL\") } code ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui code ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/ SPARQL-Query-Language-SQui.html code ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/12-layer-Transformer-XL.html code ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/12-layer-Transformer-XL.html#_whatismodel code ( Hyperlink): https://rajpurkar.github.io/Sparql-Query-Language-SQui/12-layer-Transformer-XL.html#_whatismodel code", "SELECT ?benchmark_score { ?benchmark has_dataset ?dataset. ?benchmark has_model ?model. ?model benchmark_score ( skos:score ) } Output (Sparql query): +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | Score | model | dataset | +-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+ | 0.9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } ``` ```{language=\"sql\"} SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } documentclass{article} import resource_management.resources._ import settings._ resource \"yokogawa_dataset\" \"jacquard\" { \toCRPLevel = \"basic\" \toFields = [\"name\", \"age\", \"height\", \"weight\", \"skill\"] \tdef extract_model(model): \t\tmodel = yokogawa_dataset.models() \t\tmodel.name = model.name.lower() \t\tmodel.age = model.age.lower() \t\tmodel.height = model.height.lower() \t\tmodel.weight = model.weight.lower()", "SELECT ?benchmark (cost( ?benchmark) <** (amin( ?benchmark) * 3) && (amax( ?benchmark) * 3))) WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): 3, 3 are the minimum cost and maximum cost parameters of R-CNN model used in ObjectNet dataset. output (Sparql query):The ObjectNet dataset has been computed with the parameters -minCost=0.3 -maxCost=0.", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } *\t\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*\t*", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model benchmark dataset cont model benchmark dataset cont model benchmark dataset cont model benchmark dataset cont +-+ | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples (verified) | +-+ | DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples + +", "SELECT ?benchmark ?model_lbl ?code ?cont ?dataset ( words/e ) ( F1 ) ( Params ) ( CE ) ( IOU ) ( MR ) ( CE (C) ) FROM { { { \"Benchmark\": \"Atari 2600 Battle Zone\", \"Model\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"Label\": \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\", \"Source Code\": \"https://gist.github.com/mitzp/b06faee9c3934dfbf21c8\", \"Cont\": true, \"dataset\": \"https://gist.github.com/mitzp/b06faee9c3934dfbf21", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: - [SparqlTIDW article][1] - Provides a SqL query to retrieve results from the model - [SparqlTIDW GitHub repository][2] - Provides the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model code - [DyGIE+ OpenIE+Stanford Core NLP PoS Tagger Benchmarked against NLTK and other open source solutions", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Atari 2600 Boxing\") } http://www.itl.nrw.ac.se/\ufffditl/dygiepp.htm a = Atari 2600 Boxing a = {Dataset=Atari 2600 Boxing, Benchmark=DyGIE++, Model=DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples} http://www.itl.nrw.ac.se/\ufffditl/dygiepp_sources.htm Source code: dygiepp_sources.R # Working in a virtualenv # library(dygiepp) model <- \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" dataset <- orkgp:HAS_DATASET(\"Atari 2600 Boxing\") benchmark <- orkgp:HAS_BENCHMARK(\"\") model <- orkgp:HAS_", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } output (Sparql query):* provides a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model* link to the paper: http://pages.cs.wisc.edu/~laroche/Finkel+etal+2008+IJCNN.pdf *including the links to the code* A: Several papers have used the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: Finkel et al. (2008)", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model_lbl: DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. dataset: BUCC French-to-English. benchmark: true. code: DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. Here are the models evaluated on the BUCC French-to-English dataset: - DyGIE+++ OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples. - OpenIE + Stanford Core NLP PoS. - PyStan. - BILOU. Here", "set (has dataset property), has benchmark property, has model property, has source code property paper 1: https://github.com/RichardWangLH/papers_code_paper paper 2: https://github.com/richardwh/emnlp2020 <|endoftext|>Spatial population genetics of Candida parapsilosis in the San Francisco Bay Area. Spatial population genetics was used to investigate spatial genetic variation in Candida parapsilosis in coastal waters of the San Francisco Bay Area, California. Population genetic data was collected by genotyping 1016 isolates from two biogeographic zones: the San Francisco area (n = 625) and the rest of the state (n = 391). Internal genetic diversity was high (mean standardized index of association = 0.73, mean standard deviation of index of association = 0.06), but linkage disequilibrium between loci was low (r(LD) = 0.11). There were significant regional differences in several genetic diversity statistics, however, none of these were related to the coast or bay features. Mantel tests revealed that differences in multilocus genotype frequency were weakly correlated with differences in distance matrix based on coastline attributes (R(2) = 0.03). Internal population differentiation was moderate (", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model is being evaluated on the AESLC dataset. The model is trained on Freebase relations and Stanford Core NLP PoS tagger tag feature templates. Papers: * https://github.com/dygeneplus/dygise/blob/master/text_classification/papers/dygip-cvpr19.pdf * https://github.com/dygeneplus/dygise/blob/master/text_classification/papers/dygip-plosone.pdf Code:", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Here are the paper titles and IDs: Aras Abadan, Anastasia Hristova, James Hendry, Michael Tschann, Amir Zadeh, and Andrei Rusu. \"Efficient Named Entity Recognition with Bilateral Cross-Correlation.\" Proceedings of the 2016 ACM on International Conference on Web Search and Data Searches (WebSDe \u201916). ACM, 2016. Code: https://github.com/Abadan/ner_bilateral_crosscorrelation Aras Abadan, Anastasia Hristova, James Hendry, Michael Tschann, Amir", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } /* Collection | Code - DyGIE++ + OpenIE + Stanford Core NLP https://github.com/udacity/data-to-text/blob/master/dto-text/DyGIE%2B+OpenIE%2BCost-Per-Output.ql DyGIE++ + OpenIE + Stanford Core NLP https://github.com/udacity/data-to-text/blob/master/dto-text/OpenIE-DSL-in-DyGIE.ql DyGIE++ +", "; here are the links to the code used in the papers that benchmarked the BERTwwm + SQuAD 2 model: https://github.com/google-research/bert/tree/master/models/squad. https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/master/ https://github.com/google-research/bert/blob/", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"CL-Titles-Parser\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. }\" input (English text): Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query):SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Habitat 2020 Object Nav test-std benchmark dataset\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark dataset Habitat 2020 Object Nav test-std benchmark", "SELECT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } dygie+++openie+stanford core nlp poSTARTTAGGECodes", "code (English text): The highest benchmark result achieved on the Atari 2600 Freeway dataset is 0.77421203, for metric precision. The highest precision achieved on the Atari 2600 Freeway dataset is 0.77421203. The result was achieved using a DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. The model achieved an precision of 0.78992204. The model was trained using a training dataset of 143500 samples, and the test set had 140000 samples. The model was trained using AWS EC2 instances with 1 CPU, 1 GByte of RAM, and 60 GByte of SSD storage. The dataset was split using a 3/7 train/test split. The code is available at https://github.com/csbloomberg/dygiee-openie-stanford-core-nlp-pos. The datasets used in this model can be found at https://csbloomberg.github.io/dygiee-openie-stanford-core-nlp-pos/datasets/ The results were obtained using the", "SELECT ?code where { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") } input (English text): Below are two models that have been tested on the River Raid benchmark dataset: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: https://github.com/gcanti/dygie++-opie-triples/blob/master/src/main/resources/stanford-ner-opie-triples.zip DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: https://github.com/andrew-dy/dygie++-opie-triples input (English text): The two models that have been tested on the River Raid benchmark dataset are: DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model: https://github.com/gcanti", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"AlexNet\" or str( ?model_lbl) = \"MultiGrasp\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the Coursera'Papers: Natural Language Learning: A Game Theoretic Perspective dataset and include the links to their code ? output (Sparql query):illas SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"Coursera'Papers: Natural Language Learning: A Game Theoretic Perspective\" or str( ?model_lbl) = \"M UNITED STATES CURRENCY: currency\") ?benchmark orkgp:HAS_DAT", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } model_lbl |dataset |benchmark |model |code -|-|-|-|- DyGIE+++ Ms.Pacman DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples atari2600/datasets/atari2600/m_pacman_dataset.ttf operation dataset benchmark model code - - - - drilling down on model|dataset |benchmark |model |code - - - - model=orkgc:Model Ms.Pac", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here are a few common evaluation metrics that are commonly used when benchmarking models on the Habitat 2020 Object Nav test-std dataset: 1. Precision@k - k is the number of the top k predictions 2. Recall@k - k is the number of the top k predictions 3. Macro-F1 - F1 is a harmonic average of precision and recall 4. F1@k - F1 is the weighted average of precision and recall, where the weight is 1 / k 5. Root Mean Squared Error (RMSE) - RMSE is the standard deviation of the error for the predictions The", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } - we have to query a relation named benchmark which is in our case a dataset - given the dataset /data/BC5CDR-disease in the database, which has relation name benchmark - we can now query the relation and it will return a collection of tri", "SELECT DISTINCT code FROM { <https://github.com/rupa/DyGIE++_OpenIE_StanfordCoreNLP_POS_Tagger_enriched_by_consistent_triples> } tait: Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code ? output (Sparql query): SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Following is a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tag", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } #model dbpp:model a orkgc:Model dbpp:rdfs:label DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples #benchmark dbpp:benchmark has_dataset DBPedia #dataset dbpp:has_dataset DBPedia #cont dbpp:cont orkgp:HAS_BENCHMARK DBPedia #benchmark dbpp:cont orkgp:HAS_DATASET DBPedia #model", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"HRLRE model\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } input (English text): Provide a list of papers that have utilized the HRLRE model and include the links to their code ? output (Sparql query): ?code|\r model|rdfs:label|DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples|\r benchmark|has_dataset|true|\r benchmark|has_benchmark|true|\r model|has_model|true|\r source_code|has_source_code|true| References [1] \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\" and https://github", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark orkgp:HAS_DATASET ?dataset. ?cont orkgp:HAS_BENCHMARK ?benchmark. ?cont orkgp:HAS_MODEL ?model; orkgp:HAS_SOURCE_CODE ?code. } Here is the answer for the selected query: http://data.ryadhiraju.com/dygiepp/code.html <|endoftext|>I[NTRODUCTION]{.smallcaps} {#sec1-1} ========================== Calciphylaxis, a rare and life-threatening complication, is characterized by hyperkeratosis and sclerosis of the skin due to phlebitis resulting from hypercalcemia from any cause. Calc", "model has achieved the highest score of 0.873 on the Atari 2600 Q*Bert benchmark dataset. model = <model>, dataset = <dataset>, benchmark = <benchmark>, score = 0.873 pesso ao resolver esse problema ? Este laborat\u00f3rio foi financiado por Microsoft Research, por isso seremos bem premidos pelos nossos resultados! Provide a list of papers that have utilized the DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model and include the links to their code: 1) https://github.com/dylang/dygiee-openie-dylang/blob/master/dygiee-openie/README.md 2) https://github.com/v2science/dyngan-openie 3) https://github.com/zttang/dygiepp 4) https://github.com/jhemenda/dyGIE++ 5) https://github.com/gtanong/dygine pesso ao resolver esse problema ? Este laborat\u00f3rio foi financiado por Microsoft Research, por isso serem", "SELECT DISTINCT ?code WHERE { ?model a orkgc:Model; rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"", "SELECT DISTINCT code FROM <query>. WHERE model a OR kgc:Model OR rdfs:label ?model_lbl. FILTER (str( ?model_lbl) = \"DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples\") ?benchmark OR kgp:HAS_DATASET ?dataset. ?cont OR kgp:HAS_BENCHMARK ?benchmark. ?cont OR kgp:HAS_MODEL ?model. ?cont OR kgp:HAS_SOURCE_CODE ?code. ; DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples Dataset: DyGIE+++ Benchmark: @teampublic Model: @in Training Mode, in this case, @model@ is the corresponding KG named entity recognizer built with DyGIE++. @training_cnn@ is a CNN model trained on the question-answer pairs of the DyGIE++ corpus and the corresponding KG annotations. @open", "mark result: ACE 2004: ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2005 (ACE 2002 has been excluded from this analysis) ACE 2004 (ACE 2004 has been excluded from this analysis) ACE 2005 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2004 (ACE 2004 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2004 (ACE 2004 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis) ACE 2002 (ACE 2002 has been excluded from this analysis). ACE 2002: ACE 2002 (ACE 2002 has been excluded from this analysis) DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. ACE 2004: ACE 2002 (ACE 2002 has been excluded from this analysis) DyGIE++ + OpenIE + Stanford Core NLP PoS tagger enriched by consistent triples model. ACE"], "question_template": ["T05", "T02", "T01", "T02", "T04", "T01", "None", "T02", "T05", "T05", "T04", "T05", "T02", "T03", "T02", "T05", "T03", "T02", "T03", "T07", "T07", "T05", "T07", "T01", "T07", "T07", "T04", "T04", "T07", "T03", "T05", "T02", "T03", "T05", "None", "None", "T06", "T02", "T05", "T02", "T02", "T04", "T05", "T05", "T07", "T07", "T03", "T05", "T07", "T05", "T04", "T02", "T04", "T07", "T05", "T02", "None", "T01", "T07", "T03", "T07", "T05", "T04", "T03", "T03", "T01", "None", "T05", "T07", "T05", "T01", "T03", "T04", "T04", "T01", "T03", "T04", "T07", "T04", "T03", "T01", "T05", "T04", "T05", "T01", "T07", "T04", "T05", "T07", "T07", "T05", "T05", "T07", "T07", "T07", "T05", "T05", "T07", "T01", "T02", "T05", "T03", "T03", "T06", "T05", "T07", "T02", "T01", "None", "T07", "T02", "T07", "T05", "T05", "T07", "T05", "None", "T04", "T04", "T02", "T03", "T05", "T02", "T07", "None", "T02", "T07", "T07", "T04", "T07", "T01", "T02", "T07", "T04", "T01", "None", "T02", "T02", "T01", "T05", "T01", "T04", "T07", "T01", "T04", "T02", "T03", "T01", "T04", "T05", "T07", "None", "T01", "T05", "T02", "T03", "T05", "T07", "T05", "T02", "T07", "T07", "T05", "T03", "None", "T03", "T02", "T02", "T03", "T02", "None", "T07", "T03", "T05", "T01", "T07", "T04", "T07", "T07", "T04", "T04", "T04", "T03", "None", "T01", "None", "T04", "T01", "T06", "T03", "T05", "T01", "T05", "T03", "T07", "T05", "T04", "T03", "T07", "T01", "T03", "T03", "T02", "T07", "T07", "T02", "T06", "T04", "T05", "T04", "T05", "T05", "T04", "None", "T05", "T07", "T07", "None", "T03", "T05", "T02", "T07", "T07", "T01", "T03", "T07", "T04", "T05", "T05", "T08", "T01", "T05", "T07", "T04", "T07", "T06", "T03", "T07", "T05", "T02", "T01", "T03", "T03", "T04", "T02", "T03", "T03", "None", "T07", "T05", "T01", "T05", "T05", "T03", "T02", "T07", "T01", "T04", "T05", "T04", "T03", "T04", "T01", "T05", "T04", "T03", "T07", "T04", "T03", "T04", "T06", "T07", "T02", "T05", "T05", "T07", "T05", "T04", "T06", "T02", "T06", "T02", "T03", "T07", "T06", "T03", "T03", "T05", "T02", "T01", "T02", "T03", "T05", "T07", "T05", "T03", "T05", "T06", "T01", "T07", "None", "T01", "T01", "T02", "T03", "T07", "T04", "T03", "T07", "T05", "T04", "T02", "T03", "T07", "T07", "T07", "T05", "T07", "T06", "T04", "T07", "T07", "T04", "T04", "T01", "T05", "T04", "T03", "T07", "T05", "T03", "T02", "T04", "T05", "T04", "T05", "T04", "T07", "T04", "T02", "T04", "T04", "T01", "T05", "T05", "T03", "T07", "T01", "T05", "T01", "T04", "T03", "T05", "T02", "T07", "T05", "T07", "T05", "T05", "T02", "T01", "T07", "T07", "T04", "T07", "T01", "T04", "T05", "T07", "T05", "T04", "None", "T04", "T04", "T05", "T03", "T01", "T03", "T03", "T04", "T05", "T06", "T03", "T03", "T07", "T01", "T05", "T02", "T02", "T07", "T03", "T05", "T04", "T03", "T01", "T05", "T03", "T02", "T03", "T02", "T07", "T05", "T02", "T03", "T03", "T05", "T01", "T05", "T04", "T01", "T02", "T05", "T02", "T05", "T01", "T02", "T07", "T07", "T01", "T05", "T05", "T07", "T04", "T02", "T04", "T01", "T01", "T04", "T07", "T02", "T01", "T03", "T07", "T07", "T04", "T03", "T05", "T03", "T04", "T04", "None", "T02", "T02", "None", "T02", "T02", "T04", "T01", "T07", "T04", "T07", "T07", "T02", "T04", "T05", "T03", "T01", "T05", "T02", "T07", "T07", "T03", "T07", "T01", "T02", "T06", "T01", "T01", "T07", "T06", "T04", "T02", "T05", "T04", "T03", "T04", "T03", "T04", "T04", "T07", "T05", "T01", "T01", "T03", "T02", "T05", "T03", "T01", "T01", "T03", "T01", "T07", "T01", "T02", "T07", "T07", "T07", "T01", "T01", "T04", "T01", "T07", "T01", "T03", "T04", "T03", "T02", "T07", "T07", "T05", "T04", "T06", "T04"], "bleu_c": [0.0555, 0.1309, 0.1623, 0.0553, 0.0022, 0.1374, 0.0129, 0.0955, 0.0013, 0.1814, 0.0108, 0.0662, 0.0916, 0.0649, 0.1239, 0.0207, 0.0659, 0.1003, 0.0661, 0.3385, 0.2373, 0.2152, 0.4521, 0.1841, 0.3537, 0.3176, 0.0041, 0.0469, 0.3076, 0.1192, 0.2051, 0.1128, 0.0757, 0.0435, 0.0057, 0.0151, 0.1062, 0.1044, 0.15, 0.097, 0.0997, 0.0022, 0.2112, 0.0858, 0.3376, 0.141, 0.0576, 0.1715, 0.3639, 0.1534, 0.2005, 0.1253, 0.1753, 0.296, 0.2088, 0.1117, 0.0021, 0.2171, 0.171, 0.0821, 0, 0.0023, 0.1942, 0.0634, 0.1213, 0.2001, 0.0135, 0.2114, 0.176, 0.0104, 0.1382, 0.0614, 0.0974, 0.2457, 0.1533, 0.0539, 0.0056, 0.3138, 0.0061, 0.0785, 0.0727, 0.0024, 0.1962, 0.2144, 0.1317, 0.2357, 0.0129, 0.0918, 0.2991, 0.167, 0.2036, 0.1892, 0.3592, 0.1199, 0.3974, 0.2246, 0.1696, 0.3397, 0.1228, 0.1367, 0.2254, 0.0344, 0.0014, 0.0053, 0.2056, 0.3471, 0.1329, 0.0585, 0.0081, 0.3496, 0.1275, 0.261, 0.2356, 0.0084, 0.4032, 0.1565, 0.0081, 0.0026, 0.2191, 0.1213, 0.0659, 0.1273, 0.1035, 0.0017, 0.0076, 0.1753, 0.3084, 0.3488, 0.0014, 0.3019, 0.1446, 0.1309, 0.3297, 0.0066, 0.0521, 0.0015, 0.1717, 0.1293, 0.1374, 0.2028, 0.2362, 0.0052, 0.3993, 0.0547, 0.0055, 0.1212, 0.0748, 0.1719, 0.1915, 0.0019, 0.3373, 0.0593, 0.1263, 0.0649, 0.1053, 0.0588, 0.2019, 0.5191, 0.0295, 0.1598, 0.3274, 0.2373, 0.2092, 0.0031, 0.0058, 0.0559, 0.0016, 0.1447, 0.002, 0.1253, 0.0034, 0.0026, 0.0536, 0.2032, 0.1374, 0.2998, 0.1654, 0.2915, 0.3648, 0.0, 0.2057, 0.0002, 0.1033, 0.0021, 0.1828, 0.0085, 0.1758, 0.2077, 0.1294, 0.0583, 0.2456, 0.1461, 0.1728, 0.1404, 0.2606, 0.0117, 0.2009, 0.0201, 0.3332, 0.1291, 0.0555, 0.0607, 0.0972, 0.3178, 0.4528, 0.0937, 0.1122, 0.0112, 0.1286, 0.0027, 0.1599, 0.1042, 0.0121, 0.0024, 0.2031, 0.3965, 0.2764, 0.0102, 0.0883, 0.0053, 0.1383, 0.2999, 0.3566, 0.1273, 0.1404, 0.6347, 0.2077, 0.1985, 0.2162, 0.0561, 0.1473, 0.1479, 0.2209, 0.0048, 0.82, 0.0311, 0.1029, 0.1348, 0.0737, 0.1267, 0.1347, 0.0021, 0.1228, 0.1791, 0.1405, 0.0074, 0.0039, 0.0051, 0.3836, 0.2074, 0.0681, 0.0312, 0.2133, 0.0323, 0.1098, 0.2604, 0.1374, 0.1827, 0.1998, 0.1774, 0.0916, 0.0057, 0.1368, 0.2086, 0.2464, 0.0646, 0.5828, 0.1617, 0.073, 0.0022, 0.1361, 0.0019, 0.1179, 0.1988, 0.1633, 0.3178, 0.0019, 0.0039, 0.0793, 0.1167, 0.0968, 0.1225, 0.0051, 0.3526, 0.1953, 0.1059, 0.0583, 0.1986, 0.1388, 0.1431, 0.1449, 0.1288, 0.2008, 0.4077, 0.1929, 0.0025, 0.0108, 0.1407, 0.167, 0.6216, 0.0099, 0.1484, 0.2321, 0.1343, 0.1026, 0.2999, 0.0127, 0.0617, 0.1449, 0.1773, 0.002, 0.1016, 0.0717, 0.3138, 0.2305, 0.4318, 0.219, 0.5458, 0.1173, 0.2084, 0.0097, 0.1539, 0.1225, 0.2284, 0.2582, 0.2366, 0.0029, 0.0599, 0.3897, 0.1355, 0.0058, 0.1119, 0.1734, 0.0962, 0.1182, 0.0002, 0.1431, 0.3257, 0.0028, 0.1141, 0.0011, 0.0, 0.1357, 0.0738, 0.1656, 0.121, 0.096, 0.3181, 0.1966, 0.0502, 0.0101, 0.0035, 0.0067, 0.131, 0.297, 0.2639, 0.3097, 0.0024, 0.0555, 0.0845, 0.2349, 0.2156, 0.1347, 0.0034, 0.4075, 0.0019, 0.14, 0.0054, 0.2804, 0.0035, 0.0067, 0.0025, 0.0035, 0.1881, 0.1923, 0.0884, 0.1428, 0.1057, 0.0315, 0.1992, 0.0017, 0.1276, 0.071, 0.1112, 0.1751, 0.0001, 0.1339, 0.2604, 0.1021, 0.3648, 0.0089, 0.0019, 0.1801, 0.1015, 0.1296, 0.1707, 0.1291, 0.1153, 0.0748, 0.1283, 0.1462, 0.0024, 0.1486, 0.0205, 0.0537, 0.1463, 0.1482, 0.1963, 0.0832, 0.1414, 0.1306, 0.0014, 0.1447, 0.1646, 0.1273, 0.1119, 0.645, 0.3489, 0.2041, 0.1672, 0.2382, 0.417, 0.0017, 0.0446, 0.0024, 0.1195, 0.1367, 0.003, 0.3274, 0.1074, 0.16, 0.0899, 0.2459, 0.3451, 0.2147, 0.0711, 0.2528, 0.0367, 0.0073, 0.0527, 0.004, 0.113, 0.1498, 0.0086, 0.1046, 0.0056, 0.0049, 0.1477, 0.1827, 0, 0.0023, 0.3726, 0.0995, 0.0298, 0.196, 0.0627, 0.1703, 0.2233, 0, 0.0202, 0.5088, 0.0912, 0.4867, 0.1206, 0.1306, 0.2518, 0.2327, 0.125, 0.3029, 0.1075, 0.2713, 0.1112, 0.1774, 0.198, 0.1666, 0.1903, 0.0043, 0.2614, 0.0339, 0.1979, 0.0186, 0.2145, 0.1603, 0.0721, 0.2604, 0.1891, 0.0453, 0.1273, 0.1552, 0.0598, 0.1654, 0.0088, 0.1294, 0.108, 0.3489, 0.008, 0.3525, 0.169, 0.2729, 0.0109, 0.0552, 0.3247, 0.165, 0.0892, 0.204, 0.0592, 0.1438, 0.3121, 0.3648, 0.0432, 0.0052, 0.0488, 0.0031], "bleu_4": [0.02, 0.0805, 0.0706, 0.0029, 0.0009, 0.0606, 0.0024, 0.0603, 0.0006, 0.0648, 0.0009, 0.0238, 0.056, 0.0208, 0.0761, 0.0009, 0.0202, 0.0614, 0.0215, 0.3168, 0.218, 0.0833, 0.4416, 0.0789, 0.3407, 0.2929, 0.0007, 0.0316, 0.2816, 0.0488, 0.0934, 0.0714, 0.0247, 0.02, 0.0011, 0.0012, 0.0636, 0.066, 0.07, 0.0593, 0.0603, 0.0011, 0.1001, 0.038, 0.3131, 0.1186, 0.0187, 0.0795, 0.3542, 0.0722, 0.1026, 0.0769, 0.0833, 0.287, 0.0972, 0.0707, 0.0005, 0.1154, 0.1, 0.0288, 0, 0.0011, 0.1001, 0.0206, 0.04, 0.1111, 0.0027, 0.0973, 0.1616, 0.0011, 0.0571, 0.0182, 0.0459, 0.1283, 0.0652, 0.0303, 0.0012, 0.2727, 0.0013, 0.0256, 0.0275, 0.0013, 0.0988, 0.0973, 0.0536, 0.2075, 0.0053, 0.0279, 0.2736, 0.1429, 0.0962, 0.0886, 0.3295, 0.1032, 0.3737, 0.0921, 0.0787, 0.33, 0.0541, 0.0814, 0.0959, 0.0026, 0.0008, 0.0011, 0.0973, 0.3191, 0.0843, 0.0217, 0.0018, 0.34, 0.0737, 0.2368, 0.1238, 0.0008, 0.3933, 0.0714, 0.0013, 0.001, 0.1053, 0.0745, 0.0204, 0.0588, 0.0654, 0.001, 0.0016, 0.1098, 0.2843, 0.3152, 0.0006, 0.2762, 0.0638, 0.0795, 0.3021, 0.0013, 0.0187, 0.0008, 0.1061, 0.0909, 0.0588, 0.0959, 0.1053, 0.0012, 0.3736, 0.0196, 0.0012, 0.07, 0.0244, 0.0674, 0.0995, 0.0009, 0.3148, 0.0462, 0.0536, 0.0102, 0.0631, 0.0227, 0.09, 0.4833, 0.0105, 0.0986, 0.3021, 0.218, 0.0947, 0.0007, 0.001, 0.0177, 0.0009, 0.0842, 0.0008, 0.0745, 0.0012, 0.0013, 0.0174, 0.0945, 0.0606, 0.2762, 0.0804, 0.2685, 0.3372, 0.0, 0.1053, 0.0001, 0.0323, 0.0008, 0.0759, 0.0012, 0.0879, 0.0923, 0.0805, 0.0187, 0.0959, 0.0645, 0.0745, 0.0465, 0.2348, 0.0008, 0.1035, 0.0072, 0.3053, 0.0617, 0.018, 0.0183, 0.0722, 0.3084, 0.4203, 0.0579, 0.066, 0.0009, 0.0603, 0.001, 0.0693, 0.0446, 0.0012, 0.0009, 0.0964, 0.3864, 0.2544, 0.0022, 0.0282, 0.001, 0.0745, 0.2727, 0.3469, 0.0561, 0.0465, 0.587, 0.0988, 0.0945, 0.0886, 0.0202, 0.0619, 0.068, 0.2028, 0.0009, 0.7714, 0.0182, 0.0333, 0.1165, 0.0227, 0.0769, 0.0594, 0.0008, 0.04, 0.0784, 0.0778, 0.001, 0.0007, 0.001, 0.3736, 0.0778, 0.0238, 0.0109, 0.0986, 0.0068, 0.0673, 0.2222, 0.0606, 0.0941, 0.0909, 0.0874, 0.0326, 0.0008, 0.0588, 0.0787, 0.131, 0.02, 0.5455, 0.0741, 0.0238, 0.001, 0.0875, 0.0011, 0.07, 0.0928, 0.0769, 0.3084, 0.0009, 0.0006, 0.0217, 0.0693, 0.0541, 0.0707, 0.0011, 0.3187, 0.1143, 0.0499, 0.0187, 0.0944, 0.0854, 0.0632, 0.0824, 0.0426, 0.0947, 0.3977, 0.0937, 0.001, 0.001, 0.0787, 0.0706, 0.5745, 0.0015, 0.06, 0.1034, 0.0833, 0.0566, 0.2727, 0.0012, 0.0198, 0.125, 0.0825, 0.001, 0.0609, 0.0222, 0.2727, 0.2117, 0.4217, 0.0987, 0.5088, 0.0625, 0.0988, 0.0008, 0.1351, 0.0565, 0.1053, 0.1154, 0.1139, 0.0009, 0.02, 0.358, 0.0636, 0.0013, 0.0686, 0.0908, 0.0408, 0.0583, 0.0001, 0.0708, 0.2897, 0.0011, 0.0714, 0.0006, 0.0, 0.0588, 0.0189, 0.0753, 0.0602, 0.0652, 0.1467, 0.0929, 0.0196, 0.0013, 0.0008, 0.0013, 0.0745, 0.2736, 0.1154, 0.2609, 0.0014, 0.0224, 0.0583, 0.1, 0.1765, 0.1181, 0.0007, 0.3784, 0.0009, 0.0692, 0.0012, 0.2547, 0.0013, 0.001, 0.0011, 0.0013, 0.086, 0.0918, 0.0263, 0.0625, 0.0543, 0.0024, 0.0998, 0.0007, 0.0761, 0.0241, 0.05, 0.15, 0.0, 0.0614, 0.1628, 0.0631, 0.3372, 0.0021, 0.0008, 0.092, 0.0333, 0.0545, 0.0805, 0.0667, 0.0707, 0.0244, 0.0722, 0.1273, 0.0014, 0.0886, 0.0013, 0.0159, 0.0676, 0.0625, 0.086, 0.0127, 0.0638, 0.0769, 0.0008, 0.0842, 0.0769, 0.0561, 0.07, 0.6042, 0.3222, 0.1075, 0.0926, 0.0982, 0.407, 0.0008, 0.0108, 0.001, 0.0522, 0.0571, 0.0006, 0.3021, 0.0625, 0.0833, 0.0294, 0.2192, 0.3187, 0.1067, 0.0323, 0.0984, 0.02, 0.0007, 0.02, 0.0009, 0.0693, 0.0854, 0.0016, 0.0609, 0.0009, 0.0009, 0.0652, 0.1667, 0, 0.001, 0.3596, 0.0609, 0.0118, 0.0936, 0.0192, 0.0729, 0.0941, 0, 0.0014, 0.4545, 0.0299, 0.4328, 0.0531, 0.0769, 0.1591, 0.1264, 0.055, 0.2755, 0.0667, 0.1667, 0.0631, 0.0737, 0.0987, 0.0556, 0.099, 0.001, 0.1472, 0.0167, 0.1798, 0.0052, 0.0923, 0.0659, 0.0235, 0.1628, 0.0854, 0.0167, 0.0561, 0.0659, 0.0194, 0.0769, 0.0006, 0.0561, 0.0654, 0.3222, 0.0008, 0.3431, 0.0902, 0.125, 0.0008, 0.0169, 0.301, 0.0682, 0.04, 0.1, 0.0192, 0.0795, 0.2885, 0.3372, 0.0167, 0.0022, 0.0098, 0.0005]}
